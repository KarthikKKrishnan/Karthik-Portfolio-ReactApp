{"ast":null,"code":"/**\n * @licstart The following is the entire license notice for the\n * JavaScript code in this page\n *\n * Copyright 2023 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * JavaScript code in this page\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = root.pdfjsLib = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf\", [], () => {\n    return root.pdfjsLib = factory();\n  });else if (typeof exports === 'object') exports[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();else root[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(globalThis, () => {\n  return (\n    /******/\n    (() => {\n      // webpackBootstrap\n\n      /******/\n      \"use strict\";\n      /******/\n\n      var __webpack_modules__ = [\n        /* 0 */\n      ,\n      /* 1 */\n\n      /***/\n      (__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.VerbosityLevel = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.RenderingIntentFlag = exports.PromiseCapability = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.PageActionEventType = exports.OPS = exports.MissingPDFException = exports.MAX_IMAGE_SIZE_TO_CACHE = exports.LINE_FACTOR = exports.LINE_DESCENT_FACTOR = exports.InvalidPDFException = exports.ImageKind = exports.IDENTITY_MATRIX = exports.FormatError = exports.FeatureTest = exports.FONT_IDENTITY_MATRIX = exports.DocumentActionEventType = exports.CMapCompressionType = exports.BaseException = exports.BASELINE_FACTOR = exports.AnnotationType = exports.AnnotationReplyType = exports.AnnotationPrefix = exports.AnnotationMode = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationEditorType = exports.AnnotationEditorPrefix = exports.AnnotationEditorParamsType = exports.AnnotationBorderStyleType = exports.AnnotationActionEventType = exports.AbortException = void 0;\n        exports.assert = assert;\n        exports.bytesToString = bytesToString;\n        exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n        exports.getModificationDate = getModificationDate;\n        exports.getUuid = getUuid;\n        exports.getVerbosityLevel = getVerbosityLevel;\n        exports.info = info;\n        exports.isArrayBuffer = isArrayBuffer;\n        exports.isArrayEqual = isArrayEqual;\n        exports.isNodeJS = void 0;\n        exports.normalizeUnicode = normalizeUnicode;\n        exports.objectFromMap = objectFromMap;\n        exports.objectSize = objectSize;\n        exports.setVerbosityLevel = setVerbosityLevel;\n        exports.shadow = shadow;\n        exports.string32 = string32;\n        exports.stringToBytes = stringToBytes;\n        exports.stringToPDFString = stringToPDFString;\n        exports.stringToUTF8String = stringToUTF8String;\n        exports.unreachable = unreachable;\n        exports.utf8StringToString = utf8StringToString;\n        exports.warn = warn;\n        const isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\");\n        exports.isNodeJS = isNodeJS;\n        const IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n        exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n        const FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n        exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n        const MAX_IMAGE_SIZE_TO_CACHE = 10e6;\n        exports.MAX_IMAGE_SIZE_TO_CACHE = MAX_IMAGE_SIZE_TO_CACHE;\n        const LINE_FACTOR = 1.35;\n        exports.LINE_FACTOR = LINE_FACTOR;\n        const LINE_DESCENT_FACTOR = 0.35;\n        exports.LINE_DESCENT_FACTOR = LINE_DESCENT_FACTOR;\n        const BASELINE_FACTOR = LINE_DESCENT_FACTOR / LINE_FACTOR;\n        exports.BASELINE_FACTOR = BASELINE_FACTOR;\n        const RenderingIntentFlag = {\n          ANY: 0x01,\n          DISPLAY: 0x02,\n          PRINT: 0x04,\n          SAVE: 0x08,\n          ANNOTATIONS_FORMS: 0x10,\n          ANNOTATIONS_STORAGE: 0x20,\n          ANNOTATIONS_DISABLE: 0x40,\n          OPLIST: 0x100\n        };\n        exports.RenderingIntentFlag = RenderingIntentFlag;\n        const AnnotationMode = {\n          DISABLE: 0,\n          ENABLE: 1,\n          ENABLE_FORMS: 2,\n          ENABLE_STORAGE: 3\n        };\n        exports.AnnotationMode = AnnotationMode;\n        const AnnotationEditorPrefix = \"pdfjs_internal_editor_\";\n        exports.AnnotationEditorPrefix = AnnotationEditorPrefix;\n        const AnnotationEditorType = {\n          DISABLE: -1,\n          NONE: 0,\n          FREETEXT: 3,\n          STAMP: 13,\n          INK: 15\n        };\n        exports.AnnotationEditorType = AnnotationEditorType;\n        const AnnotationEditorParamsType = {\n          RESIZE: 1,\n          CREATE: 2,\n          FREETEXT_SIZE: 11,\n          FREETEXT_COLOR: 12,\n          FREETEXT_OPACITY: 13,\n          INK_COLOR: 21,\n          INK_THICKNESS: 22,\n          INK_OPACITY: 23\n        };\n        exports.AnnotationEditorParamsType = AnnotationEditorParamsType;\n        const PermissionFlag = {\n          PRINT: 0x04,\n          MODIFY_CONTENTS: 0x08,\n          COPY: 0x10,\n          MODIFY_ANNOTATIONS: 0x20,\n          FILL_INTERACTIVE_FORMS: 0x100,\n          COPY_FOR_ACCESSIBILITY: 0x200,\n          ASSEMBLE: 0x400,\n          PRINT_HIGH_QUALITY: 0x800\n        };\n        exports.PermissionFlag = PermissionFlag;\n        const TextRenderingMode = {\n          FILL: 0,\n          STROKE: 1,\n          FILL_STROKE: 2,\n          INVISIBLE: 3,\n          FILL_ADD_TO_PATH: 4,\n          STROKE_ADD_TO_PATH: 5,\n          FILL_STROKE_ADD_TO_PATH: 6,\n          ADD_TO_PATH: 7,\n          FILL_STROKE_MASK: 3,\n          ADD_TO_PATH_FLAG: 4\n        };\n        exports.TextRenderingMode = TextRenderingMode;\n        const ImageKind = {\n          GRAYSCALE_1BPP: 1,\n          RGB_24BPP: 2,\n          RGBA_32BPP: 3\n        };\n        exports.ImageKind = ImageKind;\n        const AnnotationType = {\n          TEXT: 1,\n          LINK: 2,\n          FREETEXT: 3,\n          LINE: 4,\n          SQUARE: 5,\n          CIRCLE: 6,\n          POLYGON: 7,\n          POLYLINE: 8,\n          HIGHLIGHT: 9,\n          UNDERLINE: 10,\n          SQUIGGLY: 11,\n          STRIKEOUT: 12,\n          STAMP: 13,\n          CARET: 14,\n          INK: 15,\n          POPUP: 16,\n          FILEATTACHMENT: 17,\n          SOUND: 18,\n          MOVIE: 19,\n          WIDGET: 20,\n          SCREEN: 21,\n          PRINTERMARK: 22,\n          TRAPNET: 23,\n          WATERMARK: 24,\n          THREED: 25,\n          REDACT: 26\n        };\n        exports.AnnotationType = AnnotationType;\n        const AnnotationReplyType = {\n          GROUP: \"Group\",\n          REPLY: \"R\"\n        };\n        exports.AnnotationReplyType = AnnotationReplyType;\n        const AnnotationFlag = {\n          INVISIBLE: 0x01,\n          HIDDEN: 0x02,\n          PRINT: 0x04,\n          NOZOOM: 0x08,\n          NOROTATE: 0x10,\n          NOVIEW: 0x20,\n          READONLY: 0x40,\n          LOCKED: 0x80,\n          TOGGLENOVIEW: 0x100,\n          LOCKEDCONTENTS: 0x200\n        };\n        exports.AnnotationFlag = AnnotationFlag;\n        const AnnotationFieldFlag = {\n          READONLY: 0x0000001,\n          REQUIRED: 0x0000002,\n          NOEXPORT: 0x0000004,\n          MULTILINE: 0x0001000,\n          PASSWORD: 0x0002000,\n          NOTOGGLETOOFF: 0x0004000,\n          RADIO: 0x0008000,\n          PUSHBUTTON: 0x0010000,\n          COMBO: 0x0020000,\n          EDIT: 0x0040000,\n          SORT: 0x0080000,\n          FILESELECT: 0x0100000,\n          MULTISELECT: 0x0200000,\n          DONOTSPELLCHECK: 0x0400000,\n          DONOTSCROLL: 0x0800000,\n          COMB: 0x1000000,\n          RICHTEXT: 0x2000000,\n          RADIOSINUNISON: 0x2000000,\n          COMMITONSELCHANGE: 0x4000000\n        };\n        exports.AnnotationFieldFlag = AnnotationFieldFlag;\n        const AnnotationBorderStyleType = {\n          SOLID: 1,\n          DASHED: 2,\n          BEVELED: 3,\n          INSET: 4,\n          UNDERLINE: 5\n        };\n        exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n        const AnnotationActionEventType = {\n          E: \"Mouse Enter\",\n          X: \"Mouse Exit\",\n          D: \"Mouse Down\",\n          U: \"Mouse Up\",\n          Fo: \"Focus\",\n          Bl: \"Blur\",\n          PO: \"PageOpen\",\n          PC: \"PageClose\",\n          PV: \"PageVisible\",\n          PI: \"PageInvisible\",\n          K: \"Keystroke\",\n          F: \"Format\",\n          V: \"Validate\",\n          C: \"Calculate\"\n        };\n        exports.AnnotationActionEventType = AnnotationActionEventType;\n        const DocumentActionEventType = {\n          WC: \"WillClose\",\n          WS: \"WillSave\",\n          DS: \"DidSave\",\n          WP: \"WillPrint\",\n          DP: \"DidPrint\"\n        };\n        exports.DocumentActionEventType = DocumentActionEventType;\n        const PageActionEventType = {\n          O: \"PageOpen\",\n          C: \"PageClose\"\n        };\n        exports.PageActionEventType = PageActionEventType;\n        const VerbosityLevel = {\n          ERRORS: 0,\n          WARNINGS: 1,\n          INFOS: 5\n        };\n        exports.VerbosityLevel = VerbosityLevel;\n        const CMapCompressionType = {\n          NONE: 0,\n          BINARY: 1\n        };\n        exports.CMapCompressionType = CMapCompressionType;\n        const OPS = {\n          dependency: 1,\n          setLineWidth: 2,\n          setLineCap: 3,\n          setLineJoin: 4,\n          setMiterLimit: 5,\n          setDash: 6,\n          setRenderingIntent: 7,\n          setFlatness: 8,\n          setGState: 9,\n          save: 10,\n          restore: 11,\n          transform: 12,\n          moveTo: 13,\n          lineTo: 14,\n          curveTo: 15,\n          curveTo2: 16,\n          curveTo3: 17,\n          closePath: 18,\n          rectangle: 19,\n          stroke: 20,\n          closeStroke: 21,\n          fill: 22,\n          eoFill: 23,\n          fillStroke: 24,\n          eoFillStroke: 25,\n          closeFillStroke: 26,\n          closeEOFillStroke: 27,\n          endPath: 28,\n          clip: 29,\n          eoClip: 30,\n          beginText: 31,\n          endText: 32,\n          setCharSpacing: 33,\n          setWordSpacing: 34,\n          setHScale: 35,\n          setLeading: 36,\n          setFont: 37,\n          setTextRenderingMode: 38,\n          setTextRise: 39,\n          moveText: 40,\n          setLeadingMoveText: 41,\n          setTextMatrix: 42,\n          nextLine: 43,\n          showText: 44,\n          showSpacedText: 45,\n          nextLineShowText: 46,\n          nextLineSetSpacingShowText: 47,\n          setCharWidth: 48,\n          setCharWidthAndBounds: 49,\n          setStrokeColorSpace: 50,\n          setFillColorSpace: 51,\n          setStrokeColor: 52,\n          setStrokeColorN: 53,\n          setFillColor: 54,\n          setFillColorN: 55,\n          setStrokeGray: 56,\n          setFillGray: 57,\n          setStrokeRGBColor: 58,\n          setFillRGBColor: 59,\n          setStrokeCMYKColor: 60,\n          setFillCMYKColor: 61,\n          shadingFill: 62,\n          beginInlineImage: 63,\n          beginImageData: 64,\n          endInlineImage: 65,\n          paintXObject: 66,\n          markPoint: 67,\n          markPointProps: 68,\n          beginMarkedContent: 69,\n          beginMarkedContentProps: 70,\n          endMarkedContent: 71,\n          beginCompat: 72,\n          endCompat: 73,\n          paintFormXObjectBegin: 74,\n          paintFormXObjectEnd: 75,\n          beginGroup: 76,\n          endGroup: 77,\n          beginAnnotation: 80,\n          endAnnotation: 81,\n          paintImageMaskXObject: 83,\n          paintImageMaskXObjectGroup: 84,\n          paintImageXObject: 85,\n          paintInlineImageXObject: 86,\n          paintInlineImageXObjectGroup: 87,\n          paintImageXObjectRepeat: 88,\n          paintImageMaskXObjectRepeat: 89,\n          paintSolidColorImageMask: 90,\n          constructPath: 91\n        };\n        exports.OPS = OPS;\n        const PasswordResponses = {\n          NEED_PASSWORD: 1,\n          INCORRECT_PASSWORD: 2\n        };\n        exports.PasswordResponses = PasswordResponses;\n        let verbosity = VerbosityLevel.WARNINGS;\n\n        function setVerbosityLevel(level) {\n          if (Number.isInteger(level)) {\n            verbosity = level;\n          }\n        }\n\n        function getVerbosityLevel() {\n          return verbosity;\n        }\n\n        function info(msg) {\n          if (verbosity >= VerbosityLevel.INFOS) {\n            console.log(`Info: ${msg}`);\n          }\n        }\n\n        function warn(msg) {\n          if (verbosity >= VerbosityLevel.WARNINGS) {\n            console.log(`Warning: ${msg}`);\n          }\n        }\n\n        function unreachable(msg) {\n          throw new Error(msg);\n        }\n\n        function assert(cond, msg) {\n          if (!cond) {\n            unreachable(msg);\n          }\n        }\n\n        function _isValidProtocol(url) {\n          switch (url?.protocol) {\n            case \"http:\":\n            case \"https:\":\n            case \"ftp:\":\n            case \"mailto:\":\n            case \"tel:\":\n              return true;\n\n            default:\n              return false;\n          }\n        }\n\n        function createValidAbsoluteUrl(url) {\n          let baseUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n          if (!url) {\n            return null;\n          }\n\n          try {\n            if (options && typeof url === \"string\") {\n              if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n                const dots = url.match(/\\./g);\n\n                if (dots?.length >= 2) {\n                  url = `http://${url}`;\n                }\n              }\n\n              if (options.tryConvertEncoding) {\n                try {\n                  url = stringToUTF8String(url);\n                } catch {}\n              }\n            }\n\n            const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n\n            if (_isValidProtocol(absoluteUrl)) {\n              return absoluteUrl;\n            }\n          } catch {}\n\n          return null;\n        }\n\n        function shadow(obj, prop, value) {\n          let nonSerializable = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n          Object.defineProperty(obj, prop, {\n            value,\n            enumerable: !nonSerializable,\n            configurable: true,\n            writable: false\n          });\n          return value;\n        }\n\n        const BaseException = function BaseExceptionClosure() {\n          function BaseException(message, name) {\n            if (this.constructor === BaseException) {\n              unreachable(\"Cannot initialize BaseException.\");\n            }\n\n            this.message = message;\n            this.name = name;\n          }\n\n          BaseException.prototype = new Error();\n          BaseException.constructor = BaseException;\n          return BaseException;\n        }();\n\n        exports.BaseException = BaseException;\n\n        class PasswordException extends BaseException {\n          constructor(msg, code) {\n            super(msg, \"PasswordException\");\n            this.code = code;\n          }\n\n        }\n\n        exports.PasswordException = PasswordException;\n\n        class UnknownErrorException extends BaseException {\n          constructor(msg, details) {\n            super(msg, \"UnknownErrorException\");\n            this.details = details;\n          }\n\n        }\n\n        exports.UnknownErrorException = UnknownErrorException;\n\n        class InvalidPDFException extends BaseException {\n          constructor(msg) {\n            super(msg, \"InvalidPDFException\");\n          }\n\n        }\n\n        exports.InvalidPDFException = InvalidPDFException;\n\n        class MissingPDFException extends BaseException {\n          constructor(msg) {\n            super(msg, \"MissingPDFException\");\n          }\n\n        }\n\n        exports.MissingPDFException = MissingPDFException;\n\n        class UnexpectedResponseException extends BaseException {\n          constructor(msg, status) {\n            super(msg, \"UnexpectedResponseException\");\n            this.status = status;\n          }\n\n        }\n\n        exports.UnexpectedResponseException = UnexpectedResponseException;\n\n        class FormatError extends BaseException {\n          constructor(msg) {\n            super(msg, \"FormatError\");\n          }\n\n        }\n\n        exports.FormatError = FormatError;\n\n        class AbortException extends BaseException {\n          constructor(msg) {\n            super(msg, \"AbortException\");\n          }\n\n        }\n\n        exports.AbortException = AbortException;\n\n        function bytesToString(bytes) {\n          if (typeof bytes !== \"object\" || bytes?.length === undefined) {\n            unreachable(\"Invalid argument for bytesToString\");\n          }\n\n          const length = bytes.length;\n          const MAX_ARGUMENT_COUNT = 8192;\n\n          if (length < MAX_ARGUMENT_COUNT) {\n            return String.fromCharCode.apply(null, bytes);\n          }\n\n          const strBuf = [];\n\n          for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n            const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n            const chunk = bytes.subarray(i, chunkEnd);\n            strBuf.push(String.fromCharCode.apply(null, chunk));\n          }\n\n          return strBuf.join(\"\");\n        }\n\n        function stringToBytes(str) {\n          if (typeof str !== \"string\") {\n            unreachable(\"Invalid argument for stringToBytes\");\n          }\n\n          const length = str.length;\n          const bytes = new Uint8Array(length);\n\n          for (let i = 0; i < length; ++i) {\n            bytes[i] = str.charCodeAt(i) & 0xff;\n          }\n\n          return bytes;\n        }\n\n        function string32(value) {\n          return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n        }\n\n        function objectSize(obj) {\n          return Object.keys(obj).length;\n        }\n\n        function objectFromMap(map) {\n          const obj = Object.create(null);\n\n          for (const [key, value] of map) {\n            obj[key] = value;\n          }\n\n          return obj;\n        }\n\n        function isLittleEndian() {\n          const buffer8 = new Uint8Array(4);\n          buffer8[0] = 1;\n          const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n          return view32[0] === 1;\n        }\n\n        function isEvalSupported() {\n          try {\n            new Function(\"\");\n            return true;\n          } catch {\n            return false;\n          }\n        }\n\n        class FeatureTest {\n          static get isLittleEndian() {\n            return shadow(this, \"isLittleEndian\", isLittleEndian());\n          }\n\n          static get isEvalSupported() {\n            return shadow(this, \"isEvalSupported\", isEvalSupported());\n          }\n\n          static get isOffscreenCanvasSupported() {\n            return shadow(this, \"isOffscreenCanvasSupported\", typeof OffscreenCanvas !== \"undefined\");\n          }\n\n          static get platform() {\n            if (typeof navigator === \"undefined\") {\n              return shadow(this, \"platform\", {\n                isWin: false,\n                isMac: false\n              });\n            }\n\n            return shadow(this, \"platform\", {\n              isWin: navigator.platform.includes(\"Win\"),\n              isMac: navigator.platform.includes(\"Mac\")\n            });\n          }\n\n          static get isCSSRoundSupported() {\n            return shadow(this, \"isCSSRoundSupported\", globalThis.CSS?.supports?.(\"width: round(1.5px, 1px)\"));\n          }\n\n        }\n\n        exports.FeatureTest = FeatureTest;\n        const hexNumbers = [...Array(256).keys()].map(n => n.toString(16).padStart(2, \"0\"));\n\n        class Util {\n          static makeHexColor(r, g, b) {\n            return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n          }\n\n          static scaleMinMax(transform, minMax) {\n            let temp;\n\n            if (transform[0]) {\n              if (transform[0] < 0) {\n                temp = minMax[0];\n                minMax[0] = minMax[1];\n                minMax[1] = temp;\n              }\n\n              minMax[0] *= transform[0];\n              minMax[1] *= transform[0];\n\n              if (transform[3] < 0) {\n                temp = minMax[2];\n                minMax[2] = minMax[3];\n                minMax[3] = temp;\n              }\n\n              minMax[2] *= transform[3];\n              minMax[3] *= transform[3];\n            } else {\n              temp = minMax[0];\n              minMax[0] = minMax[2];\n              minMax[2] = temp;\n              temp = minMax[1];\n              minMax[1] = minMax[3];\n              minMax[3] = temp;\n\n              if (transform[1] < 0) {\n                temp = minMax[2];\n                minMax[2] = minMax[3];\n                minMax[3] = temp;\n              }\n\n              minMax[2] *= transform[1];\n              minMax[3] *= transform[1];\n\n              if (transform[2] < 0) {\n                temp = minMax[0];\n                minMax[0] = minMax[1];\n                minMax[1] = temp;\n              }\n\n              minMax[0] *= transform[2];\n              minMax[1] *= transform[2];\n            }\n\n            minMax[0] += transform[4];\n            minMax[1] += transform[4];\n            minMax[2] += transform[5];\n            minMax[3] += transform[5];\n          }\n\n          static transform(m1, m2) {\n            return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n          }\n\n          static applyTransform(p, m) {\n            const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n            const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n            return [xt, yt];\n          }\n\n          static applyInverseTransform(p, m) {\n            const d = m[0] * m[3] - m[1] * m[2];\n            const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n            const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n            return [xt, yt];\n          }\n\n          static getAxialAlignedBoundingBox(r, m) {\n            const p1 = this.applyTransform(r, m);\n            const p2 = this.applyTransform(r.slice(2, 4), m);\n            const p3 = this.applyTransform([r[0], r[3]], m);\n            const p4 = this.applyTransform([r[2], r[1]], m);\n            return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n          }\n\n          static inverseTransform(m) {\n            const d = m[0] * m[3] - m[1] * m[2];\n            return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n          }\n\n          static singularValueDecompose2dScale(m) {\n            const transpose = [m[0], m[2], m[1], m[3]];\n            const a = m[0] * transpose[0] + m[1] * transpose[2];\n            const b = m[0] * transpose[1] + m[1] * transpose[3];\n            const c = m[2] * transpose[0] + m[3] * transpose[2];\n            const d = m[2] * transpose[1] + m[3] * transpose[3];\n            const first = (a + d) / 2;\n            const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n            const sx = first + second || 1;\n            const sy = first - second || 1;\n            return [Math.sqrt(sx), Math.sqrt(sy)];\n          }\n\n          static normalizeRect(rect) {\n            const r = rect.slice(0);\n\n            if (rect[0] > rect[2]) {\n              r[0] = rect[2];\n              r[2] = rect[0];\n            }\n\n            if (rect[1] > rect[3]) {\n              r[1] = rect[3];\n              r[3] = rect[1];\n            }\n\n            return r;\n          }\n\n          static intersect(rect1, rect2) {\n            const xLow = Math.max(Math.min(rect1[0], rect1[2]), Math.min(rect2[0], rect2[2]));\n            const xHigh = Math.min(Math.max(rect1[0], rect1[2]), Math.max(rect2[0], rect2[2]));\n\n            if (xLow > xHigh) {\n              return null;\n            }\n\n            const yLow = Math.max(Math.min(rect1[1], rect1[3]), Math.min(rect2[1], rect2[3]));\n            const yHigh = Math.min(Math.max(rect1[1], rect1[3]), Math.max(rect2[1], rect2[3]));\n\n            if (yLow > yHigh) {\n              return null;\n            }\n\n            return [xLow, yLow, xHigh, yHigh];\n          }\n\n          static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n            const tvalues = [],\n                  bounds = [[], []];\n            let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n            for (let i = 0; i < 2; ++i) {\n              if (i === 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n              } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n              }\n\n              if (Math.abs(a) < 1e-12) {\n                if (Math.abs(b) < 1e-12) {\n                  continue;\n                }\n\n                t = -c / b;\n\n                if (0 < t && t < 1) {\n                  tvalues.push(t);\n                }\n\n                continue;\n              }\n\n              b2ac = b * b - 4 * c * a;\n              sqrtb2ac = Math.sqrt(b2ac);\n\n              if (b2ac < 0) {\n                continue;\n              }\n\n              t1 = (-b + sqrtb2ac) / (2 * a);\n\n              if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n              }\n\n              t2 = (-b - sqrtb2ac) / (2 * a);\n\n              if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n              }\n            }\n\n            let j = tvalues.length,\n                mt;\n            const jlen = j;\n\n            while (j--) {\n              t = tvalues[j];\n              mt = 1 - t;\n              bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n              bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n            }\n\n            bounds[0][jlen] = x0;\n            bounds[1][jlen] = y0;\n            bounds[0][jlen + 1] = x3;\n            bounds[1][jlen + 1] = y3;\n            bounds[0].length = bounds[1].length = jlen + 2;\n            return [Math.min(...bounds[0]), Math.min(...bounds[1]), Math.max(...bounds[0]), Math.max(...bounds[1])];\n          }\n\n        }\n\n        exports.Util = Util;\n        const PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8, 0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018, 0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d, 0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac];\n\n        function stringToPDFString(str) {\n          if (str[0] >= \"\\xEF\") {\n            let encoding;\n\n            if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n              encoding = \"utf-16be\";\n            } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n              encoding = \"utf-16le\";\n            } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n              encoding = \"utf-8\";\n            }\n\n            if (encoding) {\n              try {\n                const decoder = new TextDecoder(encoding, {\n                  fatal: true\n                });\n                const buffer = stringToBytes(str);\n                return decoder.decode(buffer);\n              } catch (ex) {\n                warn(`stringToPDFString: \"${ex}\".`);\n              }\n            }\n          }\n\n          const strBuf = [];\n\n          for (let i = 0, ii = str.length; i < ii; i++) {\n            const code = PDFStringTranslateTable[str.charCodeAt(i)];\n            strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n          }\n\n          return strBuf.join(\"\");\n        }\n\n        function stringToUTF8String(str) {\n          return decodeURIComponent(escape(str));\n        }\n\n        function utf8StringToString(str) {\n          return unescape(encodeURIComponent(str));\n        }\n\n        function isArrayBuffer(v) {\n          return typeof v === \"object\" && v?.byteLength !== undefined;\n        }\n\n        function isArrayEqual(arr1, arr2) {\n          if (arr1.length !== arr2.length) {\n            return false;\n          }\n\n          for (let i = 0, ii = arr1.length; i < ii; i++) {\n            if (arr1[i] !== arr2[i]) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n        function getModificationDate() {\n          let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n          const buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), date.getUTCDate().toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")];\n          return buffer.join(\"\");\n        }\n\n        class PromiseCapability {\n          #settled = false;\n\n          constructor() {\n            this.promise = new Promise((resolve, reject) => {\n              this.resolve = data => {\n                this.#settled = true;\n                resolve(data);\n              };\n\n              this.reject = reason => {\n                this.#settled = true;\n                reject(reason);\n              };\n            });\n          }\n\n          get settled() {\n            return this.#settled;\n          }\n\n        }\n\n        exports.PromiseCapability = PromiseCapability;\n        let NormalizeRegex = null;\n        let NormalizationMap = null;\n\n        function normalizeUnicode(str) {\n          if (!NormalizeRegex) {\n            NormalizeRegex = /([\\u00a0\\u00b5\\u037e\\u0eb3\\u2000-\\u200a\\u202f\\u2126\\ufb00-\\ufb04\\ufb06\\ufb20-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufba1\\ufba4-\\ufba9\\ufbae-\\ufbb1\\ufbd3-\\ufbdc\\ufbde-\\ufbe7\\ufbea-\\ufbf8\\ufbfc-\\ufbfd\\ufc00-\\ufc5d\\ufc64-\\ufcf1\\ufcf5-\\ufd3d\\ufd88\\ufdf4\\ufdfa-\\ufdfb\\ufe71\\ufe77\\ufe79\\ufe7b\\ufe7d]+)|(\\ufb05+)/gu;\n            NormalizationMap = new Map([[\"ﬅ\", \"ſt\"]]);\n          }\n\n          return str.replaceAll(NormalizeRegex, (_, p1, p2) => {\n            return p1 ? p1.normalize(\"NFKC\") : NormalizationMap.get(p2);\n          });\n        }\n\n        function getUuid() {\n          if (typeof crypto !== \"undefined\" && typeof crypto?.randomUUID === \"function\") {\n            return crypto.randomUUID();\n          }\n\n          const buf = new Uint8Array(32);\n\n          if (typeof crypto !== \"undefined\" && typeof crypto?.getRandomValues === \"function\") {\n            crypto.getRandomValues(buf);\n          } else {\n            for (let i = 0; i < 32; i++) {\n              buf[i] = Math.floor(Math.random() * 255);\n            }\n          }\n\n          return bytesToString(buf);\n        }\n\n        const AnnotationPrefix = \"pdfjs_internal_id_\";\n        exports.AnnotationPrefix = AnnotationPrefix;\n        /***/\n      },\n      /* 2 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.RenderTask = exports.PDFWorkerUtil = exports.PDFWorker = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFDocumentLoadingTask = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.DefaultStandardFontDataFactory = exports.DefaultFilterFactory = exports.DefaultCanvasFactory = exports.DefaultCMapReaderFactory = void 0;\n        Object.defineProperty(exports, \"SVGGraphics\", {\n          enumerable: true,\n          get: function () {\n            return _displaySvg.SVGGraphics;\n          }\n        });\n        exports.build = void 0;\n        exports.getDocument = getDocument;\n        exports.version = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _annotation_storage = __w_pdfjs_require__(3);\n\n        var _display_utils = __w_pdfjs_require__(6);\n\n        var _font_loader = __w_pdfjs_require__(9);\n\n        var _displayNode_utils = __w_pdfjs_require__(10);\n\n        var _canvas = __w_pdfjs_require__(11);\n\n        var _worker_options = __w_pdfjs_require__(14);\n\n        var _message_handler = __w_pdfjs_require__(15);\n\n        var _metadata = __w_pdfjs_require__(16);\n\n        var _optional_content_config = __w_pdfjs_require__(17);\n\n        var _transport_stream = __w_pdfjs_require__(18);\n\n        var _displayFetch_stream = __w_pdfjs_require__(19);\n\n        var _displayNetwork = __w_pdfjs_require__(22);\n\n        var _displayNode_stream = __w_pdfjs_require__(23);\n\n        var _displaySvg = __w_pdfjs_require__(24);\n\n        var _xfa_text = __w_pdfjs_require__(25);\n\n        const DEFAULT_RANGE_CHUNK_SIZE = 65536;\n        const RENDERING_CANCELLED_TIMEOUT = 100;\n        const DELAYED_CLEANUP_TIMEOUT = 5000;\n        const DefaultCanvasFactory = _util.isNodeJS ? _displayNode_utils.NodeCanvasFactory : _display_utils.DOMCanvasFactory;\n        exports.DefaultCanvasFactory = DefaultCanvasFactory;\n        const DefaultCMapReaderFactory = _util.isNodeJS ? _displayNode_utils.NodeCMapReaderFactory : _display_utils.DOMCMapReaderFactory;\n        exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory;\n        const DefaultFilterFactory = _util.isNodeJS ? _displayNode_utils.NodeFilterFactory : _display_utils.DOMFilterFactory;\n        exports.DefaultFilterFactory = DefaultFilterFactory;\n        const DefaultStandardFontDataFactory = _util.isNodeJS ? _displayNode_utils.NodeStandardFontDataFactory : _display_utils.DOMStandardFontDataFactory;\n        exports.DefaultStandardFontDataFactory = DefaultStandardFontDataFactory;\n\n        function getDocument(src) {\n          if (typeof src === \"string\" || src instanceof URL) {\n            src = {\n              url: src\n            };\n          } else if ((0, _util.isArrayBuffer)(src)) {\n            src = {\n              data: src\n            };\n          }\n\n          if (typeof src !== \"object\") {\n            throw new Error(\"Invalid parameter in getDocument, need parameter object.\");\n          }\n\n          if (!src.url && !src.data && !src.range) {\n            throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n          }\n\n          const task = new PDFDocumentLoadingTask();\n          const {\n            docId\n          } = task;\n          const url = src.url ? getUrlProp(src.url) : null;\n          const data = src.data ? getDataProp(src.data) : null;\n          const httpHeaders = src.httpHeaders || null;\n          const withCredentials = src.withCredentials === true;\n          const password = src.password ?? null;\n          const rangeTransport = src.range instanceof PDFDataRangeTransport ? src.range : null;\n          const rangeChunkSize = Number.isInteger(src.rangeChunkSize) && src.rangeChunkSize > 0 ? src.rangeChunkSize : DEFAULT_RANGE_CHUNK_SIZE;\n          let worker = src.worker instanceof PDFWorker ? src.worker : null;\n          const verbosity = src.verbosity;\n          const docBaseUrl = typeof src.docBaseUrl === \"string\" && !(0, _display_utils.isDataScheme)(src.docBaseUrl) ? src.docBaseUrl : null;\n          const cMapUrl = typeof src.cMapUrl === \"string\" ? src.cMapUrl : null;\n          const cMapPacked = src.cMapPacked !== false;\n          const CMapReaderFactory = src.CMapReaderFactory || DefaultCMapReaderFactory;\n          const standardFontDataUrl = typeof src.standardFontDataUrl === \"string\" ? src.standardFontDataUrl : null;\n          const StandardFontDataFactory = src.StandardFontDataFactory || DefaultStandardFontDataFactory;\n          const ignoreErrors = src.stopAtErrors !== true;\n          const maxImageSize = Number.isInteger(src.maxImageSize) && src.maxImageSize > -1 ? src.maxImageSize : -1;\n          const isEvalSupported = src.isEvalSupported !== false;\n          const isOffscreenCanvasSupported = typeof src.isOffscreenCanvasSupported === \"boolean\" ? src.isOffscreenCanvasSupported : !_util.isNodeJS;\n          const canvasMaxAreaInBytes = Number.isInteger(src.canvasMaxAreaInBytes) ? src.canvasMaxAreaInBytes : -1;\n          const disableFontFace = typeof src.disableFontFace === \"boolean\" ? src.disableFontFace : _util.isNodeJS;\n          const fontExtraProperties = src.fontExtraProperties === true;\n          const enableXfa = src.enableXfa === true;\n          const ownerDocument = src.ownerDocument || globalThis.document;\n          const disableRange = src.disableRange === true;\n          const disableStream = src.disableStream === true;\n          const disableAutoFetch = src.disableAutoFetch === true;\n          const pdfBug = src.pdfBug === true;\n          const length = rangeTransport ? rangeTransport.length : src.length ?? NaN;\n          const useSystemFonts = typeof src.useSystemFonts === \"boolean\" ? src.useSystemFonts : !_util.isNodeJS && !disableFontFace;\n          const useWorkerFetch = typeof src.useWorkerFetch === \"boolean\" ? src.useWorkerFetch : CMapReaderFactory === _display_utils.DOMCMapReaderFactory && StandardFontDataFactory === _display_utils.DOMStandardFontDataFactory && cMapUrl && standardFontDataUrl && (0, _display_utils.isValidFetchUrl)(cMapUrl, document.baseURI) && (0, _display_utils.isValidFetchUrl)(standardFontDataUrl, document.baseURI);\n          const canvasFactory = src.canvasFactory || new DefaultCanvasFactory({\n            ownerDocument\n          });\n          const filterFactory = src.filterFactory || new DefaultFilterFactory({\n            docId,\n            ownerDocument\n          });\n          const styleElement = null;\n          (0, _util.setVerbosityLevel)(verbosity);\n          const transportFactory = {\n            canvasFactory,\n            filterFactory\n          };\n\n          if (!useWorkerFetch) {\n            transportFactory.cMapReaderFactory = new CMapReaderFactory({\n              baseUrl: cMapUrl,\n              isCompressed: cMapPacked\n            });\n            transportFactory.standardFontDataFactory = new StandardFontDataFactory({\n              baseUrl: standardFontDataUrl\n            });\n          }\n\n          if (!worker) {\n            const workerParams = {\n              verbosity,\n              port: _worker_options.GlobalWorkerOptions.workerPort\n            };\n            worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n            task._worker = worker;\n          }\n\n          const fetchDocParams = {\n            docId,\n            apiVersion: '3.11.174',\n            data,\n            password,\n            disableAutoFetch,\n            rangeChunkSize,\n            length,\n            docBaseUrl,\n            enableXfa,\n            evaluatorOptions: {\n              maxImageSize,\n              disableFontFace,\n              ignoreErrors,\n              isEvalSupported,\n              isOffscreenCanvasSupported,\n              canvasMaxAreaInBytes,\n              fontExtraProperties,\n              useSystemFonts,\n              cMapUrl: useWorkerFetch ? cMapUrl : null,\n              standardFontDataUrl: useWorkerFetch ? standardFontDataUrl : null\n            }\n          };\n          const transportParams = {\n            ignoreErrors,\n            isEvalSupported,\n            disableFontFace,\n            fontExtraProperties,\n            enableXfa,\n            ownerDocument,\n            disableAutoFetch,\n            pdfBug,\n            styleElement\n          };\n          worker.promise.then(function () {\n            if (task.destroyed) {\n              throw new Error(\"Loading aborted\");\n            }\n\n            const workerIdPromise = _fetchDocument(worker, fetchDocParams);\n\n            const networkStreamPromise = new Promise(function (resolve) {\n              let networkStream;\n\n              if (rangeTransport) {\n                networkStream = new _transport_stream.PDFDataTransportStream({\n                  length,\n                  initialData: rangeTransport.initialData,\n                  progressiveDone: rangeTransport.progressiveDone,\n                  contentDispositionFilename: rangeTransport.contentDispositionFilename,\n                  disableRange,\n                  disableStream\n                }, rangeTransport);\n              } else if (!data) {\n                const createPDFNetworkStream = params => {\n                  if (_util.isNodeJS) {\n                    return new _displayNode_stream.PDFNodeStream(params);\n                  }\n\n                  return (0, _display_utils.isValidFetchUrl)(params.url) ? new _displayFetch_stream.PDFFetchStream(params) : new _displayNetwork.PDFNetworkStream(params);\n                };\n\n                networkStream = createPDFNetworkStream({\n                  url,\n                  length,\n                  httpHeaders,\n                  withCredentials,\n                  rangeChunkSize,\n                  disableRange,\n                  disableStream\n                });\n              }\n\n              resolve(networkStream);\n            });\n            return Promise.all([workerIdPromise, networkStreamPromise]).then(function (_ref) {\n              let [workerId, networkStream] = _ref;\n\n              if (task.destroyed) {\n                throw new Error(\"Loading aborted\");\n              }\n\n              const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n              const transport = new WorkerTransport(messageHandler, task, networkStream, transportParams, transportFactory);\n              task._transport = transport;\n              messageHandler.send(\"Ready\", null);\n            });\n          }).catch(task._capability.reject);\n          return task;\n        }\n\n        async function _fetchDocument(worker, source) {\n          if (worker.destroyed) {\n            throw new Error(\"Worker was destroyed\");\n          }\n\n          const workerId = await worker.messageHandler.sendWithPromise(\"GetDocRequest\", source, source.data ? [source.data.buffer] : null);\n\n          if (worker.destroyed) {\n            throw new Error(\"Worker was destroyed\");\n          }\n\n          return workerId;\n        }\n\n        function getUrlProp(val) {\n          if (val instanceof URL) {\n            return val.href;\n          }\n\n          try {\n            return new URL(val, window.location).href;\n          } catch {\n            if (_util.isNodeJS && typeof val === \"string\") {\n              return val;\n            }\n          }\n\n          throw new Error(\"Invalid PDF url data: \" + \"either string or URL-object is expected in the url property.\");\n        }\n\n        function getDataProp(val) {\n          if (_util.isNodeJS && typeof Buffer !== \"undefined\" && val instanceof Buffer) {\n            throw new Error(\"Please provide binary data as `Uint8Array`, rather than `Buffer`.\");\n          }\n\n          if (val instanceof Uint8Array && val.byteLength === val.buffer.byteLength) {\n            return val;\n          }\n\n          if (typeof val === \"string\") {\n            return (0, _util.stringToBytes)(val);\n          }\n\n          if (typeof val === \"object\" && !isNaN(val?.length) || (0, _util.isArrayBuffer)(val)) {\n            return new Uint8Array(val);\n          }\n\n          throw new Error(\"Invalid PDF binary data: either TypedArray, \" + \"string, or array-like object is expected in the data property.\");\n        }\n\n        class PDFDocumentLoadingTask {\n          static #docId = 0;\n\n          constructor() {\n            this._capability = new _util.PromiseCapability();\n            this._transport = null;\n            this._worker = null;\n            this.docId = `d${PDFDocumentLoadingTask.#docId++}`;\n            this.destroyed = false;\n            this.onPassword = null;\n            this.onProgress = null;\n          }\n\n          get promise() {\n            return this._capability.promise;\n          }\n\n          async destroy() {\n            this.destroyed = true;\n\n            try {\n              if (this._worker?.port) {\n                this._worker._pendingDestroy = true;\n              }\n\n              await this._transport?.destroy();\n            } catch (ex) {\n              if (this._worker?.port) {\n                delete this._worker._pendingDestroy;\n              }\n\n              throw ex;\n            }\n\n            this._transport = null;\n\n            if (this._worker) {\n              this._worker.destroy();\n\n              this._worker = null;\n            }\n          }\n\n        }\n\n        exports.PDFDocumentLoadingTask = PDFDocumentLoadingTask;\n\n        class PDFDataRangeTransport {\n          constructor(length, initialData) {\n            let progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            let contentDispositionFilename = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n            this.length = length;\n            this.initialData = initialData;\n            this.progressiveDone = progressiveDone;\n            this.contentDispositionFilename = contentDispositionFilename;\n            this._rangeListeners = [];\n            this._progressListeners = [];\n            this._progressiveReadListeners = [];\n            this._progressiveDoneListeners = [];\n            this._readyCapability = new _util.PromiseCapability();\n          }\n\n          addRangeListener(listener) {\n            this._rangeListeners.push(listener);\n          }\n\n          addProgressListener(listener) {\n            this._progressListeners.push(listener);\n          }\n\n          addProgressiveReadListener(listener) {\n            this._progressiveReadListeners.push(listener);\n          }\n\n          addProgressiveDoneListener(listener) {\n            this._progressiveDoneListeners.push(listener);\n          }\n\n          onDataRange(begin, chunk) {\n            for (const listener of this._rangeListeners) {\n              listener(begin, chunk);\n            }\n          }\n\n          onDataProgress(loaded, total) {\n            this._readyCapability.promise.then(() => {\n              for (const listener of this._progressListeners) {\n                listener(loaded, total);\n              }\n            });\n          }\n\n          onDataProgressiveRead(chunk) {\n            this._readyCapability.promise.then(() => {\n              for (const listener of this._progressiveReadListeners) {\n                listener(chunk);\n              }\n            });\n          }\n\n          onDataProgressiveDone() {\n            this._readyCapability.promise.then(() => {\n              for (const listener of this._progressiveDoneListeners) {\n                listener();\n              }\n            });\n          }\n\n          transportReady() {\n            this._readyCapability.resolve();\n          }\n\n          requestDataRange(begin, end) {\n            (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n          }\n\n          abort() {}\n\n        }\n\n        exports.PDFDataRangeTransport = PDFDataRangeTransport;\n\n        class PDFDocumentProxy {\n          constructor(pdfInfo, transport) {\n            this._pdfInfo = pdfInfo;\n            this._transport = transport;\n            Object.defineProperty(this, \"getJavaScript\", {\n              value: () => {\n                (0, _display_utils.deprecated)(\"`PDFDocumentProxy.getJavaScript`, \" + \"please use `PDFDocumentProxy.getJSActions` instead.\");\n                return this.getJSActions().then(js => {\n                  if (!js) {\n                    return js;\n                  }\n\n                  const jsArr = [];\n\n                  for (const name in js) {\n                    jsArr.push(...js[name]);\n                  }\n\n                  return jsArr;\n                });\n              }\n            });\n          }\n\n          get annotationStorage() {\n            return this._transport.annotationStorage;\n          }\n\n          get filterFactory() {\n            return this._transport.filterFactory;\n          }\n\n          get numPages() {\n            return this._pdfInfo.numPages;\n          }\n\n          get fingerprints() {\n            return this._pdfInfo.fingerprints;\n          }\n\n          get isPureXfa() {\n            return (0, _util.shadow)(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n          }\n\n          get allXfaHtml() {\n            return this._transport._htmlForXfa;\n          }\n\n          getPage(pageNumber) {\n            return this._transport.getPage(pageNumber);\n          }\n\n          getPageIndex(ref) {\n            return this._transport.getPageIndex(ref);\n          }\n\n          getDestinations() {\n            return this._transport.getDestinations();\n          }\n\n          getDestination(id) {\n            return this._transport.getDestination(id);\n          }\n\n          getPageLabels() {\n            return this._transport.getPageLabels();\n          }\n\n          getPageLayout() {\n            return this._transport.getPageLayout();\n          }\n\n          getPageMode() {\n            return this._transport.getPageMode();\n          }\n\n          getViewerPreferences() {\n            return this._transport.getViewerPreferences();\n          }\n\n          getOpenAction() {\n            return this._transport.getOpenAction();\n          }\n\n          getAttachments() {\n            return this._transport.getAttachments();\n          }\n\n          getJSActions() {\n            return this._transport.getDocJSActions();\n          }\n\n          getOutline() {\n            return this._transport.getOutline();\n          }\n\n          getOptionalContentConfig() {\n            return this._transport.getOptionalContentConfig();\n          }\n\n          getPermissions() {\n            return this._transport.getPermissions();\n          }\n\n          getMetadata() {\n            return this._transport.getMetadata();\n          }\n\n          getMarkInfo() {\n            return this._transport.getMarkInfo();\n          }\n\n          getData() {\n            return this._transport.getData();\n          }\n\n          saveDocument() {\n            return this._transport.saveDocument();\n          }\n\n          getDownloadInfo() {\n            return this._transport.downloadInfoCapability.promise;\n          }\n\n          cleanup() {\n            let keepLoadedFonts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n          }\n\n          destroy() {\n            return this.loadingTask.destroy();\n          }\n\n          get loadingParams() {\n            return this._transport.loadingParams;\n          }\n\n          get loadingTask() {\n            return this._transport.loadingTask;\n          }\n\n          getFieldObjects() {\n            return this._transport.getFieldObjects();\n          }\n\n          hasJSActions() {\n            return this._transport.hasJSActions();\n          }\n\n          getCalculationOrderIds() {\n            return this._transport.getCalculationOrderIds();\n          }\n\n        }\n\n        exports.PDFDocumentProxy = PDFDocumentProxy;\n\n        class PDFPageProxy {\n          #delayedCleanupTimeout = null;\n          #pendingCleanup = false;\n\n          constructor(pageIndex, pageInfo, transport) {\n            let pdfBug = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n            this._pageIndex = pageIndex;\n            this._pageInfo = pageInfo;\n            this._transport = transport;\n            this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n            this._pdfBug = pdfBug;\n            this.commonObjs = transport.commonObjs;\n            this.objs = new PDFObjects();\n            this._maybeCleanupAfterRender = false;\n            this._intentStates = new Map();\n            this.destroyed = false;\n          }\n\n          get pageNumber() {\n            return this._pageIndex + 1;\n          }\n\n          get rotate() {\n            return this._pageInfo.rotate;\n          }\n\n          get ref() {\n            return this._pageInfo.ref;\n          }\n\n          get userUnit() {\n            return this._pageInfo.userUnit;\n          }\n\n          get view() {\n            return this._pageInfo.view;\n          }\n\n          getViewport() {\n            let {\n              scale,\n              rotation = this.rotate,\n              offsetX = 0,\n              offsetY = 0,\n              dontFlip = false\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            return new _display_utils.PageViewport({\n              viewBox: this.view,\n              scale,\n              rotation,\n              offsetX,\n              offsetY,\n              dontFlip\n            });\n          }\n\n          getAnnotations() {\n            let {\n              intent = \"display\"\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            const intentArgs = this._transport.getRenderingIntent(intent);\n\n            return this._transport.getAnnotations(this._pageIndex, intentArgs.renderingIntent);\n          }\n\n          getJSActions() {\n            return this._transport.getPageJSActions(this._pageIndex);\n          }\n\n          get filterFactory() {\n            return this._transport.filterFactory;\n          }\n\n          get isPureXfa() {\n            return (0, _util.shadow)(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n          }\n\n          async getXfa() {\n            return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n          }\n\n          render(_ref2) {\n            let {\n              canvasContext,\n              viewport,\n              intent = \"display\",\n              annotationMode = _util.AnnotationMode.ENABLE,\n              transform = null,\n              background = null,\n              optionalContentConfigPromise = null,\n              annotationCanvasMap = null,\n              pageColors = null,\n              printAnnotationStorage = null\n            } = _ref2;\n            this._stats?.time(\"Overall\");\n\n            const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, printAnnotationStorage);\n\n            this.#pendingCleanup = false;\n            this.#abortDelayedCleanup();\n\n            if (!optionalContentConfigPromise) {\n              optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n            }\n\n            let intentState = this._intentStates.get(intentArgs.cacheKey);\n\n            if (!intentState) {\n              intentState = Object.create(null);\n\n              this._intentStates.set(intentArgs.cacheKey, intentState);\n            }\n\n            if (intentState.streamReaderCancelTimeout) {\n              clearTimeout(intentState.streamReaderCancelTimeout);\n              intentState.streamReaderCancelTimeout = null;\n            }\n\n            const intentPrint = !!(intentArgs.renderingIntent & _util.RenderingIntentFlag.PRINT);\n\n            if (!intentState.displayReadyCapability) {\n              intentState.displayReadyCapability = new _util.PromiseCapability();\n              intentState.operatorList = {\n                fnArray: [],\n                argsArray: [],\n                lastChunk: false,\n                separateAnnots: null\n              };\n              this._stats?.time(\"Page Request\");\n\n              this._pumpOperatorList(intentArgs);\n            }\n\n            const complete = error => {\n              intentState.renderTasks.delete(internalRenderTask);\n\n              if (this._maybeCleanupAfterRender || intentPrint) {\n                this.#pendingCleanup = true;\n              }\n\n              this.#tryCleanup(!intentPrint);\n\n              if (error) {\n                internalRenderTask.capability.reject(error);\n\n                this._abortOperatorList({\n                  intentState,\n                  reason: error instanceof Error ? error : new Error(error)\n                });\n              } else {\n                internalRenderTask.capability.resolve();\n              }\n\n              this._stats?.timeEnd(\"Rendering\");\n              this._stats?.timeEnd(\"Overall\");\n            };\n\n            const internalRenderTask = new InternalRenderTask({\n              callback: complete,\n              params: {\n                canvasContext,\n                viewport,\n                transform,\n                background\n              },\n              objs: this.objs,\n              commonObjs: this.commonObjs,\n              annotationCanvasMap,\n              operatorList: intentState.operatorList,\n              pageIndex: this._pageIndex,\n              canvasFactory: this._transport.canvasFactory,\n              filterFactory: this._transport.filterFactory,\n              useRequestAnimationFrame: !intentPrint,\n              pdfBug: this._pdfBug,\n              pageColors\n            });\n            (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n            const renderTask = internalRenderTask.task;\n            Promise.all([intentState.displayReadyCapability.promise, optionalContentConfigPromise]).then(_ref3 => {\n              let [transparency, optionalContentConfig] = _ref3;\n\n              if (this.destroyed) {\n                complete();\n                return;\n              }\n\n              this._stats?.time(\"Rendering\");\n              internalRenderTask.initializeGraphics({\n                transparency,\n                optionalContentConfig\n              });\n              internalRenderTask.operatorListChanged();\n            }).catch(complete);\n            return renderTask;\n          }\n\n          getOperatorList() {\n            let {\n              intent = \"display\",\n              annotationMode = _util.AnnotationMode.ENABLE,\n              printAnnotationStorage = null\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            function operatorListChanged() {\n              if (intentState.operatorList.lastChunk) {\n                intentState.opListReadCapability.resolve(intentState.operatorList);\n                intentState.renderTasks.delete(opListTask);\n              }\n            }\n\n            const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, printAnnotationStorage, true);\n\n            let intentState = this._intentStates.get(intentArgs.cacheKey);\n\n            if (!intentState) {\n              intentState = Object.create(null);\n\n              this._intentStates.set(intentArgs.cacheKey, intentState);\n            }\n\n            let opListTask;\n\n            if (!intentState.opListReadCapability) {\n              opListTask = Object.create(null);\n              opListTask.operatorListChanged = operatorListChanged;\n              intentState.opListReadCapability = new _util.PromiseCapability();\n              (intentState.renderTasks ||= new Set()).add(opListTask);\n              intentState.operatorList = {\n                fnArray: [],\n                argsArray: [],\n                lastChunk: false,\n                separateAnnots: null\n              };\n              this._stats?.time(\"Page Request\");\n\n              this._pumpOperatorList(intentArgs);\n            }\n\n            return intentState.opListReadCapability.promise;\n          }\n\n          streamTextContent() {\n            let {\n              includeMarkedContent = false,\n              disableNormalization = false\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            const TEXT_CONTENT_CHUNK_SIZE = 100;\n            return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n              pageIndex: this._pageIndex,\n              includeMarkedContent: includeMarkedContent === true,\n              disableNormalization: disableNormalization === true\n            }, {\n              highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n\n              size(textContent) {\n                return textContent.items.length;\n              }\n\n            });\n          }\n\n          getTextContent() {\n            let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            if (this._transport._htmlForXfa) {\n              return this.getXfa().then(xfa => {\n                return _xfa_text.XfaText.textContent(xfa);\n              });\n            }\n\n            const readableStream = this.streamTextContent(params);\n            return new Promise(function (resolve, reject) {\n              function pump() {\n                reader.read().then(function (_ref4) {\n                  let {\n                    value,\n                    done\n                  } = _ref4;\n\n                  if (done) {\n                    resolve(textContent);\n                    return;\n                  }\n\n                  Object.assign(textContent.styles, value.styles);\n                  textContent.items.push(...value.items);\n                  pump();\n                }, reject);\n              }\n\n              const reader = readableStream.getReader();\n              const textContent = {\n                items: [],\n                styles: Object.create(null)\n              };\n              pump();\n            });\n          }\n\n          getStructTree() {\n            return this._transport.getStructTree(this._pageIndex);\n          }\n\n          _destroy() {\n            this.destroyed = true;\n            const waitOn = [];\n\n            for (const intentState of this._intentStates.values()) {\n              this._abortOperatorList({\n                intentState,\n                reason: new Error(\"Page was destroyed.\"),\n                force: true\n              });\n\n              if (intentState.opListReadCapability) {\n                continue;\n              }\n\n              for (const internalRenderTask of intentState.renderTasks) {\n                waitOn.push(internalRenderTask.completed);\n                internalRenderTask.cancel();\n              }\n            }\n\n            this.objs.clear();\n            this.#pendingCleanup = false;\n            this.#abortDelayedCleanup();\n            return Promise.all(waitOn);\n          }\n\n          cleanup() {\n            let resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            this.#pendingCleanup = true;\n            const success = this.#tryCleanup(false);\n\n            if (resetStats && success) {\n              this._stats &&= new _display_utils.StatTimer();\n            }\n\n            return success;\n          }\n\n          #tryCleanup() {\n            let delayed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            this.#abortDelayedCleanup();\n\n            if (!this.#pendingCleanup || this.destroyed) {\n              return false;\n            }\n\n            if (delayed) {\n              this.#delayedCleanupTimeout = setTimeout(() => {\n                this.#delayedCleanupTimeout = null;\n                this.#tryCleanup(false);\n              }, DELAYED_CLEANUP_TIMEOUT);\n              return false;\n            }\n\n            for (const {\n              renderTasks,\n              operatorList\n            } of this._intentStates.values()) {\n              if (renderTasks.size > 0 || !operatorList.lastChunk) {\n                return false;\n              }\n            }\n\n            this._intentStates.clear();\n\n            this.objs.clear();\n            this.#pendingCleanup = false;\n            return true;\n          }\n\n          #abortDelayedCleanup() {\n            if (this.#delayedCleanupTimeout) {\n              clearTimeout(this.#delayedCleanupTimeout);\n              this.#delayedCleanupTimeout = null;\n            }\n          }\n\n          _startRenderPage(transparency, cacheKey) {\n            const intentState = this._intentStates.get(cacheKey);\n\n            if (!intentState) {\n              return;\n            }\n\n            this._stats?.timeEnd(\"Page Request\");\n            intentState.displayReadyCapability?.resolve(transparency);\n          }\n\n          _renderPageChunk(operatorListChunk, intentState) {\n            for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n              intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n              intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n            }\n\n            intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n            intentState.operatorList.separateAnnots = operatorListChunk.separateAnnots;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n\n            if (operatorListChunk.lastChunk) {\n              this.#tryCleanup(true);\n            }\n          }\n\n          _pumpOperatorList(_ref5) {\n            let {\n              renderingIntent,\n              cacheKey,\n              annotationStorageSerializable\n            } = _ref5;\n            const {\n              map,\n              transfers\n            } = annotationStorageSerializable;\n\n            const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", {\n              pageIndex: this._pageIndex,\n              intent: renderingIntent,\n              cacheKey,\n              annotationStorage: map\n            }, transfers);\n\n            const reader = readableStream.getReader();\n\n            const intentState = this._intentStates.get(cacheKey);\n\n            intentState.streamReader = reader;\n\n            const pump = () => {\n              reader.read().then(_ref6 => {\n                let {\n                  value,\n                  done\n                } = _ref6;\n\n                if (done) {\n                  intentState.streamReader = null;\n                  return;\n                }\n\n                if (this._transport.destroyed) {\n                  return;\n                }\n\n                this._renderPageChunk(value, intentState);\n\n                pump();\n              }, reason => {\n                intentState.streamReader = null;\n\n                if (this._transport.destroyed) {\n                  return;\n                }\n\n                if (intentState.operatorList) {\n                  intentState.operatorList.lastChunk = true;\n\n                  for (const internalRenderTask of intentState.renderTasks) {\n                    internalRenderTask.operatorListChanged();\n                  }\n\n                  this.#tryCleanup(true);\n                }\n\n                if (intentState.displayReadyCapability) {\n                  intentState.displayReadyCapability.reject(reason);\n                } else if (intentState.opListReadCapability) {\n                  intentState.opListReadCapability.reject(reason);\n                } else {\n                  throw reason;\n                }\n              });\n            };\n\n            pump();\n          }\n\n          _abortOperatorList(_ref7) {\n            let {\n              intentState,\n              reason,\n              force = false\n            } = _ref7;\n\n            if (!intentState.streamReader) {\n              return;\n            }\n\n            if (intentState.streamReaderCancelTimeout) {\n              clearTimeout(intentState.streamReaderCancelTimeout);\n              intentState.streamReaderCancelTimeout = null;\n            }\n\n            if (!force) {\n              if (intentState.renderTasks.size > 0) {\n                return;\n              }\n\n              if (reason instanceof _display_utils.RenderingCancelledException) {\n                let delay = RENDERING_CANCELLED_TIMEOUT;\n\n                if (reason.extraDelay > 0 && reason.extraDelay < 1000) {\n                  delay += reason.extraDelay;\n                }\n\n                intentState.streamReaderCancelTimeout = setTimeout(() => {\n                  intentState.streamReaderCancelTimeout = null;\n\n                  this._abortOperatorList({\n                    intentState,\n                    reason,\n                    force: true\n                  });\n                }, delay);\n                return;\n              }\n            }\n\n            intentState.streamReader.cancel(new _util.AbortException(reason.message)).catch(() => {});\n            intentState.streamReader = null;\n\n            if (this._transport.destroyed) {\n              return;\n            }\n\n            for (const [curCacheKey, curIntentState] of this._intentStates) {\n              if (curIntentState === intentState) {\n                this._intentStates.delete(curCacheKey);\n\n                break;\n              }\n            }\n\n            this.cleanup();\n          }\n\n          get stats() {\n            return this._stats;\n          }\n\n        }\n\n        exports.PDFPageProxy = PDFPageProxy;\n\n        class LoopbackPort {\n          #listeners = new Set();\n          #deferred = Promise.resolve();\n\n          postMessage(obj, transfer) {\n            const event = {\n              data: structuredClone(obj, transfer ? {\n                transfer\n              } : null)\n            };\n            this.#deferred.then(() => {\n              for (const listener of this.#listeners) {\n                listener.call(this, event);\n              }\n            });\n          }\n\n          addEventListener(name, listener) {\n            this.#listeners.add(listener);\n          }\n\n          removeEventListener(name, listener) {\n            this.#listeners.delete(listener);\n          }\n\n          terminate() {\n            this.#listeners.clear();\n          }\n\n        }\n\n        exports.LoopbackPort = LoopbackPort;\n        const PDFWorkerUtil = {\n          isWorkerDisabled: false,\n          fallbackWorkerSrc: null,\n          fakeWorkerId: 0\n        };\n        exports.PDFWorkerUtil = PDFWorkerUtil;\n        {\n          if (_util.isNodeJS && typeof require === \"function\") {\n            PDFWorkerUtil.isWorkerDisabled = true;\n            PDFWorkerUtil.fallbackWorkerSrc = \"./pdf.worker.js\";\n          } else if (typeof document === \"object\") {\n            const pdfjsFilePath = document?.currentScript?.src;\n\n            if (pdfjsFilePath) {\n              PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n            }\n          }\n\n          PDFWorkerUtil.isSameOrigin = function (baseUrl, otherUrl) {\n            let base;\n\n            try {\n              base = new URL(baseUrl);\n\n              if (!base.origin || base.origin === \"null\") {\n                return false;\n              }\n            } catch {\n              return false;\n            }\n\n            const other = new URL(otherUrl, base);\n            return base.origin === other.origin;\n          };\n\n          PDFWorkerUtil.createCDNWrapper = function (url) {\n            const wrapper = `importScripts(\"${url}\");`;\n            return URL.createObjectURL(new Blob([wrapper]));\n          };\n        }\n\n        class PDFWorker {\n          static #workerPorts;\n\n          constructor() {\n            let {\n              name = null,\n              port = null,\n              verbosity = (0, _util.getVerbosityLevel)()\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            this.name = name;\n            this.destroyed = false;\n            this.verbosity = verbosity;\n            this._readyCapability = new _util.PromiseCapability();\n            this._port = null;\n            this._webWorker = null;\n            this._messageHandler = null;\n\n            if (port) {\n              if (PDFWorker.#workerPorts?.has(port)) {\n                throw new Error(\"Cannot use more than one PDFWorker per port.\");\n              }\n\n              (PDFWorker.#workerPorts ||= new WeakMap()).set(port, this);\n\n              this._initializeFromPort(port);\n\n              return;\n            }\n\n            this._initialize();\n          }\n\n          get promise() {\n            return this._readyCapability.promise;\n          }\n\n          get port() {\n            return this._port;\n          }\n\n          get messageHandler() {\n            return this._messageHandler;\n          }\n\n          _initializeFromPort(port) {\n            this._port = port;\n            this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n\n            this._messageHandler.on(\"ready\", function () {});\n\n            this._readyCapability.resolve();\n\n            this._messageHandler.send(\"configure\", {\n              verbosity: this.verbosity\n            });\n          }\n\n          _initialize() {\n            if (!PDFWorkerUtil.isWorkerDisabled && !PDFWorker._mainThreadWorkerMessageHandler) {\n              let {\n                workerSrc\n              } = PDFWorker;\n\n              try {\n                if (!PDFWorkerUtil.isSameOrigin(window.location.href, workerSrc)) {\n                  workerSrc = PDFWorkerUtil.createCDNWrapper(new URL(workerSrc, window.location).href);\n                }\n\n                const worker = new Worker(workerSrc);\n                const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n\n                const terminateEarly = () => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n                  messageHandler.destroy();\n                  worker.terminate();\n\n                  if (this.destroyed) {\n                    this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                  } else {\n                    this._setupFakeWorker();\n                  }\n                };\n\n                const onWorkerError = () => {\n                  if (!this._webWorker) {\n                    terminateEarly();\n                  }\n                };\n\n                worker.addEventListener(\"error\", onWorkerError);\n                messageHandler.on(\"test\", data => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n\n                  if (this.destroyed) {\n                    terminateEarly();\n                    return;\n                  }\n\n                  if (data) {\n                    this._messageHandler = messageHandler;\n                    this._port = worker;\n                    this._webWorker = worker;\n\n                    this._readyCapability.resolve();\n\n                    messageHandler.send(\"configure\", {\n                      verbosity: this.verbosity\n                    });\n                  } else {\n                    this._setupFakeWorker();\n\n                    messageHandler.destroy();\n                    worker.terminate();\n                  }\n                });\n                messageHandler.on(\"ready\", data => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n\n                  if (this.destroyed) {\n                    terminateEarly();\n                    return;\n                  }\n\n                  try {\n                    sendTest();\n                  } catch {\n                    this._setupFakeWorker();\n                  }\n                });\n\n                const sendTest = () => {\n                  const testObj = new Uint8Array();\n                  messageHandler.send(\"test\", testObj, [testObj.buffer]);\n                };\n\n                sendTest();\n                return;\n              } catch {\n                (0, _util.info)(\"The worker has been disabled.\");\n              }\n            }\n\n            this._setupFakeWorker();\n          }\n\n          _setupFakeWorker() {\n            if (!PDFWorkerUtil.isWorkerDisabled) {\n              (0, _util.warn)(\"Setting up fake worker.\");\n              PDFWorkerUtil.isWorkerDisabled = true;\n            }\n\n            PDFWorker._setupFakeWorkerGlobal.then(WorkerMessageHandler => {\n              if (this.destroyed) {\n                this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n\n                return;\n              }\n\n              const port = new LoopbackPort();\n              this._port = port;\n              const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n              const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n              WorkerMessageHandler.setup(workerHandler, port);\n              const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n              this._messageHandler = messageHandler;\n\n              this._readyCapability.resolve();\n\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity\n              });\n            }).catch(reason => {\n              this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n            });\n          }\n\n          destroy() {\n            this.destroyed = true;\n\n            if (this._webWorker) {\n              this._webWorker.terminate();\n\n              this._webWorker = null;\n            }\n\n            PDFWorker.#workerPorts?.delete(this._port);\n            this._port = null;\n\n            if (this._messageHandler) {\n              this._messageHandler.destroy();\n\n              this._messageHandler = null;\n            }\n          }\n\n          static fromPort(params) {\n            if (!params?.port) {\n              throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n            }\n\n            const cachedPort = this.#workerPorts?.get(params.port);\n\n            if (cachedPort) {\n              if (cachedPort._pendingDestroy) {\n                throw new Error(\"PDFWorker.fromPort - the worker is being destroyed.\\n\" + \"Please remember to await `PDFDocumentLoadingTask.destroy()`-calls.\");\n              }\n\n              return cachedPort;\n            }\n\n            return new PDFWorker(params);\n          }\n\n          static get workerSrc() {\n            if (_worker_options.GlobalWorkerOptions.workerSrc) {\n              return _worker_options.GlobalWorkerOptions.workerSrc;\n            }\n\n            if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n              if (!_util.isNodeJS) {\n                (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n              }\n\n              return PDFWorkerUtil.fallbackWorkerSrc;\n            }\n\n            throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n          }\n\n          static get _mainThreadWorkerMessageHandler() {\n            try {\n              return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n            } catch {\n              return null;\n            }\n          }\n\n          static get _setupFakeWorkerGlobal() {\n            const loader = async () => {\n              const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n              if (mainWorkerMessageHandler) {\n                return mainWorkerMessageHandler;\n              }\n\n              if (_util.isNodeJS && typeof require === \"function\") {\n                const worker = eval(\"require\")(this.workerSrc);\n                return worker.WorkerMessageHandler;\n              }\n\n              await (0, _display_utils.loadScript)(this.workerSrc);\n              return window.pdfjsWorker.WorkerMessageHandler;\n            };\n\n            return (0, _util.shadow)(this, \"_setupFakeWorkerGlobal\", loader());\n          }\n\n        }\n\n        exports.PDFWorker = PDFWorker;\n\n        class WorkerTransport {\n          #methodPromises = new Map();\n          #pageCache = new Map();\n          #pagePromises = new Map();\n          #passwordCapability = null;\n\n          constructor(messageHandler, loadingTask, networkStream, params, factory) {\n            this.messageHandler = messageHandler;\n            this.loadingTask = loadingTask;\n            this.commonObjs = new PDFObjects();\n            this.fontLoader = new _font_loader.FontLoader({\n              ownerDocument: params.ownerDocument,\n              styleElement: params.styleElement\n            });\n            this._params = params;\n            this.canvasFactory = factory.canvasFactory;\n            this.filterFactory = factory.filterFactory;\n            this.cMapReaderFactory = factory.cMapReaderFactory;\n            this.standardFontDataFactory = factory.standardFontDataFactory;\n            this.destroyed = false;\n            this.destroyCapability = null;\n            this._networkStream = networkStream;\n            this._fullReader = null;\n            this._lastProgress = null;\n            this.downloadInfoCapability = new _util.PromiseCapability();\n            this.setupMessageHandler();\n          }\n\n          #cacheSimpleMethod(name) {\n            let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const cachedPromise = this.#methodPromises.get(name);\n\n            if (cachedPromise) {\n              return cachedPromise;\n            }\n\n            const promise = this.messageHandler.sendWithPromise(name, data);\n            this.#methodPromises.set(name, promise);\n            return promise;\n          }\n\n          get annotationStorage() {\n            return (0, _util.shadow)(this, \"annotationStorage\", new _annotation_storage.AnnotationStorage());\n          }\n\n          getRenderingIntent(intent) {\n            let annotationMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _util.AnnotationMode.ENABLE;\n            let printAnnotationStorage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            let isOpList = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n            let renderingIntent = _util.RenderingIntentFlag.DISPLAY;\n            let annotationStorageSerializable = _annotation_storage.SerializableEmpty;\n\n            switch (intent) {\n              case \"any\":\n                renderingIntent = _util.RenderingIntentFlag.ANY;\n                break;\n\n              case \"display\":\n                break;\n\n              case \"print\":\n                renderingIntent = _util.RenderingIntentFlag.PRINT;\n                break;\n\n              default:\n                (0, _util.warn)(`getRenderingIntent - invalid intent: ${intent}`);\n            }\n\n            switch (annotationMode) {\n              case _util.AnnotationMode.DISABLE:\n                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_DISABLE;\n                break;\n\n              case _util.AnnotationMode.ENABLE:\n                break;\n\n              case _util.AnnotationMode.ENABLE_FORMS:\n                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_FORMS;\n                break;\n\n              case _util.AnnotationMode.ENABLE_STORAGE:\n                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_STORAGE;\n                const annotationStorage = renderingIntent & _util.RenderingIntentFlag.PRINT && printAnnotationStorage instanceof _annotation_storage.PrintAnnotationStorage ? printAnnotationStorage : this.annotationStorage;\n                annotationStorageSerializable = annotationStorage.serializable;\n                break;\n\n              default:\n                (0, _util.warn)(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n            }\n\n            if (isOpList) {\n              renderingIntent += _util.RenderingIntentFlag.OPLIST;\n            }\n\n            return {\n              renderingIntent,\n              cacheKey: `${renderingIntent}_${annotationStorageSerializable.hash}`,\n              annotationStorageSerializable\n            };\n          }\n\n          destroy() {\n            if (this.destroyCapability) {\n              return this.destroyCapability.promise;\n            }\n\n            this.destroyed = true;\n            this.destroyCapability = new _util.PromiseCapability();\n            this.#passwordCapability?.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n            const waitOn = [];\n\n            for (const page of this.#pageCache.values()) {\n              waitOn.push(page._destroy());\n            }\n\n            this.#pageCache.clear();\n            this.#pagePromises.clear();\n\n            if (this.hasOwnProperty(\"annotationStorage\")) {\n              this.annotationStorage.resetModified();\n            }\n\n            const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n            waitOn.push(terminated);\n            Promise.all(waitOn).then(() => {\n              this.commonObjs.clear();\n              this.fontLoader.clear();\n              this.#methodPromises.clear();\n              this.filterFactory.destroy();\n              this._networkStream?.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n\n              if (this.messageHandler) {\n                this.messageHandler.destroy();\n                this.messageHandler = null;\n              }\n\n              this.destroyCapability.resolve();\n            }, this.destroyCapability.reject);\n            return this.destroyCapability.promise;\n          }\n\n          setupMessageHandler() {\n            const {\n              messageHandler,\n              loadingTask\n            } = this;\n            messageHandler.on(\"GetReader\", (data, sink) => {\n              (0, _util.assert)(this._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n              this._fullReader = this._networkStream.getFullReader();\n\n              this._fullReader.onProgress = evt => {\n                this._lastProgress = {\n                  loaded: evt.loaded,\n                  total: evt.total\n                };\n              };\n\n              sink.onPull = () => {\n                this._fullReader.read().then(function (_ref8) {\n                  let {\n                    value,\n                    done\n                  } = _ref8;\n\n                  if (done) {\n                    sink.close();\n                    return;\n                  }\n\n                  (0, _util.assert)(value instanceof ArrayBuffer, \"GetReader - expected an ArrayBuffer.\");\n                  sink.enqueue(new Uint8Array(value), 1, [value]);\n                }).catch(reason => {\n                  sink.error(reason);\n                });\n              };\n\n              sink.onCancel = reason => {\n                this._fullReader.cancel(reason);\n\n                sink.ready.catch(readyReason => {\n                  if (this.destroyed) {\n                    return;\n                  }\n\n                  throw readyReason;\n                });\n              };\n            });\n            messageHandler.on(\"ReaderHeadersReady\", data => {\n              const headersCapability = new _util.PromiseCapability();\n              const fullReader = this._fullReader;\n              fullReader.headersReady.then(() => {\n                if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n                  if (this._lastProgress) {\n                    loadingTask.onProgress?.(this._lastProgress);\n                  }\n\n                  fullReader.onProgress = evt => {\n                    loadingTask.onProgress?.({\n                      loaded: evt.loaded,\n                      total: evt.total\n                    });\n                  };\n                }\n\n                headersCapability.resolve({\n                  isStreamingSupported: fullReader.isStreamingSupported,\n                  isRangeSupported: fullReader.isRangeSupported,\n                  contentLength: fullReader.contentLength\n                });\n              }, headersCapability.reject);\n              return headersCapability.promise;\n            });\n            messageHandler.on(\"GetRangeReader\", (data, sink) => {\n              (0, _util.assert)(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n\n              const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n\n              if (!rangeReader) {\n                sink.close();\n                return;\n              }\n\n              sink.onPull = () => {\n                rangeReader.read().then(function (_ref9) {\n                  let {\n                    value,\n                    done\n                  } = _ref9;\n\n                  if (done) {\n                    sink.close();\n                    return;\n                  }\n\n                  (0, _util.assert)(value instanceof ArrayBuffer, \"GetRangeReader - expected an ArrayBuffer.\");\n                  sink.enqueue(new Uint8Array(value), 1, [value]);\n                }).catch(reason => {\n                  sink.error(reason);\n                });\n              };\n\n              sink.onCancel = reason => {\n                rangeReader.cancel(reason);\n                sink.ready.catch(readyReason => {\n                  if (this.destroyed) {\n                    return;\n                  }\n\n                  throw readyReason;\n                });\n              };\n            });\n            messageHandler.on(\"GetDoc\", _ref10 => {\n              let {\n                pdfInfo\n              } = _ref10;\n              this._numPages = pdfInfo.numPages;\n              this._htmlForXfa = pdfInfo.htmlForXfa;\n              delete pdfInfo.htmlForXfa;\n\n              loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n            });\n            messageHandler.on(\"DocException\", function (ex) {\n              let reason;\n\n              switch (ex.name) {\n                case \"PasswordException\":\n                  reason = new _util.PasswordException(ex.message, ex.code);\n                  break;\n\n                case \"InvalidPDFException\":\n                  reason = new _util.InvalidPDFException(ex.message);\n                  break;\n\n                case \"MissingPDFException\":\n                  reason = new _util.MissingPDFException(ex.message);\n                  break;\n\n                case \"UnexpectedResponseException\":\n                  reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n                  break;\n\n                case \"UnknownErrorException\":\n                  reason = new _util.UnknownErrorException(ex.message, ex.details);\n                  break;\n\n                default:\n                  (0, _util.unreachable)(\"DocException - expected a valid Error.\");\n              }\n\n              loadingTask._capability.reject(reason);\n            });\n            messageHandler.on(\"PasswordRequest\", exception => {\n              this.#passwordCapability = new _util.PromiseCapability();\n\n              if (loadingTask.onPassword) {\n                const updatePassword = password => {\n                  if (password instanceof Error) {\n                    this.#passwordCapability.reject(password);\n                  } else {\n                    this.#passwordCapability.resolve({\n                      password\n                    });\n                  }\n                };\n\n                try {\n                  loadingTask.onPassword(updatePassword, exception.code);\n                } catch (ex) {\n                  this.#passwordCapability.reject(ex);\n                }\n              } else {\n                this.#passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n              }\n\n              return this.#passwordCapability.promise;\n            });\n            messageHandler.on(\"DataLoaded\", data => {\n              loadingTask.onProgress?.({\n                loaded: data.length,\n                total: data.length\n              });\n              this.downloadInfoCapability.resolve(data);\n            });\n            messageHandler.on(\"StartRenderPage\", data => {\n              if (this.destroyed) {\n                return;\n              }\n\n              const page = this.#pageCache.get(data.pageIndex);\n\n              page._startRenderPage(data.transparency, data.cacheKey);\n            });\n            messageHandler.on(\"commonobj\", _ref11 => {\n              let [id, type, exportedData] = _ref11;\n\n              if (this.destroyed) {\n                return;\n              }\n\n              if (this.commonObjs.has(id)) {\n                return;\n              }\n\n              switch (type) {\n                case \"Font\":\n                  const params = this._params;\n\n                  if (\"error\" in exportedData) {\n                    const exportedError = exportedData.error;\n                    (0, _util.warn)(`Error during font loading: ${exportedError}`);\n                    this.commonObjs.resolve(id, exportedError);\n                    break;\n                  }\n\n                  const inspectFont = params.pdfBug && globalThis.FontInspector?.enabled ? (font, url) => globalThis.FontInspector.fontAdded(font, url) : null;\n                  const font = new _font_loader.FontFaceObject(exportedData, {\n                    isEvalSupported: params.isEvalSupported,\n                    disableFontFace: params.disableFontFace,\n                    ignoreErrors: params.ignoreErrors,\n                    inspectFont\n                  });\n                  this.fontLoader.bind(font).catch(reason => {\n                    return messageHandler.sendWithPromise(\"FontFallback\", {\n                      id\n                    });\n                  }).finally(() => {\n                    if (!params.fontExtraProperties && font.data) {\n                      font.data = null;\n                    }\n\n                    this.commonObjs.resolve(id, font);\n                  });\n                  break;\n\n                case \"FontPath\":\n                case \"Image\":\n                case \"Pattern\":\n                  this.commonObjs.resolve(id, exportedData);\n                  break;\n\n                default:\n                  throw new Error(`Got unknown common object type ${type}`);\n              }\n            });\n            messageHandler.on(\"obj\", _ref12 => {\n              let [id, pageIndex, type, imageData] = _ref12;\n\n              if (this.destroyed) {\n                return;\n              }\n\n              const pageProxy = this.#pageCache.get(pageIndex);\n\n              if (pageProxy.objs.has(id)) {\n                return;\n              }\n\n              switch (type) {\n                case \"Image\":\n                  pageProxy.objs.resolve(id, imageData);\n\n                  if (imageData) {\n                    let length;\n\n                    if (imageData.bitmap) {\n                      const {\n                        width,\n                        height\n                      } = imageData;\n                      length = width * height * 4;\n                    } else {\n                      length = imageData.data?.length || 0;\n                    }\n\n                    if (length > _util.MAX_IMAGE_SIZE_TO_CACHE) {\n                      pageProxy._maybeCleanupAfterRender = true;\n                    }\n                  }\n\n                  break;\n\n                case \"Pattern\":\n                  pageProxy.objs.resolve(id, imageData);\n                  break;\n\n                default:\n                  throw new Error(`Got unknown object type ${type}`);\n              }\n            });\n            messageHandler.on(\"DocProgress\", data => {\n              if (this.destroyed) {\n                return;\n              }\n\n              loadingTask.onProgress?.({\n                loaded: data.loaded,\n                total: data.total\n              });\n            });\n            messageHandler.on(\"FetchBuiltInCMap\", data => {\n              if (this.destroyed) {\n                return Promise.reject(new Error(\"Worker was destroyed.\"));\n              }\n\n              if (!this.cMapReaderFactory) {\n                return Promise.reject(new Error(\"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"));\n              }\n\n              return this.cMapReaderFactory.fetch(data);\n            });\n            messageHandler.on(\"FetchStandardFontData\", data => {\n              if (this.destroyed) {\n                return Promise.reject(new Error(\"Worker was destroyed.\"));\n              }\n\n              if (!this.standardFontDataFactory) {\n                return Promise.reject(new Error(\"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"));\n              }\n\n              return this.standardFontDataFactory.fetch(data);\n            });\n          }\n\n          getData() {\n            return this.messageHandler.sendWithPromise(\"GetData\", null);\n          }\n\n          saveDocument() {\n            if (this.annotationStorage.size <= 0) {\n              (0, _util.warn)(\"saveDocument called while `annotationStorage` is empty, \" + \"please use the getData-method instead.\");\n            }\n\n            const {\n              map,\n              transfers\n            } = this.annotationStorage.serializable;\n            return this.messageHandler.sendWithPromise(\"SaveDocument\", {\n              isPureXfa: !!this._htmlForXfa,\n              numPages: this._numPages,\n              annotationStorage: map,\n              filename: this._fullReader?.filename ?? null\n            }, transfers).finally(() => {\n              this.annotationStorage.resetModified();\n            });\n          }\n\n          getPage(pageNumber) {\n            if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n              return Promise.reject(new Error(\"Invalid page request.\"));\n            }\n\n            const pageIndex = pageNumber - 1,\n                  cachedPromise = this.#pagePromises.get(pageIndex);\n\n            if (cachedPromise) {\n              return cachedPromise;\n            }\n\n            const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n              pageIndex\n            }).then(pageInfo => {\n              if (this.destroyed) {\n                throw new Error(\"Transport destroyed\");\n              }\n\n              const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.pdfBug);\n              this.#pageCache.set(pageIndex, page);\n              return page;\n            });\n            this.#pagePromises.set(pageIndex, promise);\n            return promise;\n          }\n\n          getPageIndex(ref) {\n            if (typeof ref !== \"object\" || ref === null || !Number.isInteger(ref.num) || ref.num < 0 || !Number.isInteger(ref.gen) || ref.gen < 0) {\n              return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n            }\n\n            return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n              num: ref.num,\n              gen: ref.gen\n            });\n          }\n\n          getAnnotations(pageIndex, intent) {\n            return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n              pageIndex,\n              intent\n            });\n          }\n\n          getFieldObjects() {\n            return this.#cacheSimpleMethod(\"GetFieldObjects\");\n          }\n\n          hasJSActions() {\n            return this.#cacheSimpleMethod(\"HasJSActions\");\n          }\n\n          getCalculationOrderIds() {\n            return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n          }\n\n          getDestinations() {\n            return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n          }\n\n          getDestination(id) {\n            if (typeof id !== \"string\") {\n              return Promise.reject(new Error(\"Invalid destination request.\"));\n            }\n\n            return this.messageHandler.sendWithPromise(\"GetDestination\", {\n              id\n            });\n          }\n\n          getPageLabels() {\n            return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n          }\n\n          getPageLayout() {\n            return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n          }\n\n          getPageMode() {\n            return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n          }\n\n          getViewerPreferences() {\n            return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n          }\n\n          getOpenAction() {\n            return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n          }\n\n          getAttachments() {\n            return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n          }\n\n          getDocJSActions() {\n            return this.#cacheSimpleMethod(\"GetDocJSActions\");\n          }\n\n          getPageJSActions(pageIndex) {\n            return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n              pageIndex\n            });\n          }\n\n          getStructTree(pageIndex) {\n            return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n              pageIndex\n            });\n          }\n\n          getOutline() {\n            return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n          }\n\n          getOptionalContentConfig() {\n            return this.messageHandler.sendWithPromise(\"GetOptionalContentConfig\", null).then(results => {\n              return new _optional_content_config.OptionalContentConfig(results);\n            });\n          }\n\n          getPermissions() {\n            return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n          }\n\n          getMetadata() {\n            const name = \"GetMetadata\",\n                  cachedPromise = this.#methodPromises.get(name);\n\n            if (cachedPromise) {\n              return cachedPromise;\n            }\n\n            const promise = this.messageHandler.sendWithPromise(name, null).then(results => {\n              return {\n                info: results[0],\n                metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n                contentDispositionFilename: this._fullReader?.filename ?? null,\n                contentLength: this._fullReader?.contentLength ?? null\n              };\n            });\n            this.#methodPromises.set(name, promise);\n            return promise;\n          }\n\n          getMarkInfo() {\n            return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n          }\n\n          async startCleanup() {\n            let keepLoadedFonts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (this.destroyed) {\n              return;\n            }\n\n            await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n            for (const page of this.#pageCache.values()) {\n              const cleanupSuccessful = page.cleanup();\n\n              if (!cleanupSuccessful) {\n                throw new Error(`startCleanup: Page ${page.pageNumber} is currently rendering.`);\n              }\n            }\n\n            this.commonObjs.clear();\n\n            if (!keepLoadedFonts) {\n              this.fontLoader.clear();\n            }\n\n            this.#methodPromises.clear();\n            this.filterFactory.destroy(true);\n          }\n\n          get loadingParams() {\n            const {\n              disableAutoFetch,\n              enableXfa\n            } = this._params;\n            return (0, _util.shadow)(this, \"loadingParams\", {\n              disableAutoFetch,\n              enableXfa\n            });\n          }\n\n        }\n\n        class PDFObjects {\n          #objs = Object.create(null);\n\n          #ensureObj(objId) {\n            return this.#objs[objId] ||= {\n              capability: new _util.PromiseCapability(),\n              data: null\n            };\n          }\n\n          get(objId) {\n            let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            if (callback) {\n              const obj = this.#ensureObj(objId);\n              obj.capability.promise.then(() => callback(obj.data));\n              return null;\n            }\n\n            const obj = this.#objs[objId];\n\n            if (!obj?.capability.settled) {\n              throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n            }\n\n            return obj.data;\n          }\n\n          has(objId) {\n            const obj = this.#objs[objId];\n            return obj?.capability.settled || false;\n          }\n\n          resolve(objId) {\n            let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const obj = this.#ensureObj(objId);\n            obj.data = data;\n            obj.capability.resolve();\n          }\n\n          clear() {\n            for (const objId in this.#objs) {\n              const {\n                data\n              } = this.#objs[objId];\n              data?.bitmap?.close();\n            }\n\n            this.#objs = Object.create(null);\n          }\n\n        }\n\n        class RenderTask {\n          #internalRenderTask = null;\n\n          constructor(internalRenderTask) {\n            this.#internalRenderTask = internalRenderTask;\n            this.onContinue = null;\n          }\n\n          get promise() {\n            return this.#internalRenderTask.capability.promise;\n          }\n\n          cancel() {\n            let extraDelay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n            this.#internalRenderTask.cancel(null, extraDelay);\n          }\n\n          get separateAnnots() {\n            const {\n              separateAnnots\n            } = this.#internalRenderTask.operatorList;\n\n            if (!separateAnnots) {\n              return false;\n            }\n\n            const {\n              annotationCanvasMap\n            } = this.#internalRenderTask;\n            return separateAnnots.form || separateAnnots.canvas && annotationCanvasMap?.size > 0;\n          }\n\n        }\n\n        exports.RenderTask = RenderTask;\n\n        class InternalRenderTask {\n          static #canvasInUse = new WeakSet();\n\n          constructor(_ref13) {\n            let {\n              callback,\n              params,\n              objs,\n              commonObjs,\n              annotationCanvasMap,\n              operatorList,\n              pageIndex,\n              canvasFactory,\n              filterFactory,\n              useRequestAnimationFrame = false,\n              pdfBug = false,\n              pageColors = null\n            } = _ref13;\n            this.callback = callback;\n            this.params = params;\n            this.objs = objs;\n            this.commonObjs = commonObjs;\n            this.annotationCanvasMap = annotationCanvasMap;\n            this.operatorListIdx = null;\n            this.operatorList = operatorList;\n            this._pageIndex = pageIndex;\n            this.canvasFactory = canvasFactory;\n            this.filterFactory = filterFactory;\n            this._pdfBug = pdfBug;\n            this.pageColors = pageColors;\n            this.running = false;\n            this.graphicsReadyCallback = null;\n            this.graphicsReady = false;\n            this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n            this.cancelled = false;\n            this.capability = new _util.PromiseCapability();\n            this.task = new RenderTask(this);\n            this._cancelBound = this.cancel.bind(this);\n            this._continueBound = this._continue.bind(this);\n            this._scheduleNextBound = this._scheduleNext.bind(this);\n            this._nextBound = this._next.bind(this);\n            this._canvas = params.canvasContext.canvas;\n          }\n\n          get completed() {\n            return this.capability.promise.catch(function () {});\n          }\n\n          initializeGraphics(_ref14) {\n            let {\n              transparency = false,\n              optionalContentConfig\n            } = _ref14;\n\n            if (this.cancelled) {\n              return;\n            }\n\n            if (this._canvas) {\n              if (InternalRenderTask.#canvasInUse.has(this._canvas)) {\n                throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n              }\n\n              InternalRenderTask.#canvasInUse.add(this._canvas);\n            }\n\n            if (this._pdfBug && globalThis.StepperManager?.enabled) {\n              this.stepper = globalThis.StepperManager.create(this._pageIndex);\n              this.stepper.init(this.operatorList);\n              this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n            }\n\n            const {\n              canvasContext,\n              viewport,\n              transform,\n              background\n            } = this.params;\n            this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.filterFactory, {\n              optionalContentConfig\n            }, this.annotationCanvasMap, this.pageColors);\n            this.gfx.beginDrawing({\n              transform,\n              viewport,\n              transparency,\n              background\n            });\n            this.operatorListIdx = 0;\n            this.graphicsReady = true;\n            this.graphicsReadyCallback?.();\n          }\n\n          cancel() {\n            let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n            let extraDelay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            this.running = false;\n            this.cancelled = true;\n            this.gfx?.endDrawing();\n            InternalRenderTask.#canvasInUse.delete(this._canvas);\n            this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, extraDelay));\n          }\n\n          operatorListChanged() {\n            if (!this.graphicsReady) {\n              this.graphicsReadyCallback ||= this._continueBound;\n              return;\n            }\n\n            this.stepper?.updateOperatorList(this.operatorList);\n\n            if (this.running) {\n              return;\n            }\n\n            this._continue();\n          }\n\n          _continue() {\n            this.running = true;\n\n            if (this.cancelled) {\n              return;\n            }\n\n            if (this.task.onContinue) {\n              this.task.onContinue(this._scheduleNextBound);\n            } else {\n              this._scheduleNext();\n            }\n          }\n\n          _scheduleNext() {\n            if (this._useRequestAnimationFrame) {\n              window.requestAnimationFrame(() => {\n                this._nextBound().catch(this._cancelBound);\n              });\n            } else {\n              Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n            }\n          }\n\n          async _next() {\n            if (this.cancelled) {\n              return;\n            }\n\n            this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n\n            if (this.operatorListIdx === this.operatorList.argsArray.length) {\n              this.running = false;\n\n              if (this.operatorList.lastChunk) {\n                this.gfx.endDrawing();\n                InternalRenderTask.#canvasInUse.delete(this._canvas);\n                this.callback();\n              }\n            }\n          }\n\n        }\n\n        const version = '3.11.174';\n        exports.version = version;\n        const build = 'ce8716743';\n        exports.build = build;\n        /***/\n      },\n      /* 3 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.SerializableEmpty = exports.PrintAnnotationStorage = exports.AnnotationStorage = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _editor = __w_pdfjs_require__(4);\n\n        var _murmurhash = __w_pdfjs_require__(8);\n\n        const SerializableEmpty = Object.freeze({\n          map: null,\n          hash: \"\",\n          transfers: undefined\n        });\n        exports.SerializableEmpty = SerializableEmpty;\n\n        class AnnotationStorage {\n          #modified = false;\n          #storage = new Map();\n\n          constructor() {\n            this.onSetModified = null;\n            this.onResetModified = null;\n            this.onAnnotationEditor = null;\n          }\n\n          getValue(key, defaultValue) {\n            const value = this.#storage.get(key);\n\n            if (value === undefined) {\n              return defaultValue;\n            }\n\n            return Object.assign(defaultValue, value);\n          }\n\n          getRawValue(key) {\n            return this.#storage.get(key);\n          }\n\n          remove(key) {\n            this.#storage.delete(key);\n\n            if (this.#storage.size === 0) {\n              this.resetModified();\n            }\n\n            if (typeof this.onAnnotationEditor === \"function\") {\n              for (const value of this.#storage.values()) {\n                if (value instanceof _editor.AnnotationEditor) {\n                  return;\n                }\n              }\n\n              this.onAnnotationEditor(null);\n            }\n          }\n\n          setValue(key, value) {\n            const obj = this.#storage.get(key);\n            let modified = false;\n\n            if (obj !== undefined) {\n              for (const [entry, val] of Object.entries(value)) {\n                if (obj[entry] !== val) {\n                  modified = true;\n                  obj[entry] = val;\n                }\n              }\n            } else {\n              modified = true;\n              this.#storage.set(key, value);\n            }\n\n            if (modified) {\n              this.#setModified();\n            }\n\n            if (value instanceof _editor.AnnotationEditor && typeof this.onAnnotationEditor === \"function\") {\n              this.onAnnotationEditor(value.constructor._type);\n            }\n          }\n\n          has(key) {\n            return this.#storage.has(key);\n          }\n\n          getAll() {\n            return this.#storage.size > 0 ? (0, _util.objectFromMap)(this.#storage) : null;\n          }\n\n          setAll(obj) {\n            for (const [key, val] of Object.entries(obj)) {\n              this.setValue(key, val);\n            }\n          }\n\n          get size() {\n            return this.#storage.size;\n          }\n\n          #setModified() {\n            if (!this.#modified) {\n              this.#modified = true;\n\n              if (typeof this.onSetModified === \"function\") {\n                this.onSetModified();\n              }\n            }\n          }\n\n          resetModified() {\n            if (this.#modified) {\n              this.#modified = false;\n\n              if (typeof this.onResetModified === \"function\") {\n                this.onResetModified();\n              }\n            }\n          }\n\n          get print() {\n            return new PrintAnnotationStorage(this);\n          }\n\n          get serializable() {\n            if (this.#storage.size === 0) {\n              return SerializableEmpty;\n            }\n\n            const map = new Map(),\n                  hash = new _murmurhash.MurmurHash3_64(),\n                  transfers = [];\n            const context = Object.create(null);\n            let hasBitmap = false;\n\n            for (const [key, val] of this.#storage) {\n              const serialized = val instanceof _editor.AnnotationEditor ? val.serialize(false, context) : val;\n\n              if (serialized) {\n                map.set(key, serialized);\n                hash.update(`${key}:${JSON.stringify(serialized)}`);\n                hasBitmap ||= !!serialized.bitmap;\n              }\n            }\n\n            if (hasBitmap) {\n              for (const value of map.values()) {\n                if (value.bitmap) {\n                  transfers.push(value.bitmap);\n                }\n              }\n            }\n\n            return map.size > 0 ? {\n              map,\n              hash: hash.hexdigest(),\n              transfers\n            } : SerializableEmpty;\n          }\n\n        }\n\n        exports.AnnotationStorage = AnnotationStorage;\n\n        class PrintAnnotationStorage extends AnnotationStorage {\n          #serializable;\n\n          constructor(parent) {\n            super();\n            const {\n              map,\n              hash,\n              transfers\n            } = parent.serializable;\n            const clone = structuredClone(map, transfers ? {\n              transfer: transfers\n            } : null);\n            this.#serializable = {\n              map: clone,\n              hash,\n              transfers\n            };\n          }\n\n          get print() {\n            (0, _util.unreachable)(\"Should not call PrintAnnotationStorage.print\");\n          }\n\n          get serializable() {\n            return this.#serializable;\n          }\n\n        }\n\n        exports.PrintAnnotationStorage = PrintAnnotationStorage;\n        /***/\n      },\n      /* 4 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.AnnotationEditor = void 0;\n\n        var _tools = __w_pdfjs_require__(5);\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _display_utils = __w_pdfjs_require__(6);\n\n        class AnnotationEditor {\n          #altText = \"\";\n          #altTextDecorative = false;\n          #altTextButton = null;\n          #altTextTooltip = null;\n          #altTextTooltipTimeout = null;\n          #keepAspectRatio = false;\n          #resizersDiv = null;\n          #boundFocusin = this.focusin.bind(this);\n          #boundFocusout = this.focusout.bind(this);\n          #hasBeenClicked = false;\n          #isEditing = false;\n          #isInEditMode = false;\n          _initialOptions = Object.create(null);\n          _uiManager = null;\n          _focusEventsAllowed = true;\n          _l10nPromise = null;\n          #isDraggable = false;\n          #zIndex = AnnotationEditor._zIndex++;\n          static _borderLineWidth = -1;\n          static _colorManager = new _tools.ColorManager();\n          static _zIndex = 1;\n          static SMALL_EDITOR_SIZE = 0;\n\n          constructor(parameters) {\n            if (this.constructor === AnnotationEditor) {\n              (0, _util.unreachable)(\"Cannot initialize AnnotationEditor.\");\n            }\n\n            this.parent = parameters.parent;\n            this.id = parameters.id;\n            this.width = this.height = null;\n            this.pageIndex = parameters.parent.pageIndex;\n            this.name = parameters.name;\n            this.div = null;\n            this._uiManager = parameters.uiManager;\n            this.annotationElementId = null;\n            this._willKeepAspectRatio = false;\n            this._initialOptions.isCentered = parameters.isCentered;\n            this._structTreeParentId = null;\n            const {\n              rotation,\n              rawDims: {\n                pageWidth,\n                pageHeight,\n                pageX,\n                pageY\n              }\n            } = this.parent.viewport;\n            this.rotation = rotation;\n            this.pageRotation = (360 + rotation - this._uiManager.viewParameters.rotation) % 360;\n            this.pageDimensions = [pageWidth, pageHeight];\n            this.pageTranslation = [pageX, pageY];\n            const [width, height] = this.parentDimensions;\n            this.x = parameters.x / width;\n            this.y = parameters.y / height;\n            this.isAttachedToDOM = false;\n            this.deleted = false;\n          }\n\n          get editorType() {\n            return Object.getPrototypeOf(this).constructor._type;\n          }\n\n          static get _defaultLineColor() {\n            return (0, _util.shadow)(this, \"_defaultLineColor\", this._colorManager.getHexCode(\"CanvasText\"));\n          }\n\n          static deleteAnnotationElement(editor) {\n            const fakeEditor = new FakeEditor({\n              id: editor.parent.getNextId(),\n              parent: editor.parent,\n              uiManager: editor._uiManager\n            });\n            fakeEditor.annotationElementId = editor.annotationElementId;\n            fakeEditor.deleted = true;\n\n            fakeEditor._uiManager.addToAnnotationStorage(fakeEditor);\n          }\n\n          static initialize(l10n) {\n            let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            AnnotationEditor._l10nPromise ||= new Map([\"editor_alt_text_button_label\", \"editor_alt_text_edit_button_label\", \"editor_alt_text_decorative_tooltip\"].map(str => [str, l10n.get(str)]));\n\n            if (options?.strings) {\n              for (const str of options.strings) {\n                AnnotationEditor._l10nPromise.set(str, l10n.get(str));\n              }\n            }\n\n            if (AnnotationEditor._borderLineWidth !== -1) {\n              return;\n            }\n\n            const style = getComputedStyle(document.documentElement);\n            AnnotationEditor._borderLineWidth = parseFloat(style.getPropertyValue(\"--outline-width\")) || 0;\n          }\n\n          static updateDefaultParams(_type, _value) {}\n\n          static get defaultPropertiesToUpdate() {\n            return [];\n          }\n\n          static isHandlingMimeForPasting(mime) {\n            return false;\n          }\n\n          static paste(item, parent) {\n            (0, _util.unreachable)(\"Not implemented\");\n          }\n\n          get propertiesToUpdate() {\n            return [];\n          }\n\n          get _isDraggable() {\n            return this.#isDraggable;\n          }\n\n          set _isDraggable(value) {\n            this.#isDraggable = value;\n            this.div?.classList.toggle(\"draggable\", value);\n          }\n\n          center() {\n            const [pageWidth, pageHeight] = this.pageDimensions;\n\n            switch (this.parentRotation) {\n              case 90:\n                this.x -= this.height * pageHeight / (pageWidth * 2);\n                this.y += this.width * pageWidth / (pageHeight * 2);\n                break;\n\n              case 180:\n                this.x += this.width / 2;\n                this.y += this.height / 2;\n                break;\n\n              case 270:\n                this.x += this.height * pageHeight / (pageWidth * 2);\n                this.y -= this.width * pageWidth / (pageHeight * 2);\n                break;\n\n              default:\n                this.x -= this.width / 2;\n                this.y -= this.height / 2;\n                break;\n            }\n\n            this.fixAndSetPosition();\n          }\n\n          addCommands(params) {\n            this._uiManager.addCommands(params);\n          }\n\n          get currentLayer() {\n            return this._uiManager.currentLayer;\n          }\n\n          setInBackground() {\n            this.div.style.zIndex = 0;\n          }\n\n          setInForeground() {\n            this.div.style.zIndex = this.#zIndex;\n          }\n\n          setParent(parent) {\n            if (parent !== null) {\n              this.pageIndex = parent.pageIndex;\n              this.pageDimensions = parent.pageDimensions;\n            }\n\n            this.parent = parent;\n          }\n\n          focusin(event) {\n            if (!this._focusEventsAllowed) {\n              return;\n            }\n\n            if (!this.#hasBeenClicked) {\n              this.parent.setSelected(this);\n            } else {\n              this.#hasBeenClicked = false;\n            }\n          }\n\n          focusout(event) {\n            if (!this._focusEventsAllowed) {\n              return;\n            }\n\n            if (!this.isAttachedToDOM) {\n              return;\n            }\n\n            const target = event.relatedTarget;\n\n            if (target?.closest(`#${this.id}`)) {\n              return;\n            }\n\n            event.preventDefault();\n\n            if (!this.parent?.isMultipleSelection) {\n              this.commitOrRemove();\n            }\n          }\n\n          commitOrRemove() {\n            if (this.isEmpty()) {\n              this.remove();\n            } else {\n              this.commit();\n            }\n          }\n\n          commit() {\n            this.addToAnnotationStorage();\n          }\n\n          addToAnnotationStorage() {\n            this._uiManager.addToAnnotationStorage(this);\n          }\n\n          setAt(x, y, tx, ty) {\n            const [width, height] = this.parentDimensions;\n            [tx, ty] = this.screenToPageTranslation(tx, ty);\n            this.x = (x + tx) / width;\n            this.y = (y + ty) / height;\n            this.fixAndSetPosition();\n          }\n\n          #translate(_ref15, x, y) {\n            let [width, height] = _ref15;\n            [x, y] = this.screenToPageTranslation(x, y);\n            this.x += x / width;\n            this.y += y / height;\n            this.fixAndSetPosition();\n          }\n\n          translate(x, y) {\n            this.#translate(this.parentDimensions, x, y);\n          }\n\n          translateInPage(x, y) {\n            this.#translate(this.pageDimensions, x, y);\n            this.div.scrollIntoView({\n              block: \"nearest\"\n            });\n          }\n\n          drag(tx, ty) {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.x += tx / parentWidth;\n            this.y += ty / parentHeight;\n\n            if (this.parent && (this.x < 0 || this.x > 1 || this.y < 0 || this.y > 1)) {\n              const {\n                x,\n                y\n              } = this.div.getBoundingClientRect();\n\n              if (this.parent.findNewParent(this, x, y)) {\n                this.x -= Math.floor(this.x);\n                this.y -= Math.floor(this.y);\n              }\n            }\n\n            let {\n              x,\n              y\n            } = this;\n            const [bx, by] = this.#getBaseTranslation();\n            x += bx;\n            y += by;\n            this.div.style.left = `${(100 * x).toFixed(2)}%`;\n            this.div.style.top = `${(100 * y).toFixed(2)}%`;\n            this.div.scrollIntoView({\n              block: \"nearest\"\n            });\n          }\n\n          #getBaseTranslation() {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            const {\n              _borderLineWidth\n            } = AnnotationEditor;\n            const x = _borderLineWidth / parentWidth;\n            const y = _borderLineWidth / parentHeight;\n\n            switch (this.rotation) {\n              case 90:\n                return [-x, y];\n\n              case 180:\n                return [x, y];\n\n              case 270:\n                return [x, -y];\n\n              default:\n                return [-x, -y];\n            }\n          }\n\n          fixAndSetPosition() {\n            const [pageWidth, pageHeight] = this.pageDimensions;\n            let {\n              x,\n              y,\n              width,\n              height\n            } = this;\n            width *= pageWidth;\n            height *= pageHeight;\n            x *= pageWidth;\n            y *= pageHeight;\n\n            switch (this.rotation) {\n              case 0:\n                x = Math.max(0, Math.min(pageWidth - width, x));\n                y = Math.max(0, Math.min(pageHeight - height, y));\n                break;\n\n              case 90:\n                x = Math.max(0, Math.min(pageWidth - height, x));\n                y = Math.min(pageHeight, Math.max(width, y));\n                break;\n\n              case 180:\n                x = Math.min(pageWidth, Math.max(width, x));\n                y = Math.min(pageHeight, Math.max(height, y));\n                break;\n\n              case 270:\n                x = Math.min(pageWidth, Math.max(height, x));\n                y = Math.max(0, Math.min(pageHeight - width, y));\n                break;\n            }\n\n            this.x = x /= pageWidth;\n            this.y = y /= pageHeight;\n            const [bx, by] = this.#getBaseTranslation();\n            x += bx;\n            y += by;\n            const {\n              style\n            } = this.div;\n            style.left = `${(100 * x).toFixed(2)}%`;\n            style.top = `${(100 * y).toFixed(2)}%`;\n            this.moveInDOM();\n          }\n\n          static #rotatePoint(x, y, angle) {\n            switch (angle) {\n              case 90:\n                return [y, -x];\n\n              case 180:\n                return [-x, -y];\n\n              case 270:\n                return [-y, x];\n\n              default:\n                return [x, y];\n            }\n          }\n\n          screenToPageTranslation(x, y) {\n            return AnnotationEditor.#rotatePoint(x, y, this.parentRotation);\n          }\n\n          pageTranslationToScreen(x, y) {\n            return AnnotationEditor.#rotatePoint(x, y, 360 - this.parentRotation);\n          }\n\n          #getRotationMatrix(rotation) {\n            switch (rotation) {\n              case 90:\n                {\n                  const [pageWidth, pageHeight] = this.pageDimensions;\n                  return [0, -pageWidth / pageHeight, pageHeight / pageWidth, 0];\n                }\n\n              case 180:\n                return [-1, 0, 0, -1];\n\n              case 270:\n                {\n                  const [pageWidth, pageHeight] = this.pageDimensions;\n                  return [0, pageWidth / pageHeight, -pageHeight / pageWidth, 0];\n                }\n\n              default:\n                return [1, 0, 0, 1];\n            }\n          }\n\n          get parentScale() {\n            return this._uiManager.viewParameters.realScale;\n          }\n\n          get parentRotation() {\n            return (this._uiManager.viewParameters.rotation + this.pageRotation) % 360;\n          }\n\n          get parentDimensions() {\n            const {\n              parentScale,\n              pageDimensions: [pageWidth, pageHeight]\n            } = this;\n            const scaledWidth = pageWidth * parentScale;\n            const scaledHeight = pageHeight * parentScale;\n            return _util.FeatureTest.isCSSRoundSupported ? [Math.round(scaledWidth), Math.round(scaledHeight)] : [scaledWidth, scaledHeight];\n          }\n\n          setDims(width, height) {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.div.style.width = `${(100 * width / parentWidth).toFixed(2)}%`;\n\n            if (!this.#keepAspectRatio) {\n              this.div.style.height = `${(100 * height / parentHeight).toFixed(2)}%`;\n            }\n\n            this.#altTextButton?.classList.toggle(\"small\", width < AnnotationEditor.SMALL_EDITOR_SIZE || height < AnnotationEditor.SMALL_EDITOR_SIZE);\n          }\n\n          fixDims() {\n            const {\n              style\n            } = this.div;\n            const {\n              height,\n              width\n            } = style;\n            const widthPercent = width.endsWith(\"%\");\n            const heightPercent = !this.#keepAspectRatio && height.endsWith(\"%\");\n\n            if (widthPercent && heightPercent) {\n              return;\n            }\n\n            const [parentWidth, parentHeight] = this.parentDimensions;\n\n            if (!widthPercent) {\n              style.width = `${(100 * parseFloat(width) / parentWidth).toFixed(2)}%`;\n            }\n\n            if (!this.#keepAspectRatio && !heightPercent) {\n              style.height = `${(100 * parseFloat(height) / parentHeight).toFixed(2)}%`;\n            }\n          }\n\n          getInitialTranslation() {\n            return [0, 0];\n          }\n\n          #createResizers() {\n            if (this.#resizersDiv) {\n              return;\n            }\n\n            this.#resizersDiv = document.createElement(\"div\");\n            this.#resizersDiv.classList.add(\"resizers\");\n            const classes = [\"topLeft\", \"topRight\", \"bottomRight\", \"bottomLeft\"];\n\n            if (!this._willKeepAspectRatio) {\n              classes.push(\"topMiddle\", \"middleRight\", \"bottomMiddle\", \"middleLeft\");\n            }\n\n            for (const name of classes) {\n              const div = document.createElement(\"div\");\n              this.#resizersDiv.append(div);\n              div.classList.add(\"resizer\", name);\n              div.addEventListener(\"pointerdown\", this.#resizerPointerdown.bind(this, name));\n              div.addEventListener(\"contextmenu\", _display_utils.noContextMenu);\n            }\n\n            this.div.prepend(this.#resizersDiv);\n          }\n\n          #resizerPointerdown(name, event) {\n            event.preventDefault();\n            const {\n              isMac\n            } = _util.FeatureTest.platform;\n\n            if (event.button !== 0 || event.ctrlKey && isMac) {\n              return;\n            }\n\n            const boundResizerPointermove = this.#resizerPointermove.bind(this, name);\n            const savedDraggable = this._isDraggable;\n            this._isDraggable = false;\n            const pointerMoveOptions = {\n              passive: true,\n              capture: true\n            };\n            window.addEventListener(\"pointermove\", boundResizerPointermove, pointerMoveOptions);\n            const savedX = this.x;\n            const savedY = this.y;\n            const savedWidth = this.width;\n            const savedHeight = this.height;\n            const savedParentCursor = this.parent.div.style.cursor;\n            const savedCursor = this.div.style.cursor;\n            this.div.style.cursor = this.parent.div.style.cursor = window.getComputedStyle(event.target).cursor;\n\n            const pointerUpCallback = () => {\n              this._isDraggable = savedDraggable;\n              window.removeEventListener(\"pointerup\", pointerUpCallback);\n              window.removeEventListener(\"blur\", pointerUpCallback);\n              window.removeEventListener(\"pointermove\", boundResizerPointermove, pointerMoveOptions);\n              this.parent.div.style.cursor = savedParentCursor;\n              this.div.style.cursor = savedCursor;\n              const newX = this.x;\n              const newY = this.y;\n              const newWidth = this.width;\n              const newHeight = this.height;\n\n              if (newX === savedX && newY === savedY && newWidth === savedWidth && newHeight === savedHeight) {\n                return;\n              }\n\n              this.addCommands({\n                cmd: () => {\n                  this.width = newWidth;\n                  this.height = newHeight;\n                  this.x = newX;\n                  this.y = newY;\n                  const [parentWidth, parentHeight] = this.parentDimensions;\n                  this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n                  this.fixAndSetPosition();\n                },\n                undo: () => {\n                  this.width = savedWidth;\n                  this.height = savedHeight;\n                  this.x = savedX;\n                  this.y = savedY;\n                  const [parentWidth, parentHeight] = this.parentDimensions;\n                  this.setDims(parentWidth * savedWidth, parentHeight * savedHeight);\n                  this.fixAndSetPosition();\n                },\n                mustExec: true\n              });\n            };\n\n            window.addEventListener(\"pointerup\", pointerUpCallback);\n            window.addEventListener(\"blur\", pointerUpCallback);\n          }\n\n          #resizerPointermove(name, event) {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            const savedX = this.x;\n            const savedY = this.y;\n            const savedWidth = this.width;\n            const savedHeight = this.height;\n            const minWidth = AnnotationEditor.MIN_SIZE / parentWidth;\n            const minHeight = AnnotationEditor.MIN_SIZE / parentHeight;\n\n            const round = x => Math.round(x * 10000) / 10000;\n\n            const rotationMatrix = this.#getRotationMatrix(this.rotation);\n\n            const transf = (x, y) => [rotationMatrix[0] * x + rotationMatrix[2] * y, rotationMatrix[1] * x + rotationMatrix[3] * y];\n\n            const invRotationMatrix = this.#getRotationMatrix(360 - this.rotation);\n\n            const invTransf = (x, y) => [invRotationMatrix[0] * x + invRotationMatrix[2] * y, invRotationMatrix[1] * x + invRotationMatrix[3] * y];\n\n            let getPoint;\n            let getOpposite;\n            let isDiagonal = false;\n            let isHorizontal = false;\n\n            switch (name) {\n              case \"topLeft\":\n                isDiagonal = true;\n\n                getPoint = (w, h) => [0, 0];\n\n                getOpposite = (w, h) => [w, h];\n\n                break;\n\n              case \"topMiddle\":\n                getPoint = (w, h) => [w / 2, 0];\n\n                getOpposite = (w, h) => [w / 2, h];\n\n                break;\n\n              case \"topRight\":\n                isDiagonal = true;\n\n                getPoint = (w, h) => [w, 0];\n\n                getOpposite = (w, h) => [0, h];\n\n                break;\n\n              case \"middleRight\":\n                isHorizontal = true;\n\n                getPoint = (w, h) => [w, h / 2];\n\n                getOpposite = (w, h) => [0, h / 2];\n\n                break;\n\n              case \"bottomRight\":\n                isDiagonal = true;\n\n                getPoint = (w, h) => [w, h];\n\n                getOpposite = (w, h) => [0, 0];\n\n                break;\n\n              case \"bottomMiddle\":\n                getPoint = (w, h) => [w / 2, h];\n\n                getOpposite = (w, h) => [w / 2, 0];\n\n                break;\n\n              case \"bottomLeft\":\n                isDiagonal = true;\n\n                getPoint = (w, h) => [0, h];\n\n                getOpposite = (w, h) => [w, 0];\n\n                break;\n\n              case \"middleLeft\":\n                isHorizontal = true;\n\n                getPoint = (w, h) => [0, h / 2];\n\n                getOpposite = (w, h) => [w, h / 2];\n\n                break;\n            }\n\n            const point = getPoint(savedWidth, savedHeight);\n            const oppositePoint = getOpposite(savedWidth, savedHeight);\n            let transfOppositePoint = transf(...oppositePoint);\n            const oppositeX = round(savedX + transfOppositePoint[0]);\n            const oppositeY = round(savedY + transfOppositePoint[1]);\n            let ratioX = 1;\n            let ratioY = 1;\n            let [deltaX, deltaY] = this.screenToPageTranslation(event.movementX, event.movementY);\n            [deltaX, deltaY] = invTransf(deltaX / parentWidth, deltaY / parentHeight);\n\n            if (isDiagonal) {\n              const oldDiag = Math.hypot(savedWidth, savedHeight);\n              ratioX = ratioY = Math.max(Math.min(Math.hypot(oppositePoint[0] - point[0] - deltaX, oppositePoint[1] - point[1] - deltaY) / oldDiag, 1 / savedWidth, 1 / savedHeight), minWidth / savedWidth, minHeight / savedHeight);\n            } else if (isHorizontal) {\n              ratioX = Math.max(minWidth, Math.min(1, Math.abs(oppositePoint[0] - point[0] - deltaX))) / savedWidth;\n            } else {\n              ratioY = Math.max(minHeight, Math.min(1, Math.abs(oppositePoint[1] - point[1] - deltaY))) / savedHeight;\n            }\n\n            const newWidth = round(savedWidth * ratioX);\n            const newHeight = round(savedHeight * ratioY);\n            transfOppositePoint = transf(...getOpposite(newWidth, newHeight));\n            const newX = oppositeX - transfOppositePoint[0];\n            const newY = oppositeY - transfOppositePoint[1];\n            this.width = newWidth;\n            this.height = newHeight;\n            this.x = newX;\n            this.y = newY;\n            this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n            this.fixAndSetPosition();\n          }\n\n          async addAltTextButton() {\n            if (this.#altTextButton) {\n              return;\n            }\n\n            const altText = this.#altTextButton = document.createElement(\"button\");\n            altText.className = \"altText\";\n            const msg = await AnnotationEditor._l10nPromise.get(\"editor_alt_text_button_label\");\n            altText.textContent = msg;\n            altText.setAttribute(\"aria-label\", msg);\n            altText.tabIndex = \"0\";\n            altText.addEventListener(\"contextmenu\", _display_utils.noContextMenu);\n            altText.addEventListener(\"pointerdown\", event => event.stopPropagation());\n            altText.addEventListener(\"click\", event => {\n              event.preventDefault();\n\n              this._uiManager.editAltText(this);\n            }, {\n              capture: true\n            });\n            altText.addEventListener(\"keydown\", event => {\n              if (event.target === altText && event.key === \"Enter\") {\n                event.preventDefault();\n\n                this._uiManager.editAltText(this);\n              }\n            });\n            this.#setAltTextButtonState();\n            this.div.append(altText);\n\n            if (!AnnotationEditor.SMALL_EDITOR_SIZE) {\n              const PERCENT = 40;\n              AnnotationEditor.SMALL_EDITOR_SIZE = Math.min(128, Math.round(altText.getBoundingClientRect().width * (1 + PERCENT / 100)));\n            }\n          }\n\n          async #setAltTextButtonState() {\n            const button = this.#altTextButton;\n\n            if (!button) {\n              return;\n            }\n\n            if (!this.#altText && !this.#altTextDecorative) {\n              button.classList.remove(\"done\");\n              this.#altTextTooltip?.remove();\n              return;\n            }\n\n            AnnotationEditor._l10nPromise.get(\"editor_alt_text_edit_button_label\").then(msg => {\n              button.setAttribute(\"aria-label\", msg);\n            });\n\n            let tooltip = this.#altTextTooltip;\n\n            if (!tooltip) {\n              this.#altTextTooltip = tooltip = document.createElement(\"span\");\n              tooltip.className = \"tooltip\";\n              tooltip.setAttribute(\"role\", \"tooltip\");\n              const id = tooltip.id = `alt-text-tooltip-${this.id}`;\n              button.setAttribute(\"aria-describedby\", id);\n              const DELAY_TO_SHOW_TOOLTIP = 100;\n              button.addEventListener(\"mouseenter\", () => {\n                this.#altTextTooltipTimeout = setTimeout(() => {\n                  this.#altTextTooltipTimeout = null;\n                  this.#altTextTooltip.classList.add(\"show\");\n\n                  this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n                    source: this,\n                    details: {\n                      type: \"editing\",\n                      subtype: this.editorType,\n                      data: {\n                        action: \"alt_text_tooltip\"\n                      }\n                    }\n                  });\n                }, DELAY_TO_SHOW_TOOLTIP);\n              });\n              button.addEventListener(\"mouseleave\", () => {\n                clearTimeout(this.#altTextTooltipTimeout);\n                this.#altTextTooltipTimeout = null;\n                this.#altTextTooltip?.classList.remove(\"show\");\n              });\n            }\n\n            button.classList.add(\"done\");\n            tooltip.innerText = this.#altTextDecorative ? await AnnotationEditor._l10nPromise.get(\"editor_alt_text_decorative_tooltip\") : this.#altText;\n\n            if (!tooltip.parentNode) {\n              button.append(tooltip);\n            }\n          }\n\n          getClientDimensions() {\n            return this.div.getBoundingClientRect();\n          }\n\n          get altTextData() {\n            return {\n              altText: this.#altText,\n              decorative: this.#altTextDecorative\n            };\n          }\n\n          set altTextData(_ref16) {\n            let {\n              altText,\n              decorative\n            } = _ref16;\n\n            if (this.#altText === altText && this.#altTextDecorative === decorative) {\n              return;\n            }\n\n            this.#altText = altText;\n            this.#altTextDecorative = decorative;\n            this.#setAltTextButtonState();\n          }\n\n          render() {\n            this.div = document.createElement(\"div\");\n            this.div.setAttribute(\"data-editor-rotation\", (360 - this.rotation) % 360);\n            this.div.className = this.name;\n            this.div.setAttribute(\"id\", this.id);\n            this.div.setAttribute(\"tabIndex\", 0);\n            this.setInForeground();\n            this.div.addEventListener(\"focusin\", this.#boundFocusin);\n            this.div.addEventListener(\"focusout\", this.#boundFocusout);\n            const [parentWidth, parentHeight] = this.parentDimensions;\n\n            if (this.parentRotation % 180 !== 0) {\n              this.div.style.maxWidth = `${(100 * parentHeight / parentWidth).toFixed(2)}%`;\n              this.div.style.maxHeight = `${(100 * parentWidth / parentHeight).toFixed(2)}%`;\n            }\n\n            const [tx, ty] = this.getInitialTranslation();\n            this.translate(tx, ty);\n            (0, _tools.bindEvents)(this, this.div, [\"pointerdown\"]);\n            return this.div;\n          }\n\n          pointerdown(event) {\n            const {\n              isMac\n            } = _util.FeatureTest.platform;\n\n            if (event.button !== 0 || event.ctrlKey && isMac) {\n              event.preventDefault();\n              return;\n            }\n\n            this.#hasBeenClicked = true;\n            this.#setUpDragSession(event);\n          }\n\n          #setUpDragSession(event) {\n            if (!this._isDraggable) {\n              return;\n            }\n\n            const isSelected = this._uiManager.isSelected(this);\n\n            this._uiManager.setUpDragSession();\n\n            let pointerMoveOptions, pointerMoveCallback;\n\n            if (isSelected) {\n              pointerMoveOptions = {\n                passive: true,\n                capture: true\n              };\n\n              pointerMoveCallback = e => {\n                const [tx, ty] = this.screenToPageTranslation(e.movementX, e.movementY);\n\n                this._uiManager.dragSelectedEditors(tx, ty);\n              };\n\n              window.addEventListener(\"pointermove\", pointerMoveCallback, pointerMoveOptions);\n            }\n\n            const pointerUpCallback = () => {\n              window.removeEventListener(\"pointerup\", pointerUpCallback);\n              window.removeEventListener(\"blur\", pointerUpCallback);\n\n              if (isSelected) {\n                window.removeEventListener(\"pointermove\", pointerMoveCallback, pointerMoveOptions);\n              }\n\n              this.#hasBeenClicked = false;\n\n              if (!this._uiManager.endDragSession()) {\n                const {\n                  isMac\n                } = _util.FeatureTest.platform;\n\n                if (event.ctrlKey && !isMac || event.shiftKey || event.metaKey && isMac) {\n                  this.parent.toggleSelected(this);\n                } else {\n                  this.parent.setSelected(this);\n                }\n              }\n            };\n\n            window.addEventListener(\"pointerup\", pointerUpCallback);\n            window.addEventListener(\"blur\", pointerUpCallback);\n          }\n\n          moveInDOM() {\n            this.parent?.moveEditorInDOM(this);\n          }\n\n          _setParentAndPosition(parent, x, y) {\n            parent.changeParent(this);\n            this.x = x;\n            this.y = y;\n            this.fixAndSetPosition();\n          }\n\n          getRect(tx, ty) {\n            const scale = this.parentScale;\n            const [pageWidth, pageHeight] = this.pageDimensions;\n            const [pageX, pageY] = this.pageTranslation;\n            const shiftX = tx / scale;\n            const shiftY = ty / scale;\n            const x = this.x * pageWidth;\n            const y = this.y * pageHeight;\n            const width = this.width * pageWidth;\n            const height = this.height * pageHeight;\n\n            switch (this.rotation) {\n              case 0:\n                return [x + shiftX + pageX, pageHeight - y - shiftY - height + pageY, x + shiftX + width + pageX, pageHeight - y - shiftY + pageY];\n\n              case 90:\n                return [x + shiftY + pageX, pageHeight - y + shiftX + pageY, x + shiftY + height + pageX, pageHeight - y + shiftX + width + pageY];\n\n              case 180:\n                return [x - shiftX - width + pageX, pageHeight - y + shiftY + pageY, x - shiftX + pageX, pageHeight - y + shiftY + height + pageY];\n\n              case 270:\n                return [x - shiftY - height + pageX, pageHeight - y - shiftX - width + pageY, x - shiftY + pageX, pageHeight - y - shiftX + pageY];\n\n              default:\n                throw new Error(\"Invalid rotation\");\n            }\n          }\n\n          getRectInCurrentCoords(rect, pageHeight) {\n            const [x1, y1, x2, y2] = rect;\n            const width = x2 - x1;\n            const height = y2 - y1;\n\n            switch (this.rotation) {\n              case 0:\n                return [x1, pageHeight - y2, width, height];\n\n              case 90:\n                return [x1, pageHeight - y1, height, width];\n\n              case 180:\n                return [x2, pageHeight - y1, width, height];\n\n              case 270:\n                return [x2, pageHeight - y2, height, width];\n\n              default:\n                throw new Error(\"Invalid rotation\");\n            }\n          }\n\n          onceAdded() {}\n\n          isEmpty() {\n            return false;\n          }\n\n          enableEditMode() {\n            this.#isInEditMode = true;\n          }\n\n          disableEditMode() {\n            this.#isInEditMode = false;\n          }\n\n          isInEditMode() {\n            return this.#isInEditMode;\n          }\n\n          shouldGetKeyboardEvents() {\n            return false;\n          }\n\n          needsToBeRebuilt() {\n            return this.div && !this.isAttachedToDOM;\n          }\n\n          rebuild() {\n            this.div?.addEventListener(\"focusin\", this.#boundFocusin);\n            this.div?.addEventListener(\"focusout\", this.#boundFocusout);\n          }\n\n          serialize() {\n            let isForCopying = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            (0, _util.unreachable)(\"An editor must be serializable\");\n          }\n\n          static deserialize(data, parent, uiManager) {\n            const editor = new this.prototype.constructor({\n              parent,\n              id: parent.getNextId(),\n              uiManager\n            });\n            editor.rotation = data.rotation;\n            const [pageWidth, pageHeight] = editor.pageDimensions;\n            const [x, y, width, height] = editor.getRectInCurrentCoords(data.rect, pageHeight);\n            editor.x = x / pageWidth;\n            editor.y = y / pageHeight;\n            editor.width = width / pageWidth;\n            editor.height = height / pageHeight;\n            return editor;\n          }\n\n          remove() {\n            this.div.removeEventListener(\"focusin\", this.#boundFocusin);\n            this.div.removeEventListener(\"focusout\", this.#boundFocusout);\n\n            if (!this.isEmpty()) {\n              this.commit();\n            }\n\n            if (this.parent) {\n              this.parent.remove(this);\n            } else {\n              this._uiManager.removeEditor(this);\n            }\n\n            this.#altTextButton?.remove();\n            this.#altTextButton = null;\n            this.#altTextTooltip = null;\n          }\n\n          get isResizable() {\n            return false;\n          }\n\n          makeResizable() {\n            if (this.isResizable) {\n              this.#createResizers();\n              this.#resizersDiv.classList.remove(\"hidden\");\n            }\n          }\n\n          select() {\n            this.makeResizable();\n            this.div?.classList.add(\"selectedEditor\");\n          }\n\n          unselect() {\n            this.#resizersDiv?.classList.add(\"hidden\");\n            this.div?.classList.remove(\"selectedEditor\");\n\n            if (this.div?.contains(document.activeElement)) {\n              this._uiManager.currentLayer.div.focus();\n            }\n          }\n\n          updateParams(type, value) {}\n\n          disableEditing() {\n            if (this.#altTextButton) {\n              this.#altTextButton.hidden = true;\n            }\n          }\n\n          enableEditing() {\n            if (this.#altTextButton) {\n              this.#altTextButton.hidden = false;\n            }\n          }\n\n          enterInEditMode() {}\n\n          get contentDiv() {\n            return this.div;\n          }\n\n          get isEditing() {\n            return this.#isEditing;\n          }\n\n          set isEditing(value) {\n            this.#isEditing = value;\n\n            if (!this.parent) {\n              return;\n            }\n\n            if (value) {\n              this.parent.setSelected(this);\n              this.parent.setActiveEditor(this);\n            } else {\n              this.parent.setActiveEditor(null);\n            }\n          }\n\n          setAspectRatio(width, height) {\n            this.#keepAspectRatio = true;\n            const aspectRatio = width / height;\n            const {\n              style\n            } = this.div;\n            style.aspectRatio = aspectRatio;\n            style.height = \"auto\";\n          }\n\n          static get MIN_SIZE() {\n            return 16;\n          }\n\n        }\n\n        exports.AnnotationEditor = AnnotationEditor;\n\n        class FakeEditor extends AnnotationEditor {\n          constructor(params) {\n            super(params);\n            this.annotationElementId = params.annotationElementId;\n            this.deleted = true;\n          }\n\n          serialize() {\n            return {\n              id: this.annotationElementId,\n              deleted: true,\n              pageIndex: this.pageIndex\n            };\n          }\n\n        }\n        /***/\n\n      },\n      /* 5 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.KeyboardManager = exports.CommandManager = exports.ColorManager = exports.AnnotationEditorUIManager = void 0;\n        exports.bindEvents = bindEvents;\n        exports.opacityToHex = opacityToHex;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _display_utils = __w_pdfjs_require__(6);\n\n        function bindEvents(obj, element, names) {\n          for (const name of names) {\n            element.addEventListener(name, obj[name].bind(obj));\n          }\n        }\n\n        function opacityToHex(opacity) {\n          return Math.round(Math.min(255, Math.max(1, 255 * opacity))).toString(16).padStart(2, \"0\");\n        }\n\n        class IdManager {\n          #id = 0;\n\n          getId() {\n            return `${_util.AnnotationEditorPrefix}${this.#id++}`;\n          }\n\n        }\n\n        class ImageManager {\n          #baseId = (0, _util.getUuid)();\n          #id = 0;\n          #cache = null;\n\n          static get _isSVGFittingCanvas() {\n            const svg = `data:image/svg+xml;charset=UTF-8,<svg viewBox=\"0 0 1 1\" width=\"1\" height=\"1\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"1\" height=\"1\" style=\"fill:red;\"/></svg>`;\n            const canvas = new OffscreenCanvas(1, 3);\n            const ctx = canvas.getContext(\"2d\");\n            const image = new Image();\n            image.src = svg;\n            const promise = image.decode().then(() => {\n              ctx.drawImage(image, 0, 0, 1, 1, 0, 0, 1, 3);\n              return new Uint32Array(ctx.getImageData(0, 0, 1, 1).data.buffer)[0] === 0;\n            });\n            return (0, _util.shadow)(this, \"_isSVGFittingCanvas\", promise);\n          }\n\n          async #get(key, rawData) {\n            this.#cache ||= new Map();\n            let data = this.#cache.get(key);\n\n            if (data === null) {\n              return null;\n            }\n\n            if (data?.bitmap) {\n              data.refCounter += 1;\n              return data;\n            }\n\n            try {\n              data ||= {\n                bitmap: null,\n                id: `image_${this.#baseId}_${this.#id++}`,\n                refCounter: 0,\n                isSvg: false\n              };\n              let image;\n\n              if (typeof rawData === \"string\") {\n                data.url = rawData;\n                const response = await fetch(rawData);\n\n                if (!response.ok) {\n                  throw new Error(response.statusText);\n                }\n\n                image = await response.blob();\n              } else {\n                image = data.file = rawData;\n              }\n\n              if (image.type === \"image/svg+xml\") {\n                const mustRemoveAspectRatioPromise = ImageManager._isSVGFittingCanvas;\n                const fileReader = new FileReader();\n                const imageElement = new Image();\n                const imagePromise = new Promise((resolve, reject) => {\n                  imageElement.onload = () => {\n                    data.bitmap = imageElement;\n                    data.isSvg = true;\n                    resolve();\n                  };\n\n                  fileReader.onload = async () => {\n                    const url = data.svgUrl = fileReader.result;\n                    imageElement.src = (await mustRemoveAspectRatioPromise) ? `${url}#svgView(preserveAspectRatio(none))` : url;\n                  };\n\n                  imageElement.onerror = fileReader.onerror = reject;\n                });\n                fileReader.readAsDataURL(image);\n                await imagePromise;\n              } else {\n                data.bitmap = await createImageBitmap(image);\n              }\n\n              data.refCounter = 1;\n            } catch (e) {\n              console.error(e);\n              data = null;\n            }\n\n            this.#cache.set(key, data);\n\n            if (data) {\n              this.#cache.set(data.id, data);\n            }\n\n            return data;\n          }\n\n          async getFromFile(file) {\n            const {\n              lastModified,\n              name,\n              size,\n              type\n            } = file;\n            return this.#get(`${lastModified}_${name}_${size}_${type}`, file);\n          }\n\n          async getFromUrl(url) {\n            return this.#get(url, url);\n          }\n\n          async getFromId(id) {\n            this.#cache ||= new Map();\n            const data = this.#cache.get(id);\n\n            if (!data) {\n              return null;\n            }\n\n            if (data.bitmap) {\n              data.refCounter += 1;\n              return data;\n            }\n\n            if (data.file) {\n              return this.getFromFile(data.file);\n            }\n\n            return this.getFromUrl(data.url);\n          }\n\n          getSvgUrl(id) {\n            const data = this.#cache.get(id);\n\n            if (!data?.isSvg) {\n              return null;\n            }\n\n            return data.svgUrl;\n          }\n\n          deleteId(id) {\n            this.#cache ||= new Map();\n            const data = this.#cache.get(id);\n\n            if (!data) {\n              return;\n            }\n\n            data.refCounter -= 1;\n\n            if (data.refCounter !== 0) {\n              return;\n            }\n\n            data.bitmap = null;\n          }\n\n          isValidId(id) {\n            return id.startsWith(`image_${this.#baseId}_`);\n          }\n\n        }\n\n        class CommandManager {\n          #commands = [];\n          #locked = false;\n          #maxSize;\n          #position = -1;\n\n          constructor() {\n            let maxSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;\n            this.#maxSize = maxSize;\n          }\n\n          add(_ref17) {\n            let {\n              cmd,\n              undo,\n              mustExec,\n              type = NaN,\n              overwriteIfSameType = false,\n              keepUndo = false\n            } = _ref17;\n\n            if (mustExec) {\n              cmd();\n            }\n\n            if (this.#locked) {\n              return;\n            }\n\n            const save = {\n              cmd,\n              undo,\n              type\n            };\n\n            if (this.#position === -1) {\n              if (this.#commands.length > 0) {\n                this.#commands.length = 0;\n              }\n\n              this.#position = 0;\n              this.#commands.push(save);\n              return;\n            }\n\n            if (overwriteIfSameType && this.#commands[this.#position].type === type) {\n              if (keepUndo) {\n                save.undo = this.#commands[this.#position].undo;\n              }\n\n              this.#commands[this.#position] = save;\n              return;\n            }\n\n            const next = this.#position + 1;\n\n            if (next === this.#maxSize) {\n              this.#commands.splice(0, 1);\n            } else {\n              this.#position = next;\n\n              if (next < this.#commands.length) {\n                this.#commands.splice(next);\n              }\n            }\n\n            this.#commands.push(save);\n          }\n\n          undo() {\n            if (this.#position === -1) {\n              return;\n            }\n\n            this.#locked = true;\n            this.#commands[this.#position].undo();\n            this.#locked = false;\n            this.#position -= 1;\n          }\n\n          redo() {\n            if (this.#position < this.#commands.length - 1) {\n              this.#position += 1;\n              this.#locked = true;\n              this.#commands[this.#position].cmd();\n              this.#locked = false;\n            }\n          }\n\n          hasSomethingToUndo() {\n            return this.#position !== -1;\n          }\n\n          hasSomethingToRedo() {\n            return this.#position < this.#commands.length - 1;\n          }\n\n          destroy() {\n            this.#commands = null;\n          }\n\n        }\n\n        exports.CommandManager = CommandManager;\n\n        class KeyboardManager {\n          constructor(callbacks) {\n            this.buffer = [];\n            this.callbacks = new Map();\n            this.allKeys = new Set();\n            const {\n              isMac\n            } = _util.FeatureTest.platform;\n\n            for (const [keys, callback, options = {}] of callbacks) {\n              for (const key of keys) {\n                const isMacKey = key.startsWith(\"mac+\");\n\n                if (isMac && isMacKey) {\n                  this.callbacks.set(key.slice(4), {\n                    callback,\n                    options\n                  });\n                  this.allKeys.add(key.split(\"+\").at(-1));\n                } else if (!isMac && !isMacKey) {\n                  this.callbacks.set(key, {\n                    callback,\n                    options\n                  });\n                  this.allKeys.add(key.split(\"+\").at(-1));\n                }\n              }\n            }\n          }\n\n          #serialize(event) {\n            if (event.altKey) {\n              this.buffer.push(\"alt\");\n            }\n\n            if (event.ctrlKey) {\n              this.buffer.push(\"ctrl\");\n            }\n\n            if (event.metaKey) {\n              this.buffer.push(\"meta\");\n            }\n\n            if (event.shiftKey) {\n              this.buffer.push(\"shift\");\n            }\n\n            this.buffer.push(event.key);\n            const str = this.buffer.join(\"+\");\n            this.buffer.length = 0;\n            return str;\n          }\n\n          exec(self, event) {\n            if (!this.allKeys.has(event.key)) {\n              return;\n            }\n\n            const info = this.callbacks.get(this.#serialize(event));\n\n            if (!info) {\n              return;\n            }\n\n            const {\n              callback,\n              options: {\n                bubbles = false,\n                args = [],\n                checker = null\n              }\n            } = info;\n\n            if (checker && !checker(self, event)) {\n              return;\n            }\n\n            callback.bind(self, ...args)();\n\n            if (!bubbles) {\n              event.stopPropagation();\n              event.preventDefault();\n            }\n          }\n\n        }\n\n        exports.KeyboardManager = KeyboardManager;\n\n        class ColorManager {\n          static _colorsMapping = new Map([[\"CanvasText\", [0, 0, 0]], [\"Canvas\", [255, 255, 255]]]);\n\n          get _colors() {\n            const colors = new Map([[\"CanvasText\", null], [\"Canvas\", null]]);\n            (0, _display_utils.getColorValues)(colors);\n            return (0, _util.shadow)(this, \"_colors\", colors);\n          }\n\n          convert(color) {\n            const rgb = (0, _display_utils.getRGB)(color);\n\n            if (!window.matchMedia(\"(forced-colors: active)\").matches) {\n              return rgb;\n            }\n\n            for (const [name, RGB] of this._colors) {\n              if (RGB.every((x, i) => x === rgb[i])) {\n                return ColorManager._colorsMapping.get(name);\n              }\n            }\n\n            return rgb;\n          }\n\n          getHexCode(name) {\n            const rgb = this._colors.get(name);\n\n            if (!rgb) {\n              return name;\n            }\n\n            return _util.Util.makeHexColor(...rgb);\n          }\n\n        }\n\n        exports.ColorManager = ColorManager;\n\n        class AnnotationEditorUIManager {\n          #activeEditor = null;\n          #allEditors = new Map();\n          #allLayers = new Map();\n          #altTextManager = null;\n          #annotationStorage = null;\n          #commandManager = new CommandManager();\n          #currentPageIndex = 0;\n          #deletedAnnotationsElementIds = new Set();\n          #draggingEditors = null;\n          #editorTypes = null;\n          #editorsToRescale = new Set();\n          #filterFactory = null;\n          #idManager = new IdManager();\n          #isEnabled = false;\n          #isWaiting = false;\n          #lastActiveElement = null;\n          #mode = _util.AnnotationEditorType.NONE;\n          #selectedEditors = new Set();\n          #pageColors = null;\n          #boundBlur = this.blur.bind(this);\n          #boundFocus = this.focus.bind(this);\n          #boundCopy = this.copy.bind(this);\n          #boundCut = this.cut.bind(this);\n          #boundPaste = this.paste.bind(this);\n          #boundKeydown = this.keydown.bind(this);\n          #boundOnEditingAction = this.onEditingAction.bind(this);\n          #boundOnPageChanging = this.onPageChanging.bind(this);\n          #boundOnScaleChanging = this.onScaleChanging.bind(this);\n          #boundOnRotationChanging = this.onRotationChanging.bind(this);\n          #previousStates = {\n            isEditing: false,\n            isEmpty: true,\n            hasSomethingToUndo: false,\n            hasSomethingToRedo: false,\n            hasSelectedEditor: false\n          };\n          #translation = [0, 0];\n          #translationTimeoutId = null;\n          #container = null;\n          #viewer = null;\n          static TRANSLATE_SMALL = 1;\n          static TRANSLATE_BIG = 10;\n\n          static get _keyboardManager() {\n            const proto = AnnotationEditorUIManager.prototype;\n\n            const arrowChecker = self => {\n              const {\n                activeElement\n              } = document;\n              return activeElement && self.#container.contains(activeElement) && self.hasSomethingToControl();\n            };\n\n            const small = this.TRANSLATE_SMALL;\n            const big = this.TRANSLATE_BIG;\n            return (0, _util.shadow)(this, \"_keyboardManager\", new KeyboardManager([[[\"ctrl+a\", \"mac+meta+a\"], proto.selectAll], [[\"ctrl+z\", \"mac+meta+z\"], proto.undo], [[\"ctrl+y\", \"ctrl+shift+z\", \"mac+meta+shift+z\", \"ctrl+shift+Z\", \"mac+meta+shift+Z\"], proto.redo], [[\"Backspace\", \"alt+Backspace\", \"ctrl+Backspace\", \"shift+Backspace\", \"mac+Backspace\", \"mac+alt+Backspace\", \"mac+ctrl+Backspace\", \"Delete\", \"ctrl+Delete\", \"shift+Delete\", \"mac+Delete\"], proto.delete], [[\"Escape\", \"mac+Escape\"], proto.unselectAll], [[\"ArrowLeft\", \"mac+ArrowLeft\"], proto.translateSelectedEditors, {\n              args: [-small, 0],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"], proto.translateSelectedEditors, {\n              args: [-big, 0],\n              checker: arrowChecker\n            }], [[\"ArrowRight\", \"mac+ArrowRight\"], proto.translateSelectedEditors, {\n              args: [small, 0],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"], proto.translateSelectedEditors, {\n              args: [big, 0],\n              checker: arrowChecker\n            }], [[\"ArrowUp\", \"mac+ArrowUp\"], proto.translateSelectedEditors, {\n              args: [0, -small],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"], proto.translateSelectedEditors, {\n              args: [0, -big],\n              checker: arrowChecker\n            }], [[\"ArrowDown\", \"mac+ArrowDown\"], proto.translateSelectedEditors, {\n              args: [0, small],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"], proto.translateSelectedEditors, {\n              args: [0, big],\n              checker: arrowChecker\n            }]]));\n          }\n\n          constructor(container, viewer, altTextManager, eventBus, pdfDocument, pageColors) {\n            this.#container = container;\n            this.#viewer = viewer;\n            this.#altTextManager = altTextManager;\n            this._eventBus = eventBus;\n\n            this._eventBus._on(\"editingaction\", this.#boundOnEditingAction);\n\n            this._eventBus._on(\"pagechanging\", this.#boundOnPageChanging);\n\n            this._eventBus._on(\"scalechanging\", this.#boundOnScaleChanging);\n\n            this._eventBus._on(\"rotationchanging\", this.#boundOnRotationChanging);\n\n            this.#annotationStorage = pdfDocument.annotationStorage;\n            this.#filterFactory = pdfDocument.filterFactory;\n            this.#pageColors = pageColors;\n            this.viewParameters = {\n              realScale: _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS,\n              rotation: 0\n            };\n          }\n\n          destroy() {\n            this.#removeKeyboardManager();\n            this.#removeFocusManager();\n\n            this._eventBus._off(\"editingaction\", this.#boundOnEditingAction);\n\n            this._eventBus._off(\"pagechanging\", this.#boundOnPageChanging);\n\n            this._eventBus._off(\"scalechanging\", this.#boundOnScaleChanging);\n\n            this._eventBus._off(\"rotationchanging\", this.#boundOnRotationChanging);\n\n            for (const layer of this.#allLayers.values()) {\n              layer.destroy();\n            }\n\n            this.#allLayers.clear();\n            this.#allEditors.clear();\n            this.#editorsToRescale.clear();\n            this.#activeEditor = null;\n            this.#selectedEditors.clear();\n            this.#commandManager.destroy();\n            this.#altTextManager.destroy();\n          }\n\n          get hcmFilter() {\n            return (0, _util.shadow)(this, \"hcmFilter\", this.#pageColors ? this.#filterFactory.addHCMFilter(this.#pageColors.foreground, this.#pageColors.background) : \"none\");\n          }\n\n          get direction() {\n            return (0, _util.shadow)(this, \"direction\", getComputedStyle(this.#container).direction);\n          }\n\n          editAltText(editor) {\n            this.#altTextManager?.editAltText(this, editor);\n          }\n\n          onPageChanging(_ref18) {\n            let {\n              pageNumber\n            } = _ref18;\n            this.#currentPageIndex = pageNumber - 1;\n          }\n\n          focusMainContainer() {\n            this.#container.focus();\n          }\n\n          findParent(x, y) {\n            for (const layer of this.#allLayers.values()) {\n              const {\n                x: layerX,\n                y: layerY,\n                width,\n                height\n              } = layer.div.getBoundingClientRect();\n\n              if (x >= layerX && x <= layerX + width && y >= layerY && y <= layerY + height) {\n                return layer;\n              }\n            }\n\n            return null;\n          }\n\n          disableUserSelect() {\n            let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            this.#viewer.classList.toggle(\"noUserSelect\", value);\n          }\n\n          addShouldRescale(editor) {\n            this.#editorsToRescale.add(editor);\n          }\n\n          removeShouldRescale(editor) {\n            this.#editorsToRescale.delete(editor);\n          }\n\n          onScaleChanging(_ref19) {\n            let {\n              scale\n            } = _ref19;\n            this.commitOrRemove();\n            this.viewParameters.realScale = scale * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS;\n\n            for (const editor of this.#editorsToRescale) {\n              editor.onScaleChanging();\n            }\n          }\n\n          onRotationChanging(_ref20) {\n            let {\n              pagesRotation\n            } = _ref20;\n            this.commitOrRemove();\n            this.viewParameters.rotation = pagesRotation;\n          }\n\n          addToAnnotationStorage(editor) {\n            if (!editor.isEmpty() && this.#annotationStorage && !this.#annotationStorage.has(editor.id)) {\n              this.#annotationStorage.setValue(editor.id, editor);\n            }\n          }\n\n          #addFocusManager() {\n            window.addEventListener(\"focus\", this.#boundFocus);\n            window.addEventListener(\"blur\", this.#boundBlur);\n          }\n\n          #removeFocusManager() {\n            window.removeEventListener(\"focus\", this.#boundFocus);\n            window.removeEventListener(\"blur\", this.#boundBlur);\n          }\n\n          blur() {\n            if (!this.hasSelection) {\n              return;\n            }\n\n            const {\n              activeElement\n            } = document;\n\n            for (const editor of this.#selectedEditors) {\n              if (editor.div.contains(activeElement)) {\n                this.#lastActiveElement = [editor, activeElement];\n                editor._focusEventsAllowed = false;\n                break;\n              }\n            }\n          }\n\n          focus() {\n            if (!this.#lastActiveElement) {\n              return;\n            }\n\n            const [lastEditor, lastActiveElement] = this.#lastActiveElement;\n            this.#lastActiveElement = null;\n            lastActiveElement.addEventListener(\"focusin\", () => {\n              lastEditor._focusEventsAllowed = true;\n            }, {\n              once: true\n            });\n            lastActiveElement.focus();\n          }\n\n          #addKeyboardManager() {\n            window.addEventListener(\"keydown\", this.#boundKeydown, {\n              capture: true\n            });\n          }\n\n          #removeKeyboardManager() {\n            window.removeEventListener(\"keydown\", this.#boundKeydown, {\n              capture: true\n            });\n          }\n\n          #addCopyPasteListeners() {\n            document.addEventListener(\"copy\", this.#boundCopy);\n            document.addEventListener(\"cut\", this.#boundCut);\n            document.addEventListener(\"paste\", this.#boundPaste);\n          }\n\n          #removeCopyPasteListeners() {\n            document.removeEventListener(\"copy\", this.#boundCopy);\n            document.removeEventListener(\"cut\", this.#boundCut);\n            document.removeEventListener(\"paste\", this.#boundPaste);\n          }\n\n          addEditListeners() {\n            this.#addKeyboardManager();\n            this.#addCopyPasteListeners();\n          }\n\n          removeEditListeners() {\n            this.#removeKeyboardManager();\n            this.#removeCopyPasteListeners();\n          }\n\n          copy(event) {\n            event.preventDefault();\n            this.#activeEditor?.commitOrRemove();\n\n            if (!this.hasSelection) {\n              return;\n            }\n\n            const editors = [];\n\n            for (const editor of this.#selectedEditors) {\n              const serialized = editor.serialize(true);\n\n              if (serialized) {\n                editors.push(serialized);\n              }\n            }\n\n            if (editors.length === 0) {\n              return;\n            }\n\n            event.clipboardData.setData(\"application/pdfjs\", JSON.stringify(editors));\n          }\n\n          cut(event) {\n            this.copy(event);\n            this.delete();\n          }\n\n          paste(event) {\n            event.preventDefault();\n            const {\n              clipboardData\n            } = event;\n\n            for (const item of clipboardData.items) {\n              for (const editorType of this.#editorTypes) {\n                if (editorType.isHandlingMimeForPasting(item.type)) {\n                  editorType.paste(item, this.currentLayer);\n                  return;\n                }\n              }\n            }\n\n            let data = clipboardData.getData(\"application/pdfjs\");\n\n            if (!data) {\n              return;\n            }\n\n            try {\n              data = JSON.parse(data);\n            } catch (ex) {\n              (0, _util.warn)(`paste: \"${ex.message}\".`);\n              return;\n            }\n\n            if (!Array.isArray(data)) {\n              return;\n            }\n\n            this.unselectAll();\n            const layer = this.currentLayer;\n\n            try {\n              const newEditors = [];\n\n              for (const editor of data) {\n                const deserializedEditor = layer.deserialize(editor);\n\n                if (!deserializedEditor) {\n                  return;\n                }\n\n                newEditors.push(deserializedEditor);\n              }\n\n              const cmd = () => {\n                for (const editor of newEditors) {\n                  this.#addEditorToLayer(editor);\n                }\n\n                this.#selectEditors(newEditors);\n              };\n\n              const undo = () => {\n                for (const editor of newEditors) {\n                  editor.remove();\n                }\n              };\n\n              this.addCommands({\n                cmd,\n                undo,\n                mustExec: true\n              });\n            } catch (ex) {\n              (0, _util.warn)(`paste: \"${ex.message}\".`);\n            }\n          }\n\n          keydown(event) {\n            if (!this.getActive()?.shouldGetKeyboardEvents()) {\n              AnnotationEditorUIManager._keyboardManager.exec(this, event);\n            }\n          }\n\n          onEditingAction(details) {\n            if ([\"undo\", \"redo\", \"delete\", \"selectAll\"].includes(details.name)) {\n              this[details.name]();\n            }\n          }\n\n          #dispatchUpdateStates(details) {\n            const hasChanged = Object.entries(details).some(_ref21 => {\n              let [key, value] = _ref21;\n              return this.#previousStates[key] !== value;\n            });\n\n            if (hasChanged) {\n              this._eventBus.dispatch(\"annotationeditorstateschanged\", {\n                source: this,\n                details: Object.assign(this.#previousStates, details)\n              });\n            }\n          }\n\n          #dispatchUpdateUI(details) {\n            this._eventBus.dispatch(\"annotationeditorparamschanged\", {\n              source: this,\n              details\n            });\n          }\n\n          setEditingState(isEditing) {\n            if (isEditing) {\n              this.#addFocusManager();\n              this.#addKeyboardManager();\n              this.#addCopyPasteListeners();\n              this.#dispatchUpdateStates({\n                isEditing: this.#mode !== _util.AnnotationEditorType.NONE,\n                isEmpty: this.#isEmpty(),\n                hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n                hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n                hasSelectedEditor: false\n              });\n            } else {\n              this.#removeFocusManager();\n              this.#removeKeyboardManager();\n              this.#removeCopyPasteListeners();\n              this.#dispatchUpdateStates({\n                isEditing: false\n              });\n              this.disableUserSelect(false);\n            }\n          }\n\n          registerEditorTypes(types) {\n            if (this.#editorTypes) {\n              return;\n            }\n\n            this.#editorTypes = types;\n\n            for (const editorType of this.#editorTypes) {\n              this.#dispatchUpdateUI(editorType.defaultPropertiesToUpdate);\n            }\n          }\n\n          getId() {\n            return this.#idManager.getId();\n          }\n\n          get currentLayer() {\n            return this.#allLayers.get(this.#currentPageIndex);\n          }\n\n          getLayer(pageIndex) {\n            return this.#allLayers.get(pageIndex);\n          }\n\n          get currentPageIndex() {\n            return this.#currentPageIndex;\n          }\n\n          addLayer(layer) {\n            this.#allLayers.set(layer.pageIndex, layer);\n\n            if (this.#isEnabled) {\n              layer.enable();\n            } else {\n              layer.disable();\n            }\n          }\n\n          removeLayer(layer) {\n            this.#allLayers.delete(layer.pageIndex);\n          }\n\n          updateMode(mode) {\n            let editId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            if (this.#mode === mode) {\n              return;\n            }\n\n            this.#mode = mode;\n\n            if (mode === _util.AnnotationEditorType.NONE) {\n              this.setEditingState(false);\n              this.#disableAll();\n              return;\n            }\n\n            this.setEditingState(true);\n            this.#enableAll();\n            this.unselectAll();\n\n            for (const layer of this.#allLayers.values()) {\n              layer.updateMode(mode);\n            }\n\n            if (!editId) {\n              return;\n            }\n\n            for (const editor of this.#allEditors.values()) {\n              if (editor.annotationElementId === editId) {\n                this.setSelected(editor);\n                editor.enterInEditMode();\n                break;\n              }\n            }\n          }\n\n          updateToolbar(mode) {\n            if (mode === this.#mode) {\n              return;\n            }\n\n            this._eventBus.dispatch(\"switchannotationeditormode\", {\n              source: this,\n              mode\n            });\n          }\n\n          updateParams(type, value) {\n            if (!this.#editorTypes) {\n              return;\n            }\n\n            if (type === _util.AnnotationEditorParamsType.CREATE) {\n              this.currentLayer.addNewEditor(type);\n              return;\n            }\n\n            for (const editor of this.#selectedEditors) {\n              editor.updateParams(type, value);\n            }\n\n            for (const editorType of this.#editorTypes) {\n              editorType.updateDefaultParams(type, value);\n            }\n          }\n\n          enableWaiting() {\n            let mustWait = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (this.#isWaiting === mustWait) {\n              return;\n            }\n\n            this.#isWaiting = mustWait;\n\n            for (const layer of this.#allLayers.values()) {\n              if (mustWait) {\n                layer.disableClick();\n              } else {\n                layer.enableClick();\n              }\n\n              layer.div.classList.toggle(\"waiting\", mustWait);\n            }\n          }\n\n          #enableAll() {\n            if (!this.#isEnabled) {\n              this.#isEnabled = true;\n\n              for (const layer of this.#allLayers.values()) {\n                layer.enable();\n              }\n            }\n          }\n\n          #disableAll() {\n            this.unselectAll();\n\n            if (this.#isEnabled) {\n              this.#isEnabled = false;\n\n              for (const layer of this.#allLayers.values()) {\n                layer.disable();\n              }\n            }\n          }\n\n          getEditors(pageIndex) {\n            const editors = [];\n\n            for (const editor of this.#allEditors.values()) {\n              if (editor.pageIndex === pageIndex) {\n                editors.push(editor);\n              }\n            }\n\n            return editors;\n          }\n\n          getEditor(id) {\n            return this.#allEditors.get(id);\n          }\n\n          addEditor(editor) {\n            this.#allEditors.set(editor.id, editor);\n          }\n\n          removeEditor(editor) {\n            this.#allEditors.delete(editor.id);\n            this.unselect(editor);\n\n            if (!editor.annotationElementId || !this.#deletedAnnotationsElementIds.has(editor.annotationElementId)) {\n              this.#annotationStorage?.remove(editor.id);\n            }\n          }\n\n          addDeletedAnnotationElement(editor) {\n            this.#deletedAnnotationsElementIds.add(editor.annotationElementId);\n            editor.deleted = true;\n          }\n\n          isDeletedAnnotationElement(annotationElementId) {\n            return this.#deletedAnnotationsElementIds.has(annotationElementId);\n          }\n\n          removeDeletedAnnotationElement(editor) {\n            this.#deletedAnnotationsElementIds.delete(editor.annotationElementId);\n            editor.deleted = false;\n          }\n\n          #addEditorToLayer(editor) {\n            const layer = this.#allLayers.get(editor.pageIndex);\n\n            if (layer) {\n              layer.addOrRebuild(editor);\n            } else {\n              this.addEditor(editor);\n            }\n          }\n\n          setActiveEditor(editor) {\n            if (this.#activeEditor === editor) {\n              return;\n            }\n\n            this.#activeEditor = editor;\n\n            if (editor) {\n              this.#dispatchUpdateUI(editor.propertiesToUpdate);\n            }\n          }\n\n          toggleSelected(editor) {\n            if (this.#selectedEditors.has(editor)) {\n              this.#selectedEditors.delete(editor);\n              editor.unselect();\n              this.#dispatchUpdateStates({\n                hasSelectedEditor: this.hasSelection\n              });\n              return;\n            }\n\n            this.#selectedEditors.add(editor);\n            editor.select();\n            this.#dispatchUpdateUI(editor.propertiesToUpdate);\n            this.#dispatchUpdateStates({\n              hasSelectedEditor: true\n            });\n          }\n\n          setSelected(editor) {\n            for (const ed of this.#selectedEditors) {\n              if (ed !== editor) {\n                ed.unselect();\n              }\n            }\n\n            this.#selectedEditors.clear();\n            this.#selectedEditors.add(editor);\n            editor.select();\n            this.#dispatchUpdateUI(editor.propertiesToUpdate);\n            this.#dispatchUpdateStates({\n              hasSelectedEditor: true\n            });\n          }\n\n          isSelected(editor) {\n            return this.#selectedEditors.has(editor);\n          }\n\n          unselect(editor) {\n            editor.unselect();\n            this.#selectedEditors.delete(editor);\n            this.#dispatchUpdateStates({\n              hasSelectedEditor: this.hasSelection\n            });\n          }\n\n          get hasSelection() {\n            return this.#selectedEditors.size !== 0;\n          }\n\n          undo() {\n            this.#commandManager.undo();\n            this.#dispatchUpdateStates({\n              hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n              hasSomethingToRedo: true,\n              isEmpty: this.#isEmpty()\n            });\n          }\n\n          redo() {\n            this.#commandManager.redo();\n            this.#dispatchUpdateStates({\n              hasSomethingToUndo: true,\n              hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n              isEmpty: this.#isEmpty()\n            });\n          }\n\n          addCommands(params) {\n            this.#commandManager.add(params);\n            this.#dispatchUpdateStates({\n              hasSomethingToUndo: true,\n              hasSomethingToRedo: false,\n              isEmpty: this.#isEmpty()\n            });\n          }\n\n          #isEmpty() {\n            if (this.#allEditors.size === 0) {\n              return true;\n            }\n\n            if (this.#allEditors.size === 1) {\n              for (const editor of this.#allEditors.values()) {\n                return editor.isEmpty();\n              }\n            }\n\n            return false;\n          }\n\n          delete() {\n            this.commitOrRemove();\n\n            if (!this.hasSelection) {\n              return;\n            }\n\n            const editors = [...this.#selectedEditors];\n\n            const cmd = () => {\n              for (const editor of editors) {\n                editor.remove();\n              }\n            };\n\n            const undo = () => {\n              for (const editor of editors) {\n                this.#addEditorToLayer(editor);\n              }\n            };\n\n            this.addCommands({\n              cmd,\n              undo,\n              mustExec: true\n            });\n          }\n\n          commitOrRemove() {\n            this.#activeEditor?.commitOrRemove();\n          }\n\n          hasSomethingToControl() {\n            return this.#activeEditor || this.hasSelection;\n          }\n\n          #selectEditors(editors) {\n            this.#selectedEditors.clear();\n\n            for (const editor of editors) {\n              if (editor.isEmpty()) {\n                continue;\n              }\n\n              this.#selectedEditors.add(editor);\n              editor.select();\n            }\n\n            this.#dispatchUpdateStates({\n              hasSelectedEditor: true\n            });\n          }\n\n          selectAll() {\n            for (const editor of this.#selectedEditors) {\n              editor.commit();\n            }\n\n            this.#selectEditors(this.#allEditors.values());\n          }\n\n          unselectAll() {\n            if (this.#activeEditor) {\n              this.#activeEditor.commitOrRemove();\n              return;\n            }\n\n            if (!this.hasSelection) {\n              return;\n            }\n\n            for (const editor of this.#selectedEditors) {\n              editor.unselect();\n            }\n\n            this.#selectedEditors.clear();\n            this.#dispatchUpdateStates({\n              hasSelectedEditor: false\n            });\n          }\n\n          translateSelectedEditors(x, y) {\n            let noCommit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            if (!noCommit) {\n              this.commitOrRemove();\n            }\n\n            if (!this.hasSelection) {\n              return;\n            }\n\n            this.#translation[0] += x;\n            this.#translation[1] += y;\n            const [totalX, totalY] = this.#translation;\n            const editors = [...this.#selectedEditors];\n            const TIME_TO_WAIT = 1000;\n\n            if (this.#translationTimeoutId) {\n              clearTimeout(this.#translationTimeoutId);\n            }\n\n            this.#translationTimeoutId = setTimeout(() => {\n              this.#translationTimeoutId = null;\n              this.#translation[0] = this.#translation[1] = 0;\n              this.addCommands({\n                cmd: () => {\n                  for (const editor of editors) {\n                    if (this.#allEditors.has(editor.id)) {\n                      editor.translateInPage(totalX, totalY);\n                    }\n                  }\n                },\n                undo: () => {\n                  for (const editor of editors) {\n                    if (this.#allEditors.has(editor.id)) {\n                      editor.translateInPage(-totalX, -totalY);\n                    }\n                  }\n                },\n                mustExec: false\n              });\n            }, TIME_TO_WAIT);\n\n            for (const editor of editors) {\n              editor.translateInPage(x, y);\n            }\n          }\n\n          setUpDragSession() {\n            if (!this.hasSelection) {\n              return;\n            }\n\n            this.disableUserSelect(true);\n            this.#draggingEditors = new Map();\n\n            for (const editor of this.#selectedEditors) {\n              this.#draggingEditors.set(editor, {\n                savedX: editor.x,\n                savedY: editor.y,\n                savedPageIndex: editor.pageIndex,\n                newX: 0,\n                newY: 0,\n                newPageIndex: -1\n              });\n            }\n          }\n\n          endDragSession() {\n            if (!this.#draggingEditors) {\n              return false;\n            }\n\n            this.disableUserSelect(false);\n            const map = this.#draggingEditors;\n            this.#draggingEditors = null;\n            let mustBeAddedInUndoStack = false;\n\n            for (const [{\n              x,\n              y,\n              pageIndex\n            }, value] of map) {\n              value.newX = x;\n              value.newY = y;\n              value.newPageIndex = pageIndex;\n              mustBeAddedInUndoStack ||= x !== value.savedX || y !== value.savedY || pageIndex !== value.savedPageIndex;\n            }\n\n            if (!mustBeAddedInUndoStack) {\n              return false;\n            }\n\n            const move = (editor, x, y, pageIndex) => {\n              if (this.#allEditors.has(editor.id)) {\n                const parent = this.#allLayers.get(pageIndex);\n\n                if (parent) {\n                  editor._setParentAndPosition(parent, x, y);\n                } else {\n                  editor.pageIndex = pageIndex;\n                  editor.x = x;\n                  editor.y = y;\n                }\n              }\n            };\n\n            this.addCommands({\n              cmd: () => {\n                for (const [editor, {\n                  newX,\n                  newY,\n                  newPageIndex\n                }] of map) {\n                  move(editor, newX, newY, newPageIndex);\n                }\n              },\n              undo: () => {\n                for (const [editor, {\n                  savedX,\n                  savedY,\n                  savedPageIndex\n                }] of map) {\n                  move(editor, savedX, savedY, savedPageIndex);\n                }\n              },\n              mustExec: true\n            });\n            return true;\n          }\n\n          dragSelectedEditors(tx, ty) {\n            if (!this.#draggingEditors) {\n              return;\n            }\n\n            for (const editor of this.#draggingEditors.keys()) {\n              editor.drag(tx, ty);\n            }\n          }\n\n          rebuild(editor) {\n            if (editor.parent === null) {\n              const parent = this.getLayer(editor.pageIndex);\n\n              if (parent) {\n                parent.changeParent(editor);\n                parent.addOrRebuild(editor);\n              } else {\n                this.addEditor(editor);\n                this.addToAnnotationStorage(editor);\n                editor.rebuild();\n              }\n            } else {\n              editor.parent.addOrRebuild(editor);\n            }\n          }\n\n          isActive(editor) {\n            return this.#activeEditor === editor;\n          }\n\n          getActive() {\n            return this.#activeEditor;\n          }\n\n          getMode() {\n            return this.#mode;\n          }\n\n          get imageManager() {\n            return (0, _util.shadow)(this, \"imageManager\", new ImageManager());\n          }\n\n        }\n\n        exports.AnnotationEditorUIManager = AnnotationEditorUIManager;\n        /***/\n      },\n      /* 6 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.StatTimer = exports.RenderingCancelledException = exports.PixelsPerInch = exports.PageViewport = exports.PDFDateString = exports.DOMStandardFontDataFactory = exports.DOMSVGFactory = exports.DOMFilterFactory = exports.DOMCanvasFactory = exports.DOMCMapReaderFactory = void 0;\n        exports.deprecated = deprecated;\n        exports.getColorValues = getColorValues;\n        exports.getCurrentTransform = getCurrentTransform;\n        exports.getCurrentTransformInverse = getCurrentTransformInverse;\n        exports.getFilenameFromUrl = getFilenameFromUrl;\n        exports.getPdfFilenameFromUrl = getPdfFilenameFromUrl;\n        exports.getRGB = getRGB;\n        exports.getXfaPageViewport = getXfaPageViewport;\n        exports.isDataScheme = isDataScheme;\n        exports.isPdfFile = isPdfFile;\n        exports.isValidFetchUrl = isValidFetchUrl;\n        exports.loadScript = loadScript;\n        exports.noContextMenu = noContextMenu;\n        exports.setLayerDimensions = setLayerDimensions;\n\n        var _base_factory = __w_pdfjs_require__(7);\n\n        var _util = __w_pdfjs_require__(1);\n\n        const SVG_NS = \"http://www.w3.org/2000/svg\";\n\n        class PixelsPerInch {\n          static CSS = 96.0;\n          static PDF = 72.0;\n          static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n        }\n\n        exports.PixelsPerInch = PixelsPerInch;\n\n        class DOMFilterFactory extends _base_factory.BaseFilterFactory {\n          #_cache;\n          #_defs;\n          #docId;\n          #document;\n          #hcmFilter;\n          #hcmKey;\n          #hcmUrl;\n          #hcmHighlightFilter;\n          #hcmHighlightKey;\n          #hcmHighlightUrl;\n          #id = 0;\n\n          constructor() {\n            let {\n              docId,\n              ownerDocument = globalThis.document\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            super();\n            this.#docId = docId;\n            this.#document = ownerDocument;\n          }\n\n          get #cache() {\n            return this.#_cache ||= new Map();\n          }\n\n          get #defs() {\n            if (!this.#_defs) {\n              const div = this.#document.createElement(\"div\");\n              const {\n                style\n              } = div;\n              style.visibility = \"hidden\";\n              style.contain = \"strict\";\n              style.width = style.height = 0;\n              style.position = \"absolute\";\n              style.top = style.left = 0;\n              style.zIndex = -1;\n              const svg = this.#document.createElementNS(SVG_NS, \"svg\");\n              svg.setAttribute(\"width\", 0);\n              svg.setAttribute(\"height\", 0);\n              this.#_defs = this.#document.createElementNS(SVG_NS, \"defs\");\n              div.append(svg);\n              svg.append(this.#_defs);\n              this.#document.body.append(div);\n            }\n\n            return this.#_defs;\n          }\n\n          addFilter(maps) {\n            if (!maps) {\n              return \"none\";\n            }\n\n            let value = this.#cache.get(maps);\n\n            if (value) {\n              return value;\n            }\n\n            let tableR, tableG, tableB, key;\n\n            if (maps.length === 1) {\n              const mapR = maps[0];\n              const buffer = new Array(256);\n\n              for (let i = 0; i < 256; i++) {\n                buffer[i] = mapR[i] / 255;\n              }\n\n              key = tableR = tableG = tableB = buffer.join(\",\");\n            } else {\n              const [mapR, mapG, mapB] = maps;\n              const bufferR = new Array(256);\n              const bufferG = new Array(256);\n              const bufferB = new Array(256);\n\n              for (let i = 0; i < 256; i++) {\n                bufferR[i] = mapR[i] / 255;\n                bufferG[i] = mapG[i] / 255;\n                bufferB[i] = mapB[i] / 255;\n              }\n\n              tableR = bufferR.join(\",\");\n              tableG = bufferG.join(\",\");\n              tableB = bufferB.join(\",\");\n              key = `${tableR}${tableG}${tableB}`;\n            }\n\n            value = this.#cache.get(key);\n\n            if (value) {\n              this.#cache.set(maps, value);\n              return value;\n            }\n\n            const id = `g_${this.#docId}_transfer_map_${this.#id++}`;\n            const url = `url(#${id})`;\n            this.#cache.set(maps, url);\n            this.#cache.set(key, url);\n            const filter = this.#createFilter(id);\n            this.#addTransferMapConversion(tableR, tableG, tableB, filter);\n            return url;\n          }\n\n          addHCMFilter(fgColor, bgColor) {\n            const key = `${fgColor}-${bgColor}`;\n\n            if (this.#hcmKey === key) {\n              return this.#hcmUrl;\n            }\n\n            this.#hcmKey = key;\n            this.#hcmUrl = \"none\";\n            this.#hcmFilter?.remove();\n\n            if (!fgColor || !bgColor) {\n              return this.#hcmUrl;\n            }\n\n            const fgRGB = this.#getRGB(fgColor);\n            fgColor = _util.Util.makeHexColor(...fgRGB);\n            const bgRGB = this.#getRGB(bgColor);\n            bgColor = _util.Util.makeHexColor(...bgRGB);\n            this.#defs.style.color = \"\";\n\n            if (fgColor === \"#000000\" && bgColor === \"#ffffff\" || fgColor === bgColor) {\n              return this.#hcmUrl;\n            }\n\n            const map = new Array(256);\n\n            for (let i = 0; i <= 255; i++) {\n              const x = i / 255;\n              map[i] = x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;\n            }\n\n            const table = map.join(\",\");\n            const id = `g_${this.#docId}_hcm_filter`;\n            const filter = this.#hcmHighlightFilter = this.#createFilter(id);\n            this.#addTransferMapConversion(table, table, table, filter);\n            this.#addGrayConversion(filter);\n\n            const getSteps = (c, n) => {\n              const start = fgRGB[c] / 255;\n              const end = bgRGB[c] / 255;\n              const arr = new Array(n + 1);\n\n              for (let i = 0; i <= n; i++) {\n                arr[i] = start + i / n * (end - start);\n              }\n\n              return arr.join(\",\");\n            };\n\n            this.#addTransferMapConversion(getSteps(0, 5), getSteps(1, 5), getSteps(2, 5), filter);\n            this.#hcmUrl = `url(#${id})`;\n            return this.#hcmUrl;\n          }\n\n          addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n            const key = `${fgColor}-${bgColor}-${newFgColor}-${newBgColor}`;\n\n            if (this.#hcmHighlightKey === key) {\n              return this.#hcmHighlightUrl;\n            }\n\n            this.#hcmHighlightKey = key;\n            this.#hcmHighlightUrl = \"none\";\n            this.#hcmHighlightFilter?.remove();\n\n            if (!fgColor || !bgColor) {\n              return this.#hcmHighlightUrl;\n            }\n\n            const [fgRGB, bgRGB] = [fgColor, bgColor].map(this.#getRGB.bind(this));\n            let fgGray = Math.round(0.2126 * fgRGB[0] + 0.7152 * fgRGB[1] + 0.0722 * fgRGB[2]);\n            let bgGray = Math.round(0.2126 * bgRGB[0] + 0.7152 * bgRGB[1] + 0.0722 * bgRGB[2]);\n            let [newFgRGB, newBgRGB] = [newFgColor, newBgColor].map(this.#getRGB.bind(this));\n\n            if (bgGray < fgGray) {\n              [fgGray, bgGray, newFgRGB, newBgRGB] = [bgGray, fgGray, newBgRGB, newFgRGB];\n            }\n\n            this.#defs.style.color = \"\";\n\n            const getSteps = (fg, bg, n) => {\n              const arr = new Array(256);\n              const step = (bgGray - fgGray) / n;\n              const newStart = fg / 255;\n              const newStep = (bg - fg) / (255 * n);\n              let prev = 0;\n\n              for (let i = 0; i <= n; i++) {\n                const k = Math.round(fgGray + i * step);\n                const value = newStart + i * newStep;\n\n                for (let j = prev; j <= k; j++) {\n                  arr[j] = value;\n                }\n\n                prev = k + 1;\n              }\n\n              for (let i = prev; i < 256; i++) {\n                arr[i] = arr[prev - 1];\n              }\n\n              return arr.join(\",\");\n            };\n\n            const id = `g_${this.#docId}_hcm_highlight_filter`;\n            const filter = this.#hcmHighlightFilter = this.#createFilter(id);\n            this.#addGrayConversion(filter);\n            this.#addTransferMapConversion(getSteps(newFgRGB[0], newBgRGB[0], 5), getSteps(newFgRGB[1], newBgRGB[1], 5), getSteps(newFgRGB[2], newBgRGB[2], 5), filter);\n            this.#hcmHighlightUrl = `url(#${id})`;\n            return this.#hcmHighlightUrl;\n          }\n\n          destroy() {\n            let keepHCM = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (keepHCM && (this.#hcmUrl || this.#hcmHighlightUrl)) {\n              return;\n            }\n\n            if (this.#_defs) {\n              this.#_defs.parentNode.parentNode.remove();\n              this.#_defs = null;\n            }\n\n            if (this.#_cache) {\n              this.#_cache.clear();\n              this.#_cache = null;\n            }\n\n            this.#id = 0;\n          }\n\n          #addGrayConversion(filter) {\n            const feColorMatrix = this.#document.createElementNS(SVG_NS, \"feColorMatrix\");\n            feColorMatrix.setAttribute(\"type\", \"matrix\");\n            feColorMatrix.setAttribute(\"values\", \"0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0\");\n            filter.append(feColorMatrix);\n          }\n\n          #createFilter(id) {\n            const filter = this.#document.createElementNS(SVG_NS, \"filter\");\n            filter.setAttribute(\"color-interpolation-filters\", \"sRGB\");\n            filter.setAttribute(\"id\", id);\n            this.#defs.append(filter);\n            return filter;\n          }\n\n          #appendFeFunc(feComponentTransfer, func, table) {\n            const feFunc = this.#document.createElementNS(SVG_NS, func);\n            feFunc.setAttribute(\"type\", \"discrete\");\n            feFunc.setAttribute(\"tableValues\", table);\n            feComponentTransfer.append(feFunc);\n          }\n\n          #addTransferMapConversion(rTable, gTable, bTable, filter) {\n            const feComponentTransfer = this.#document.createElementNS(SVG_NS, \"feComponentTransfer\");\n            filter.append(feComponentTransfer);\n            this.#appendFeFunc(feComponentTransfer, \"feFuncR\", rTable);\n            this.#appendFeFunc(feComponentTransfer, \"feFuncG\", gTable);\n            this.#appendFeFunc(feComponentTransfer, \"feFuncB\", bTable);\n          }\n\n          #getRGB(color) {\n            this.#defs.style.color = color;\n            return getRGB(getComputedStyle(this.#defs).getPropertyValue(\"color\"));\n          }\n\n        }\n\n        exports.DOMFilterFactory = DOMFilterFactory;\n\n        class DOMCanvasFactory extends _base_factory.BaseCanvasFactory {\n          constructor() {\n            let {\n              ownerDocument = globalThis.document\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            super();\n            this._document = ownerDocument;\n          }\n\n          _createCanvas(width, height) {\n            const canvas = this._document.createElement(\"canvas\");\n\n            canvas.width = width;\n            canvas.height = height;\n            return canvas;\n          }\n\n        }\n\n        exports.DOMCanvasFactory = DOMCanvasFactory;\n\n        async function fetchData(url) {\n          let asTypedArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n          if (isValidFetchUrl(url, document.baseURI)) {\n            const response = await fetch(url);\n\n            if (!response.ok) {\n              throw new Error(response.statusText);\n            }\n\n            return asTypedArray ? new Uint8Array(await response.arrayBuffer()) : (0, _util.stringToBytes)(await response.text());\n          }\n\n          return new Promise((resolve, reject) => {\n            const request = new XMLHttpRequest();\n            request.open(\"GET\", url, true);\n\n            if (asTypedArray) {\n              request.responseType = \"arraybuffer\";\n            }\n\n            request.onreadystatechange = () => {\n              if (request.readyState !== XMLHttpRequest.DONE) {\n                return;\n              }\n\n              if (request.status === 200 || request.status === 0) {\n                let data;\n\n                if (asTypedArray && request.response) {\n                  data = new Uint8Array(request.response);\n                } else if (!asTypedArray && request.responseText) {\n                  data = (0, _util.stringToBytes)(request.responseText);\n                }\n\n                if (data) {\n                  resolve(data);\n                  return;\n                }\n              }\n\n              reject(new Error(request.statusText));\n            };\n\n            request.send(null);\n          });\n        }\n\n        class DOMCMapReaderFactory extends _base_factory.BaseCMapReaderFactory {\n          _fetchData(url, compressionType) {\n            return fetchData(url, this.isCompressed).then(data => {\n              return {\n                cMapData: data,\n                compressionType\n              };\n            });\n          }\n\n        }\n\n        exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n\n        class DOMStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory {\n          _fetchData(url) {\n            return fetchData(url, true);\n          }\n\n        }\n\n        exports.DOMStandardFontDataFactory = DOMStandardFontDataFactory;\n\n        class DOMSVGFactory extends _base_factory.BaseSVGFactory {\n          _createSVG(type) {\n            return document.createElementNS(SVG_NS, type);\n          }\n\n        }\n\n        exports.DOMSVGFactory = DOMSVGFactory;\n\n        class PageViewport {\n          constructor(_ref22) {\n            let {\n              viewBox,\n              scale,\n              rotation,\n              offsetX = 0,\n              offsetY = 0,\n              dontFlip = false\n            } = _ref22;\n            this.viewBox = viewBox;\n            this.scale = scale;\n            this.rotation = rotation;\n            this.offsetX = offsetX;\n            this.offsetY = offsetY;\n            const centerX = (viewBox[2] + viewBox[0]) / 2;\n            const centerY = (viewBox[3] + viewBox[1]) / 2;\n            let rotateA, rotateB, rotateC, rotateD;\n            rotation %= 360;\n\n            if (rotation < 0) {\n              rotation += 360;\n            }\n\n            switch (rotation) {\n              case 180:\n                rotateA = -1;\n                rotateB = 0;\n                rotateC = 0;\n                rotateD = 1;\n                break;\n\n              case 90:\n                rotateA = 0;\n                rotateB = 1;\n                rotateC = 1;\n                rotateD = 0;\n                break;\n\n              case 270:\n                rotateA = 0;\n                rotateB = -1;\n                rotateC = -1;\n                rotateD = 0;\n                break;\n\n              case 0:\n                rotateA = 1;\n                rotateB = 0;\n                rotateC = 0;\n                rotateD = -1;\n                break;\n\n              default:\n                throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n            }\n\n            if (dontFlip) {\n              rotateC = -rotateC;\n              rotateD = -rotateD;\n            }\n\n            let offsetCanvasX, offsetCanvasY;\n            let width, height;\n\n            if (rotateA === 0) {\n              offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n              offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n              width = (viewBox[3] - viewBox[1]) * scale;\n              height = (viewBox[2] - viewBox[0]) * scale;\n            } else {\n              offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n              offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n              width = (viewBox[2] - viewBox[0]) * scale;\n              height = (viewBox[3] - viewBox[1]) * scale;\n            }\n\n            this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n            this.width = width;\n            this.height = height;\n          }\n\n          get rawDims() {\n            const {\n              viewBox\n            } = this;\n            return (0, _util.shadow)(this, \"rawDims\", {\n              pageWidth: viewBox[2] - viewBox[0],\n              pageHeight: viewBox[3] - viewBox[1],\n              pageX: viewBox[0],\n              pageY: viewBox[1]\n            });\n          }\n\n          clone() {\n            let {\n              scale = this.scale,\n              rotation = this.rotation,\n              offsetX = this.offsetX,\n              offsetY = this.offsetY,\n              dontFlip = false\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            return new PageViewport({\n              viewBox: this.viewBox.slice(),\n              scale,\n              rotation,\n              offsetX,\n              offsetY,\n              dontFlip\n            });\n          }\n\n          convertToViewportPoint(x, y) {\n            return _util.Util.applyTransform([x, y], this.transform);\n          }\n\n          convertToViewportRectangle(rect) {\n            const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n\n            const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n\n            return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n          }\n\n          convertToPdfPoint(x, y) {\n            return _util.Util.applyInverseTransform([x, y], this.transform);\n          }\n\n        }\n\n        exports.PageViewport = PageViewport;\n\n        class RenderingCancelledException extends _util.BaseException {\n          constructor(msg) {\n            let extraDelay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            super(msg, \"RenderingCancelledException\");\n            this.extraDelay = extraDelay;\n          }\n\n        }\n\n        exports.RenderingCancelledException = RenderingCancelledException;\n\n        function isDataScheme(url) {\n          const ii = url.length;\n          let i = 0;\n\n          while (i < ii && url[i].trim() === \"\") {\n            i++;\n          }\n\n          return url.substring(i, i + 5).toLowerCase() === \"data:\";\n        }\n\n        function isPdfFile(filename) {\n          return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n        }\n\n        function getFilenameFromUrl(url) {\n          let onlyStripPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n          if (!onlyStripPath) {\n            [url] = url.split(/[#?]/, 1);\n          }\n\n          return url.substring(url.lastIndexOf(\"/\") + 1);\n        }\n\n        function getPdfFilenameFromUrl(url) {\n          let defaultFilename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"document.pdf\";\n\n          if (typeof url !== \"string\") {\n            return defaultFilename;\n          }\n\n          if (isDataScheme(url)) {\n            (0, _util.warn)('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n            return defaultFilename;\n          }\n\n          const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n          const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n          const splitURI = reURI.exec(url);\n          let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n\n          if (suggestedFilename) {\n            suggestedFilename = suggestedFilename[0];\n\n            if (suggestedFilename.includes(\"%\")) {\n              try {\n                suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n              } catch {}\n            }\n          }\n\n          return suggestedFilename || defaultFilename;\n        }\n\n        class StatTimer {\n          started = Object.create(null);\n          times = [];\n\n          time(name) {\n            if (name in this.started) {\n              (0, _util.warn)(`Timer is already running for ${name}`);\n            }\n\n            this.started[name] = Date.now();\n          }\n\n          timeEnd(name) {\n            if (!(name in this.started)) {\n              (0, _util.warn)(`Timer has not been started for ${name}`);\n            }\n\n            this.times.push({\n              name,\n              start: this.started[name],\n              end: Date.now()\n            });\n            delete this.started[name];\n          }\n\n          toString() {\n            const outBuf = [];\n            let longest = 0;\n\n            for (const {\n              name\n            } of this.times) {\n              longest = Math.max(name.length, longest);\n            }\n\n            for (const {\n              name,\n              start,\n              end\n            } of this.times) {\n              outBuf.push(`${name.padEnd(longest)} ${end - start}ms\\n`);\n            }\n\n            return outBuf.join(\"\");\n          }\n\n        }\n\n        exports.StatTimer = StatTimer;\n\n        function isValidFetchUrl(url, baseUrl) {\n          try {\n            const {\n              protocol\n            } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n            return protocol === \"http:\" || protocol === \"https:\";\n          } catch {\n            return false;\n          }\n        }\n\n        function noContextMenu(e) {\n          e.preventDefault();\n        }\n\n        function loadScript(src) {\n          let removeScriptElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          return new Promise((resolve, reject) => {\n            const script = document.createElement(\"script\");\n            script.src = src;\n\n            script.onload = function (evt) {\n              if (removeScriptElement) {\n                script.remove();\n              }\n\n              resolve(evt);\n            };\n\n            script.onerror = function () {\n              reject(new Error(`Cannot load script at: ${script.src}`));\n            };\n\n            (document.head || document.documentElement).append(script);\n          });\n        }\n\n        function deprecated(details) {\n          console.log(\"Deprecated API usage: \" + details);\n        }\n\n        let pdfDateStringRegex;\n\n        class PDFDateString {\n          static toDateObject(input) {\n            if (!input || typeof input !== \"string\") {\n              return null;\n            }\n\n            pdfDateStringRegex ||= new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n            const matches = pdfDateStringRegex.exec(input);\n\n            if (!matches) {\n              return null;\n            }\n\n            const year = parseInt(matches[1], 10);\n            let month = parseInt(matches[2], 10);\n            month = month >= 1 && month <= 12 ? month - 1 : 0;\n            let day = parseInt(matches[3], 10);\n            day = day >= 1 && day <= 31 ? day : 1;\n            let hour = parseInt(matches[4], 10);\n            hour = hour >= 0 && hour <= 23 ? hour : 0;\n            let minute = parseInt(matches[5], 10);\n            minute = minute >= 0 && minute <= 59 ? minute : 0;\n            let second = parseInt(matches[6], 10);\n            second = second >= 0 && second <= 59 ? second : 0;\n            const universalTimeRelation = matches[7] || \"Z\";\n            let offsetHour = parseInt(matches[8], 10);\n            offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n            let offsetMinute = parseInt(matches[9], 10) || 0;\n            offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n            if (universalTimeRelation === \"-\") {\n              hour += offsetHour;\n              minute += offsetMinute;\n            } else if (universalTimeRelation === \"+\") {\n              hour -= offsetHour;\n              minute -= offsetMinute;\n            }\n\n            return new Date(Date.UTC(year, month, day, hour, minute, second));\n          }\n\n        }\n\n        exports.PDFDateString = PDFDateString;\n\n        function getXfaPageViewport(xfaPage, _ref23) {\n          let {\n            scale = 1,\n            rotation = 0\n          } = _ref23;\n          const {\n            width,\n            height\n          } = xfaPage.attributes.style;\n          const viewBox = [0, 0, parseInt(width), parseInt(height)];\n          return new PageViewport({\n            viewBox,\n            scale,\n            rotation\n          });\n        }\n\n        function getRGB(color) {\n          if (color.startsWith(\"#\")) {\n            const colorRGB = parseInt(color.slice(1), 16);\n            return [(colorRGB & 0xff0000) >> 16, (colorRGB & 0x00ff00) >> 8, colorRGB & 0x0000ff];\n          }\n\n          if (color.startsWith(\"rgb(\")) {\n            return color.slice(4, -1).split(\",\").map(x => parseInt(x));\n          }\n\n          if (color.startsWith(\"rgba(\")) {\n            return color.slice(5, -1).split(\",\").map(x => parseInt(x)).slice(0, 3);\n          }\n\n          (0, _util.warn)(`Not a valid color format: \"${color}\"`);\n          return [0, 0, 0];\n        }\n\n        function getColorValues(colors) {\n          const span = document.createElement(\"span\");\n          span.style.visibility = \"hidden\";\n          document.body.append(span);\n\n          for (const name of colors.keys()) {\n            span.style.color = name;\n            const computedColor = window.getComputedStyle(span).color;\n            colors.set(name, getRGB(computedColor));\n          }\n\n          span.remove();\n        }\n\n        function getCurrentTransform(ctx) {\n          const {\n            a,\n            b,\n            c,\n            d,\n            e,\n            f\n          } = ctx.getTransform();\n          return [a, b, c, d, e, f];\n        }\n\n        function getCurrentTransformInverse(ctx) {\n          const {\n            a,\n            b,\n            c,\n            d,\n            e,\n            f\n          } = ctx.getTransform().invertSelf();\n          return [a, b, c, d, e, f];\n        }\n\n        function setLayerDimensions(div, viewport) {\n          let mustFlip = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          let mustRotate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n          if (viewport instanceof PageViewport) {\n            const {\n              pageWidth,\n              pageHeight\n            } = viewport.rawDims;\n            const {\n              style\n            } = div;\n            const useRound = _util.FeatureTest.isCSSRoundSupported;\n            const w = `var(--scale-factor) * ${pageWidth}px`,\n                  h = `var(--scale-factor) * ${pageHeight}px`;\n            const widthStr = useRound ? `round(${w}, 1px)` : `calc(${w})`,\n                  heightStr = useRound ? `round(${h}, 1px)` : `calc(${h})`;\n\n            if (!mustFlip || viewport.rotation % 180 === 0) {\n              style.width = widthStr;\n              style.height = heightStr;\n            } else {\n              style.width = heightStr;\n              style.height = widthStr;\n            }\n          }\n\n          if (mustRotate) {\n            div.setAttribute(\"data-main-rotation\", viewport.rotation);\n          }\n        }\n        /***/\n\n      },\n      /* 7 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.BaseStandardFontDataFactory = exports.BaseSVGFactory = exports.BaseFilterFactory = exports.BaseCanvasFactory = exports.BaseCMapReaderFactory = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        class BaseFilterFactory {\n          constructor() {\n            if (this.constructor === BaseFilterFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseFilterFactory.\");\n            }\n          }\n\n          addFilter(maps) {\n            return \"none\";\n          }\n\n          addHCMFilter(fgColor, bgColor) {\n            return \"none\";\n          }\n\n          addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n            return \"none\";\n          }\n\n          destroy() {\n            let keepHCM = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n          }\n\n        }\n\n        exports.BaseFilterFactory = BaseFilterFactory;\n\n        class BaseCanvasFactory {\n          constructor() {\n            if (this.constructor === BaseCanvasFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseCanvasFactory.\");\n            }\n          }\n\n          create(width, height) {\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n\n            const canvas = this._createCanvas(width, height);\n\n            return {\n              canvas,\n              context: canvas.getContext(\"2d\")\n            };\n          }\n\n          reset(canvasAndContext, width, height) {\n            if (!canvasAndContext.canvas) {\n              throw new Error(\"Canvas is not specified\");\n            }\n\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n\n            canvasAndContext.canvas.width = width;\n            canvasAndContext.canvas.height = height;\n          }\n\n          destroy(canvasAndContext) {\n            if (!canvasAndContext.canvas) {\n              throw new Error(\"Canvas is not specified\");\n            }\n\n            canvasAndContext.canvas.width = 0;\n            canvasAndContext.canvas.height = 0;\n            canvasAndContext.canvas = null;\n            canvasAndContext.context = null;\n          }\n\n          _createCanvas(width, height) {\n            (0, _util.unreachable)(\"Abstract method `_createCanvas` called.\");\n          }\n\n        }\n\n        exports.BaseCanvasFactory = BaseCanvasFactory;\n\n        class BaseCMapReaderFactory {\n          constructor(_ref24) {\n            let {\n              baseUrl = null,\n              isCompressed = true\n            } = _ref24;\n\n            if (this.constructor === BaseCMapReaderFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseCMapReaderFactory.\");\n            }\n\n            this.baseUrl = baseUrl;\n            this.isCompressed = isCompressed;\n          }\n\n          async fetch(_ref25) {\n            let {\n              name\n            } = _ref25;\n\n            if (!this.baseUrl) {\n              throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n            }\n\n            if (!name) {\n              throw new Error(\"CMap name must be specified.\");\n            }\n\n            const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n            const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n            return this._fetchData(url, compressionType).catch(reason => {\n              throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`);\n            });\n          }\n\n          _fetchData(url, compressionType) {\n            (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n          }\n\n        }\n\n        exports.BaseCMapReaderFactory = BaseCMapReaderFactory;\n\n        class BaseStandardFontDataFactory {\n          constructor(_ref26) {\n            let {\n              baseUrl = null\n            } = _ref26;\n\n            if (this.constructor === BaseStandardFontDataFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseStandardFontDataFactory.\");\n            }\n\n            this.baseUrl = baseUrl;\n          }\n\n          async fetch(_ref27) {\n            let {\n              filename\n            } = _ref27;\n\n            if (!this.baseUrl) {\n              throw new Error('The standard font \"baseUrl\" parameter must be specified, ensure that ' + 'the \"standardFontDataUrl\" API parameter is provided.');\n            }\n\n            if (!filename) {\n              throw new Error(\"Font filename must be specified.\");\n            }\n\n            const url = `${this.baseUrl}${filename}`;\n            return this._fetchData(url).catch(reason => {\n              throw new Error(`Unable to load font data at: ${url}`);\n            });\n          }\n\n          _fetchData(url) {\n            (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n          }\n\n        }\n\n        exports.BaseStandardFontDataFactory = BaseStandardFontDataFactory;\n\n        class BaseSVGFactory {\n          constructor() {\n            if (this.constructor === BaseSVGFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseSVGFactory.\");\n            }\n          }\n\n          create(width, height) {\n            let skipDimensions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid SVG dimensions\");\n            }\n\n            const svg = this._createSVG(\"svg:svg\");\n\n            svg.setAttribute(\"version\", \"1.1\");\n\n            if (!skipDimensions) {\n              svg.setAttribute(\"width\", `${width}px`);\n              svg.setAttribute(\"height\", `${height}px`);\n            }\n\n            svg.setAttribute(\"preserveAspectRatio\", \"none\");\n            svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n            return svg;\n          }\n\n          createElement(type) {\n            if (typeof type !== \"string\") {\n              throw new Error(\"Invalid SVG element type\");\n            }\n\n            return this._createSVG(type);\n          }\n\n          _createSVG(type) {\n            (0, _util.unreachable)(\"Abstract method `_createSVG` called.\");\n          }\n\n        }\n\n        exports.BaseSVGFactory = BaseSVGFactory;\n        /***/\n      },\n      /* 8 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.MurmurHash3_64 = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        const SEED = 0xc3d2e1f0;\n        const MASK_HIGH = 0xffff0000;\n        const MASK_LOW = 0xffff;\n\n        class MurmurHash3_64 {\n          constructor(seed) {\n            this.h1 = seed ? seed & 0xffffffff : SEED;\n            this.h2 = seed ? seed & 0xffffffff : SEED;\n          }\n\n          update(input) {\n            let data, length;\n\n            if (typeof input === \"string\") {\n              data = new Uint8Array(input.length * 2);\n              length = 0;\n\n              for (let i = 0, ii = input.length; i < ii; i++) {\n                const code = input.charCodeAt(i);\n\n                if (code <= 0xff) {\n                  data[length++] = code;\n                } else {\n                  data[length++] = code >>> 8;\n                  data[length++] = code & 0xff;\n                }\n              }\n            } else if ((0, _util.isArrayBuffer)(input)) {\n              data = input.slice();\n              length = data.byteLength;\n            } else {\n              throw new Error(\"Wrong data format in MurmurHash3_64_update. \" + \"Input must be a string or array.\");\n            }\n\n            const blockCounts = length >> 2;\n            const tailLength = length - blockCounts * 4;\n            const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n            let k1 = 0,\n                k2 = 0;\n            let h1 = this.h1,\n                h2 = this.h2;\n            const C1 = 0xcc9e2d51,\n                  C2 = 0x1b873593;\n            const C1_LOW = C1 & MASK_LOW,\n                  C2_LOW = C2 & MASK_LOW;\n\n            for (let i = 0; i < blockCounts; i++) {\n              if (i & 1) {\n                k1 = dataUint32[i];\n                k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n                k1 = k1 << 15 | k1 >>> 17;\n                k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n                h1 ^= k1;\n                h1 = h1 << 13 | h1 >>> 19;\n                h1 = h1 * 5 + 0xe6546b64;\n              } else {\n                k2 = dataUint32[i];\n                k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n                k2 = k2 << 15 | k2 >>> 17;\n                k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n                h2 ^= k2;\n                h2 = h2 << 13 | h2 >>> 19;\n                h2 = h2 * 5 + 0xe6546b64;\n              }\n            }\n\n            k1 = 0;\n\n            switch (tailLength) {\n              case 3:\n                k1 ^= data[blockCounts * 4 + 2] << 16;\n\n              case 2:\n                k1 ^= data[blockCounts * 4 + 1] << 8;\n\n              case 1:\n                k1 ^= data[blockCounts * 4];\n                k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n                k1 = k1 << 15 | k1 >>> 17;\n                k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n\n                if (blockCounts & 1) {\n                  h1 ^= k1;\n                } else {\n                  h2 ^= k1;\n                }\n\n            }\n\n            this.h1 = h1;\n            this.h2 = h2;\n          }\n\n          hexdigest() {\n            let h1 = this.h1,\n                h2 = this.h2;\n            h1 ^= h2 >>> 1;\n            h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n            h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n            h1 ^= h2 >>> 1;\n            h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n            h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n            h1 ^= h2 >>> 1;\n            return (h1 >>> 0).toString(16).padStart(8, \"0\") + (h2 >>> 0).toString(16).padStart(8, \"0\");\n          }\n\n        }\n\n        exports.MurmurHash3_64 = MurmurHash3_64;\n        /***/\n      },\n      /* 9 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.FontLoader = exports.FontFaceObject = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        class FontLoader {\n          #systemFonts = new Set();\n\n          constructor(_ref28) {\n            let {\n              ownerDocument = globalThis.document,\n              styleElement = null\n            } = _ref28;\n            this._document = ownerDocument;\n            this.nativeFontFaces = new Set();\n            this.styleElement = null;\n            this.loadingRequests = [];\n            this.loadTestFontId = 0;\n          }\n\n          addNativeFontFace(nativeFontFace) {\n            this.nativeFontFaces.add(nativeFontFace);\n\n            this._document.fonts.add(nativeFontFace);\n          }\n\n          removeNativeFontFace(nativeFontFace) {\n            this.nativeFontFaces.delete(nativeFontFace);\n\n            this._document.fonts.delete(nativeFontFace);\n          }\n\n          insertRule(rule) {\n            if (!this.styleElement) {\n              this.styleElement = this._document.createElement(\"style\");\n\n              this._document.documentElement.getElementsByTagName(\"head\")[0].append(this.styleElement);\n            }\n\n            const styleSheet = this.styleElement.sheet;\n            styleSheet.insertRule(rule, styleSheet.cssRules.length);\n          }\n\n          clear() {\n            for (const nativeFontFace of this.nativeFontFaces) {\n              this._document.fonts.delete(nativeFontFace);\n            }\n\n            this.nativeFontFaces.clear();\n            this.#systemFonts.clear();\n\n            if (this.styleElement) {\n              this.styleElement.remove();\n              this.styleElement = null;\n            }\n          }\n\n          async loadSystemFont(info) {\n            if (!info || this.#systemFonts.has(info.loadedName)) {\n              return;\n            }\n\n            (0, _util.assert)(!this.disableFontFace, \"loadSystemFont shouldn't be called when `disableFontFace` is set.\");\n\n            if (this.isFontLoadingAPISupported) {\n              const {\n                loadedName,\n                src,\n                style\n              } = info;\n              const fontFace = new FontFace(loadedName, src, style);\n              this.addNativeFontFace(fontFace);\n\n              try {\n                await fontFace.load();\n                this.#systemFonts.add(loadedName);\n              } catch {\n                (0, _util.warn)(`Cannot load system font: ${info.baseFontName}, installing it could help to improve PDF rendering.`);\n                this.removeNativeFontFace(fontFace);\n              }\n\n              return;\n            }\n\n            (0, _util.unreachable)(\"Not implemented: loadSystemFont without the Font Loading API.\");\n          }\n\n          async bind(font) {\n            if (font.attached || font.missingFile && !font.systemFontInfo) {\n              return;\n            }\n\n            font.attached = true;\n\n            if (font.systemFontInfo) {\n              await this.loadSystemFont(font.systemFontInfo);\n              return;\n            }\n\n            if (this.isFontLoadingAPISupported) {\n              const nativeFontFace = font.createNativeFontFace();\n\n              if (nativeFontFace) {\n                this.addNativeFontFace(nativeFontFace);\n\n                try {\n                  await nativeFontFace.loaded;\n                } catch (ex) {\n                  (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n                  font.disableFontFace = true;\n                  throw ex;\n                }\n              }\n\n              return;\n            }\n\n            const rule = font.createFontFaceRule();\n\n            if (rule) {\n              this.insertRule(rule);\n\n              if (this.isSyncFontLoadingSupported) {\n                return;\n              }\n\n              await new Promise(resolve => {\n                const request = this._queueLoadingCallback(resolve);\n\n                this._prepareFontLoadEvent(font, request);\n              });\n            }\n          }\n\n          get isFontLoadingAPISupported() {\n            const hasFonts = !!this._document?.fonts;\n            return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", hasFonts);\n          }\n\n          get isSyncFontLoadingSupported() {\n            let supported = false;\n\n            if (_util.isNodeJS) {\n              supported = true;\n            } else if (typeof navigator !== \"undefined\" && /Mozilla\\/5.0.*?rv:\\d+.*? Gecko/.test(navigator.userAgent)) {\n              supported = true;\n            }\n\n            return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n          }\n\n          _queueLoadingCallback(callback) {\n            function completeRequest() {\n              (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n              request.done = true;\n\n              while (loadingRequests.length > 0 && loadingRequests[0].done) {\n                const otherRequest = loadingRequests.shift();\n                setTimeout(otherRequest.callback, 0);\n              }\n            }\n\n            const {\n              loadingRequests\n            } = this;\n            const request = {\n              done: false,\n              complete: completeRequest,\n              callback\n            };\n            loadingRequests.push(request);\n            return request;\n          }\n\n          get _loadTestFont() {\n            const testFont = atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n            return (0, _util.shadow)(this, \"_loadTestFont\", testFont);\n          }\n\n          _prepareFontLoadEvent(font, request) {\n            function int32(data, offset) {\n              return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n            }\n\n            function spliceString(s, offset, remove, insert) {\n              const chunk1 = s.substring(0, offset);\n              const chunk2 = s.substring(offset + remove);\n              return chunk1 + insert + chunk2;\n            }\n\n            let i, ii;\n\n            const canvas = this._document.createElement(\"canvas\");\n\n            canvas.width = 1;\n            canvas.height = 1;\n            const ctx = canvas.getContext(\"2d\");\n            let called = 0;\n\n            function isFontReady(name, callback) {\n              if (++called > 30) {\n                (0, _util.warn)(\"Load test font never loaded.\");\n                callback();\n                return;\n              }\n\n              ctx.font = \"30px \" + name;\n              ctx.fillText(\".\", 0, 20);\n              const imageData = ctx.getImageData(0, 0, 1, 1);\n\n              if (imageData.data[3] > 0) {\n                callback();\n                return;\n              }\n\n              setTimeout(isFontReady.bind(null, name, callback));\n            }\n\n            const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n            let data = this._loadTestFont;\n            const COMMENT_OFFSET = 976;\n            data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n            const CFF_CHECKSUM_OFFSET = 16;\n            const XXXX_VALUE = 0x58585858;\n            let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n\n            for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n              checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n            }\n\n            if (i < loadTestFontId.length) {\n              checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n            }\n\n            data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n            const url = `url(data:font/opentype;base64,${btoa(data)});`;\n            const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n            this.insertRule(rule);\n\n            const div = this._document.createElement(\"div\");\n\n            div.style.visibility = \"hidden\";\n            div.style.width = div.style.height = \"10px\";\n            div.style.position = \"absolute\";\n            div.style.top = div.style.left = \"0px\";\n\n            for (const name of [font.loadedName, loadTestFontId]) {\n              const span = this._document.createElement(\"span\");\n\n              span.textContent = \"Hi\";\n              span.style.fontFamily = name;\n              div.append(span);\n            }\n\n            this._document.body.append(div);\n\n            isFontReady(loadTestFontId, () => {\n              div.remove();\n              request.complete();\n            });\n          }\n\n        }\n\n        exports.FontLoader = FontLoader;\n\n        class FontFaceObject {\n          constructor(translatedData, _ref29) {\n            let {\n              isEvalSupported = true,\n              disableFontFace = false,\n              ignoreErrors = false,\n              inspectFont = null\n            } = _ref29;\n            this.compiledGlyphs = Object.create(null);\n\n            for (const i in translatedData) {\n              this[i] = translatedData[i];\n            }\n\n            this.isEvalSupported = isEvalSupported !== false;\n            this.disableFontFace = disableFontFace === true;\n            this.ignoreErrors = ignoreErrors === true;\n            this._inspectFont = inspectFont;\n          }\n\n          createNativeFontFace() {\n            if (!this.data || this.disableFontFace) {\n              return null;\n            }\n\n            let nativeFontFace;\n\n            if (!this.cssFontInfo) {\n              nativeFontFace = new FontFace(this.loadedName, this.data, {});\n            } else {\n              const css = {\n                weight: this.cssFontInfo.fontWeight\n              };\n\n              if (this.cssFontInfo.italicAngle) {\n                css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n              }\n\n              nativeFontFace = new FontFace(this.cssFontInfo.fontFamily, this.data, css);\n            }\n\n            this._inspectFont?.(this);\n            return nativeFontFace;\n          }\n\n          createFontFaceRule() {\n            if (!this.data || this.disableFontFace) {\n              return null;\n            }\n\n            const data = (0, _util.bytesToString)(this.data);\n            const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n            let rule;\n\n            if (!this.cssFontInfo) {\n              rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n            } else {\n              let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n\n              if (this.cssFontInfo.italicAngle) {\n                css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n              }\n\n              rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n            }\n\n            this._inspectFont?.(this, url);\n            return rule;\n          }\n\n          getPathGenerator(objs, character) {\n            if (this.compiledGlyphs[character] !== undefined) {\n              return this.compiledGlyphs[character];\n            }\n\n            let cmds;\n\n            try {\n              cmds = objs.get(this.loadedName + \"_path_\" + character);\n            } catch (ex) {\n              if (!this.ignoreErrors) {\n                throw ex;\n              }\n\n              (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n              return this.compiledGlyphs[character] = function (c, size) {};\n            }\n\n            if (this.isEvalSupported && _util.FeatureTest.isEvalSupported) {\n              const jsBuf = [];\n\n              for (const current of cmds) {\n                const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n                jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n              }\n\n              return this.compiledGlyphs[character] = new Function(\"c\", \"size\", jsBuf.join(\"\"));\n            }\n\n            return this.compiledGlyphs[character] = function (c, size) {\n              for (const current of cmds) {\n                if (current.cmd === \"scale\") {\n                  current.args = [size, -size];\n                }\n\n                c[current.cmd].apply(c, current.args);\n              }\n            };\n          }\n\n        }\n\n        exports.FontFaceObject = FontFaceObject;\n        /***/\n      },\n      /* 10 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.NodeStandardFontDataFactory = exports.NodeFilterFactory = exports.NodeCanvasFactory = exports.NodeCMapReaderFactory = void 0;\n\n        var _base_factory = __w_pdfjs_require__(7);\n\n        var _util = __w_pdfjs_require__(1);\n\n        ;\n        ;\n\n        const fetchData = function (url) {\n          return new Promise((resolve, reject) => {\n            const fs = require(\"fs\");\n\n            fs.readFile(url, (error, data) => {\n              if (error || !data) {\n                reject(new Error(error));\n                return;\n              }\n\n              resolve(new Uint8Array(data));\n            });\n          });\n        };\n\n        class NodeFilterFactory extends _base_factory.BaseFilterFactory {}\n\n        exports.NodeFilterFactory = NodeFilterFactory;\n\n        class NodeCanvasFactory extends _base_factory.BaseCanvasFactory {\n          _createCanvas(width, height) {\n            const Canvas = require(\"canvas\");\n\n            return Canvas.createCanvas(width, height);\n          }\n\n        }\n\n        exports.NodeCanvasFactory = NodeCanvasFactory;\n\n        class NodeCMapReaderFactory extends _base_factory.BaseCMapReaderFactory {\n          _fetchData(url, compressionType) {\n            return fetchData(url).then(data => {\n              return {\n                cMapData: data,\n                compressionType\n              };\n            });\n          }\n\n        }\n\n        exports.NodeCMapReaderFactory = NodeCMapReaderFactory;\n\n        class NodeStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory {\n          _fetchData(url) {\n            return fetchData(url);\n          }\n\n        }\n\n        exports.NodeStandardFontDataFactory = NodeStandardFontDataFactory;\n        /***/\n      },\n      /* 11 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.CanvasGraphics = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _display_utils = __w_pdfjs_require__(6);\n\n        var _pattern_helper = __w_pdfjs_require__(12);\n\n        var _image_utils = __w_pdfjs_require__(13);\n\n        const MIN_FONT_SIZE = 16;\n        const MAX_FONT_SIZE = 100;\n        const MAX_GROUP_SIZE = 4096;\n        const EXECUTION_TIME = 15;\n        const EXECUTION_STEPS = 10;\n        const MAX_SIZE_TO_COMPILE = 1000;\n        const FULL_CHUNK_HEIGHT = 16;\n\n        function mirrorContextOperations(ctx, destCtx) {\n          if (ctx._removeMirroring) {\n            throw new Error(\"Context is already forwarding operations.\");\n          }\n\n          ctx.__originalSave = ctx.save;\n          ctx.__originalRestore = ctx.restore;\n          ctx.__originalRotate = ctx.rotate;\n          ctx.__originalScale = ctx.scale;\n          ctx.__originalTranslate = ctx.translate;\n          ctx.__originalTransform = ctx.transform;\n          ctx.__originalSetTransform = ctx.setTransform;\n          ctx.__originalResetTransform = ctx.resetTransform;\n          ctx.__originalClip = ctx.clip;\n          ctx.__originalMoveTo = ctx.moveTo;\n          ctx.__originalLineTo = ctx.lineTo;\n          ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n          ctx.__originalRect = ctx.rect;\n          ctx.__originalClosePath = ctx.closePath;\n          ctx.__originalBeginPath = ctx.beginPath;\n\n          ctx._removeMirroring = () => {\n            ctx.save = ctx.__originalSave;\n            ctx.restore = ctx.__originalRestore;\n            ctx.rotate = ctx.__originalRotate;\n            ctx.scale = ctx.__originalScale;\n            ctx.translate = ctx.__originalTranslate;\n            ctx.transform = ctx.__originalTransform;\n            ctx.setTransform = ctx.__originalSetTransform;\n            ctx.resetTransform = ctx.__originalResetTransform;\n            ctx.clip = ctx.__originalClip;\n            ctx.moveTo = ctx.__originalMoveTo;\n            ctx.lineTo = ctx.__originalLineTo;\n            ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n            ctx.rect = ctx.__originalRect;\n            ctx.closePath = ctx.__originalClosePath;\n            ctx.beginPath = ctx.__originalBeginPath;\n            delete ctx._removeMirroring;\n          };\n\n          ctx.save = function ctxSave() {\n            destCtx.save();\n\n            this.__originalSave();\n          };\n\n          ctx.restore = function ctxRestore() {\n            destCtx.restore();\n\n            this.__originalRestore();\n          };\n\n          ctx.translate = function ctxTranslate(x, y) {\n            destCtx.translate(x, y);\n\n            this.__originalTranslate(x, y);\n          };\n\n          ctx.scale = function ctxScale(x, y) {\n            destCtx.scale(x, y);\n\n            this.__originalScale(x, y);\n          };\n\n          ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n            destCtx.transform(a, b, c, d, e, f);\n\n            this.__originalTransform(a, b, c, d, e, f);\n          };\n\n          ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n            destCtx.setTransform(a, b, c, d, e, f);\n\n            this.__originalSetTransform(a, b, c, d, e, f);\n          };\n\n          ctx.resetTransform = function ctxResetTransform() {\n            destCtx.resetTransform();\n\n            this.__originalResetTransform();\n          };\n\n          ctx.rotate = function ctxRotate(angle) {\n            destCtx.rotate(angle);\n\n            this.__originalRotate(angle);\n          };\n\n          ctx.clip = function ctxRotate(rule) {\n            destCtx.clip(rule);\n\n            this.__originalClip(rule);\n          };\n\n          ctx.moveTo = function (x, y) {\n            destCtx.moveTo(x, y);\n\n            this.__originalMoveTo(x, y);\n          };\n\n          ctx.lineTo = function (x, y) {\n            destCtx.lineTo(x, y);\n\n            this.__originalLineTo(x, y);\n          };\n\n          ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n            destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n\n            this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n          };\n\n          ctx.rect = function (x, y, width, height) {\n            destCtx.rect(x, y, width, height);\n\n            this.__originalRect(x, y, width, height);\n          };\n\n          ctx.closePath = function () {\n            destCtx.closePath();\n\n            this.__originalClosePath();\n          };\n\n          ctx.beginPath = function () {\n            destCtx.beginPath();\n\n            this.__originalBeginPath();\n          };\n        }\n\n        class CachedCanvases {\n          constructor(canvasFactory) {\n            this.canvasFactory = canvasFactory;\n            this.cache = Object.create(null);\n          }\n\n          getCanvas(id, width, height) {\n            let canvasEntry;\n\n            if (this.cache[id] !== undefined) {\n              canvasEntry = this.cache[id];\n              this.canvasFactory.reset(canvasEntry, width, height);\n            } else {\n              canvasEntry = this.canvasFactory.create(width, height);\n              this.cache[id] = canvasEntry;\n            }\n\n            return canvasEntry;\n          }\n\n          delete(id) {\n            delete this.cache[id];\n          }\n\n          clear() {\n            for (const id in this.cache) {\n              const canvasEntry = this.cache[id];\n              this.canvasFactory.destroy(canvasEntry);\n              delete this.cache[id];\n            }\n          }\n\n        }\n\n        function drawImageAtIntegerCoords(ctx, srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH) {\n          const [a, b, c, d, tx, ty] = (0, _display_utils.getCurrentTransform)(ctx);\n\n          if (b === 0 && c === 0) {\n            const tlX = destX * a + tx;\n            const rTlX = Math.round(tlX);\n            const tlY = destY * d + ty;\n            const rTlY = Math.round(tlY);\n            const brX = (destX + destW) * a + tx;\n            const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n            const brY = (destY + destH) * d + ty;\n            const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n            ctx.setTransform(Math.sign(a), 0, 0, Math.sign(d), rTlX, rTlY);\n            ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rWidth, rHeight);\n            ctx.setTransform(a, b, c, d, tx, ty);\n            return [rWidth, rHeight];\n          }\n\n          if (a === 0 && d === 0) {\n            const tlX = destY * c + tx;\n            const rTlX = Math.round(tlX);\n            const tlY = destX * b + ty;\n            const rTlY = Math.round(tlY);\n            const brX = (destY + destH) * c + tx;\n            const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n            const brY = (destX + destW) * b + ty;\n            const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n            ctx.setTransform(0, Math.sign(b), Math.sign(c), 0, rTlX, rTlY);\n            ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rHeight, rWidth);\n            ctx.setTransform(a, b, c, d, tx, ty);\n            return [rHeight, rWidth];\n          }\n\n          ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n          const scaleX = Math.hypot(a, b);\n          const scaleY = Math.hypot(c, d);\n          return [scaleX * destW, scaleY * destH];\n        }\n\n        function compileType3Glyph(imgData) {\n          const {\n            width,\n            height\n          } = imgData;\n\n          if (width > MAX_SIZE_TO_COMPILE || height > MAX_SIZE_TO_COMPILE) {\n            return null;\n          }\n\n          const POINT_TO_PROCESS_LIMIT = 1000;\n          const POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n          const width1 = width + 1;\n          let points = new Uint8Array(width1 * (height + 1));\n          let i, j, j0;\n          const lineSize = width + 7 & ~7;\n          let data = new Uint8Array(lineSize * height),\n              pos = 0;\n\n          for (const elem of imgData.data) {\n            let mask = 128;\n\n            while (mask > 0) {\n              data[pos++] = elem & mask ? 0 : 255;\n              mask >>= 1;\n            }\n          }\n\n          let count = 0;\n          pos = 0;\n\n          if (data[pos] !== 0) {\n            points[0] = 1;\n            ++count;\n          }\n\n          for (j = 1; j < width; j++) {\n            if (data[pos] !== data[pos + 1]) {\n              points[j] = data[pos] ? 2 : 1;\n              ++count;\n            }\n\n            pos++;\n          }\n\n          if (data[pos] !== 0) {\n            points[j] = 2;\n            ++count;\n          }\n\n          for (i = 1; i < height; i++) {\n            pos = i * lineSize;\n            j0 = i * width1;\n\n            if (data[pos - lineSize] !== data[pos]) {\n              points[j0] = data[pos] ? 1 : 8;\n              ++count;\n            }\n\n            let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n\n            for (j = 1; j < width; j++) {\n              sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n\n              if (POINT_TYPES[sum]) {\n                points[j0 + j] = POINT_TYPES[sum];\n                ++count;\n              }\n\n              pos++;\n            }\n\n            if (data[pos - lineSize] !== data[pos]) {\n              points[j0 + j] = data[pos] ? 2 : 4;\n              ++count;\n            }\n\n            if (count > POINT_TO_PROCESS_LIMIT) {\n              return null;\n            }\n          }\n\n          pos = lineSize * (height - 1);\n          j0 = i * width1;\n\n          if (data[pos] !== 0) {\n            points[j0] = 8;\n            ++count;\n          }\n\n          for (j = 1; j < width; j++) {\n            if (data[pos] !== data[pos + 1]) {\n              points[j0 + j] = data[pos] ? 4 : 8;\n              ++count;\n            }\n\n            pos++;\n          }\n\n          if (data[pos] !== 0) {\n            points[j0 + j] = 4;\n            ++count;\n          }\n\n          if (count > POINT_TO_PROCESS_LIMIT) {\n            return null;\n          }\n\n          const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n          const path = new Path2D();\n\n          for (i = 0; count && i <= height; i++) {\n            let p = i * width1;\n            const end = p + width;\n\n            while (p < end && !points[p]) {\n              p++;\n            }\n\n            if (p === end) {\n              continue;\n            }\n\n            path.moveTo(p % width1, i);\n            const p0 = p;\n            let type = points[p];\n\n            do {\n              const step = steps[type];\n\n              do {\n                p += step;\n              } while (!points[p]);\n\n              const pp = points[p];\n\n              if (pp !== 5 && pp !== 10) {\n                type = pp;\n                points[p] = 0;\n              } else {\n                type = pp & 0x33 * type >> 4;\n                points[p] &= type >> 2 | type << 2;\n              }\n\n              path.lineTo(p % width1, p / width1 | 0);\n\n              if (!points[p]) {\n                --count;\n              }\n            } while (p0 !== p);\n\n            --i;\n          }\n\n          data = null;\n          points = null;\n\n          const drawOutline = function (c) {\n            c.save();\n            c.scale(1 / width, -1 / height);\n            c.translate(0, -height);\n            c.fill(path);\n            c.beginPath();\n            c.restore();\n          };\n\n          return drawOutline;\n        }\n\n        class CanvasExtraState {\n          constructor(width, height) {\n            this.alphaIsShape = false;\n            this.fontSize = 0;\n            this.fontSizeScale = 1;\n            this.textMatrix = _util.IDENTITY_MATRIX;\n            this.textMatrixScale = 1;\n            this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n            this.leading = 0;\n            this.x = 0;\n            this.y = 0;\n            this.lineX = 0;\n            this.lineY = 0;\n            this.charSpacing = 0;\n            this.wordSpacing = 0;\n            this.textHScale = 1;\n            this.textRenderingMode = _util.TextRenderingMode.FILL;\n            this.textRise = 0;\n            this.fillColor = \"#000000\";\n            this.strokeColor = \"#000000\";\n            this.patternFill = false;\n            this.fillAlpha = 1;\n            this.strokeAlpha = 1;\n            this.lineWidth = 1;\n            this.activeSMask = null;\n            this.transferMaps = \"none\";\n            this.startNewPathAndClipBox([0, 0, width, height]);\n          }\n\n          clone() {\n            const clone = Object.create(this);\n            clone.clipBox = this.clipBox.slice();\n            return clone;\n          }\n\n          setCurrentPoint(x, y) {\n            this.x = x;\n            this.y = y;\n          }\n\n          updatePathMinMax(transform, x, y) {\n            [x, y] = _util.Util.applyTransform([x, y], transform);\n            this.minX = Math.min(this.minX, x);\n            this.minY = Math.min(this.minY, y);\n            this.maxX = Math.max(this.maxX, x);\n            this.maxY = Math.max(this.maxY, y);\n          }\n\n          updateRectMinMax(transform, rect) {\n            const p1 = _util.Util.applyTransform(rect, transform);\n\n            const p2 = _util.Util.applyTransform(rect.slice(2), transform);\n\n            this.minX = Math.min(this.minX, p1[0], p2[0]);\n            this.minY = Math.min(this.minY, p1[1], p2[1]);\n            this.maxX = Math.max(this.maxX, p1[0], p2[0]);\n            this.maxY = Math.max(this.maxY, p1[1], p2[1]);\n          }\n\n          updateScalingPathMinMax(transform, minMax) {\n            _util.Util.scaleMinMax(transform, minMax);\n\n            this.minX = Math.min(this.minX, minMax[0]);\n            this.maxX = Math.max(this.maxX, minMax[1]);\n            this.minY = Math.min(this.minY, minMax[2]);\n            this.maxY = Math.max(this.maxY, minMax[3]);\n          }\n\n          updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3, minMax) {\n            const box = _util.Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n\n            if (minMax) {\n              minMax[0] = Math.min(minMax[0], box[0], box[2]);\n              minMax[1] = Math.max(minMax[1], box[0], box[2]);\n              minMax[2] = Math.min(minMax[2], box[1], box[3]);\n              minMax[3] = Math.max(minMax[3], box[1], box[3]);\n              return;\n            }\n\n            this.updateRectMinMax(transform, box);\n          }\n\n          getPathBoundingBox() {\n            let pathType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _pattern_helper.PathType.FILL;\n            let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const box = [this.minX, this.minY, this.maxX, this.maxY];\n\n            if (pathType === _pattern_helper.PathType.STROKE) {\n              if (!transform) {\n                (0, _util.unreachable)(\"Stroke bounding box must include transform.\");\n              }\n\n              const scale = _util.Util.singularValueDecompose2dScale(transform);\n\n              const xStrokePad = scale[0] * this.lineWidth / 2;\n              const yStrokePad = scale[1] * this.lineWidth / 2;\n              box[0] -= xStrokePad;\n              box[1] -= yStrokePad;\n              box[2] += xStrokePad;\n              box[3] += yStrokePad;\n            }\n\n            return box;\n          }\n\n          updateClipFromPath() {\n            const intersect = _util.Util.intersect(this.clipBox, this.getPathBoundingBox());\n\n            this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n          }\n\n          isEmptyClip() {\n            return this.minX === Infinity;\n          }\n\n          startNewPathAndClipBox(box) {\n            this.clipBox = box;\n            this.minX = Infinity;\n            this.minY = Infinity;\n            this.maxX = 0;\n            this.maxY = 0;\n          }\n\n          getClippedPathBoundingBox() {\n            let pathType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _pattern_helper.PathType.FILL;\n            let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            return _util.Util.intersect(this.clipBox, this.getPathBoundingBox(pathType, transform));\n          }\n\n        }\n\n        function putBinaryImageData(ctx, imgData) {\n          if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n            ctx.putImageData(imgData, 0, 0);\n            return;\n          }\n\n          const height = imgData.height,\n                width = imgData.width;\n          const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          let srcPos = 0,\n              destPos;\n          const src = imgData.data;\n          const dest = chunkImgData.data;\n          let i, j, thisChunkHeight, elemsInThisChunk;\n\n          if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n            const srcLength = src.byteLength;\n            const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n            const dest32DataLength = dest32.length;\n            const fullSrcDiff = width + 7 >> 3;\n            const white = 0xffffffff;\n            const black = _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n\n            for (i = 0; i < totalChunks; i++) {\n              thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n              destPos = 0;\n\n              for (j = 0; j < thisChunkHeight; j++) {\n                const srcDiff = srcLength - srcPos;\n                let k = 0;\n                const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n                const kEndUnrolled = kEnd & ~7;\n                let mask = 0;\n                let srcByte = 0;\n\n                for (; k < kEndUnrolled; k += 8) {\n                  srcByte = src[srcPos++];\n                  dest32[destPos++] = srcByte & 128 ? white : black;\n                  dest32[destPos++] = srcByte & 64 ? white : black;\n                  dest32[destPos++] = srcByte & 32 ? white : black;\n                  dest32[destPos++] = srcByte & 16 ? white : black;\n                  dest32[destPos++] = srcByte & 8 ? white : black;\n                  dest32[destPos++] = srcByte & 4 ? white : black;\n                  dest32[destPos++] = srcByte & 2 ? white : black;\n                  dest32[destPos++] = srcByte & 1 ? white : black;\n                }\n\n                for (; k < kEnd; k++) {\n                  if (mask === 0) {\n                    srcByte = src[srcPos++];\n                    mask = 128;\n                  }\n\n                  dest32[destPos++] = srcByte & mask ? white : black;\n                  mask >>= 1;\n                }\n              }\n\n              while (destPos < dest32DataLength) {\n                dest32[destPos++] = 0;\n              }\n\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n            j = 0;\n            elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n\n            for (i = 0; i < fullChunks; i++) {\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n              srcPos += elemsInThisChunk;\n              ctx.putImageData(chunkImgData, 0, j);\n              j += FULL_CHUNK_HEIGHT;\n            }\n\n            if (i < totalChunks) {\n              elemsInThisChunk = width * partialChunkHeight * 4;\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n              ctx.putImageData(chunkImgData, 0, j);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n            thisChunkHeight = FULL_CHUNK_HEIGHT;\n            elemsInThisChunk = width * thisChunkHeight;\n\n            for (i = 0; i < totalChunks; i++) {\n              if (i >= fullChunks) {\n                thisChunkHeight = partialChunkHeight;\n                elemsInThisChunk = width * thisChunkHeight;\n              }\n\n              destPos = 0;\n\n              for (j = elemsInThisChunk; j--;) {\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = 255;\n              }\n\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else {\n            throw new Error(`bad image kind: ${imgData.kind}`);\n          }\n        }\n\n        function putBinaryImageMask(ctx, imgData) {\n          if (imgData.bitmap) {\n            ctx.drawImage(imgData.bitmap, 0, 0);\n            return;\n          }\n\n          const height = imgData.height,\n                width = imgData.width;\n          const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          let srcPos = 0;\n          const src = imgData.data;\n          const dest = chunkImgData.data;\n\n          for (let i = 0; i < totalChunks; i++) {\n            const thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n            ({\n              srcPos\n            } = (0, _image_utils.convertBlackAndWhiteToRGBA)({\n              src,\n              srcPos,\n              dest,\n              width,\n              height: thisChunkHeight,\n              nonBlackColor: 0\n            }));\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        }\n\n        function copyCtxState(sourceCtx, destCtx) {\n          const properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\", \"filter\"];\n\n          for (const property of properties) {\n            if (sourceCtx[property] !== undefined) {\n              destCtx[property] = sourceCtx[property];\n            }\n          }\n\n          if (sourceCtx.setLineDash !== undefined) {\n            destCtx.setLineDash(sourceCtx.getLineDash());\n            destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n          }\n        }\n\n        function resetCtxToDefault(ctx) {\n          ctx.strokeStyle = ctx.fillStyle = \"#000000\";\n          ctx.fillRule = \"nonzero\";\n          ctx.globalAlpha = 1;\n          ctx.lineWidth = 1;\n          ctx.lineCap = \"butt\";\n          ctx.lineJoin = \"miter\";\n          ctx.miterLimit = 10;\n          ctx.globalCompositeOperation = \"source-over\";\n          ctx.font = \"10px sans-serif\";\n\n          if (ctx.setLineDash !== undefined) {\n            ctx.setLineDash([]);\n            ctx.lineDashOffset = 0;\n          }\n\n          if (!_util.isNodeJS) {\n            const {\n              filter\n            } = ctx;\n\n            if (filter !== \"none\" && filter !== \"\") {\n              ctx.filter = \"none\";\n            }\n          }\n        }\n\n        function composeSMaskBackdrop(bytes, r0, g0, b0) {\n          const length = bytes.length;\n\n          for (let i = 3; i < length; i += 4) {\n            const alpha = bytes[i];\n\n            if (alpha === 0) {\n              bytes[i - 3] = r0;\n              bytes[i - 2] = g0;\n              bytes[i - 1] = b0;\n            } else if (alpha < 255) {\n              const alpha_ = 255 - alpha;\n              bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n              bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n              bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n            }\n          }\n        }\n\n        function composeSMaskAlpha(maskData, layerData, transferMap) {\n          const length = maskData.length;\n          const scale = 1 / 255;\n\n          for (let i = 3; i < length; i += 4) {\n            const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n            layerData[i] = layerData[i] * alpha * scale | 0;\n          }\n        }\n\n        function composeSMaskLuminosity(maskData, layerData, transferMap) {\n          const length = maskData.length;\n\n          for (let i = 3; i < length; i += 4) {\n            const y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n            layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n          }\n        }\n\n        function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap, layerOffsetX, layerOffsetY, maskOffsetX, maskOffsetY) {\n          const hasBackdrop = !!backdrop;\n          const r0 = hasBackdrop ? backdrop[0] : 0;\n          const g0 = hasBackdrop ? backdrop[1] : 0;\n          const b0 = hasBackdrop ? backdrop[2] : 0;\n          const composeFn = subtype === \"Luminosity\" ? composeSMaskLuminosity : composeSMaskAlpha;\n          const PIXELS_TO_PROCESS = 1048576;\n          const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n\n          for (let row = 0; row < height; row += chunkSize) {\n            const chunkHeight = Math.min(chunkSize, height - row);\n            const maskData = maskCtx.getImageData(layerOffsetX - maskOffsetX, row + (layerOffsetY - maskOffsetY), width, chunkHeight);\n            const layerData = layerCtx.getImageData(layerOffsetX, row + layerOffsetY, width, chunkHeight);\n\n            if (hasBackdrop) {\n              composeSMaskBackdrop(maskData.data, r0, g0, b0);\n            }\n\n            composeFn(maskData.data, layerData.data, transferMap);\n            layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n          }\n        }\n\n        function composeSMask(ctx, smask, layerCtx, layerBox) {\n          const layerOffsetX = layerBox[0];\n          const layerOffsetY = layerBox[1];\n          const layerWidth = layerBox[2] - layerOffsetX;\n          const layerHeight = layerBox[3] - layerOffsetY;\n\n          if (layerWidth === 0 || layerHeight === 0) {\n            return;\n          }\n\n          genericComposeSMask(smask.context, layerCtx, layerWidth, layerHeight, smask.subtype, smask.backdrop, smask.transferMap, layerOffsetX, layerOffsetY, smask.offsetX, smask.offsetY);\n          ctx.save();\n          ctx.globalAlpha = 1;\n          ctx.globalCompositeOperation = \"source-over\";\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\n          ctx.drawImage(layerCtx.canvas, 0, 0);\n          ctx.restore();\n        }\n\n        function getImageSmoothingEnabled(transform, interpolate) {\n          const scale = _util.Util.singularValueDecompose2dScale(transform);\n\n          scale[0] = Math.fround(scale[0]);\n          scale[1] = Math.fround(scale[1]);\n          const actualScale = Math.fround((globalThis.devicePixelRatio || 1) * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n\n          if (interpolate !== undefined) {\n            return interpolate;\n          } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n            return true;\n          }\n\n          return false;\n        }\n\n        const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n        const NORMAL_CLIP = {};\n        const EO_CLIP = {};\n\n        class CanvasGraphics {\n          constructor(canvasCtx, commonObjs, objs, canvasFactory, filterFactory, _ref30, annotationCanvasMap, pageColors) {\n            let {\n              optionalContentConfig,\n              markedContentStack = null\n            } = _ref30;\n            this.ctx = canvasCtx;\n            this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n            this.stateStack = [];\n            this.pendingClip = null;\n            this.pendingEOFill = false;\n            this.res = null;\n            this.xobjs = null;\n            this.commonObjs = commonObjs;\n            this.objs = objs;\n            this.canvasFactory = canvasFactory;\n            this.filterFactory = filterFactory;\n            this.groupStack = [];\n            this.processingType3 = null;\n            this.baseTransform = null;\n            this.baseTransformStack = [];\n            this.groupLevel = 0;\n            this.smaskStack = [];\n            this.smaskCounter = 0;\n            this.tempSMask = null;\n            this.suspendedCtx = null;\n            this.contentVisible = true;\n            this.markedContentStack = markedContentStack || [];\n            this.optionalContentConfig = optionalContentConfig;\n            this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n            this.cachedPatterns = new Map();\n            this.annotationCanvasMap = annotationCanvasMap;\n            this.viewportScale = 1;\n            this.outputScaleX = 1;\n            this.outputScaleY = 1;\n            this.pageColors = pageColors;\n            this._cachedScaleForStroking = [-1, 0];\n            this._cachedGetSinglePixelWidth = null;\n            this._cachedBitmapsMap = new Map();\n          }\n\n          getObject(data) {\n            let fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            if (typeof data === \"string\") {\n              return data.startsWith(\"g_\") ? this.commonObjs.get(data) : this.objs.get(data);\n            }\n\n            return fallback;\n          }\n\n          beginDrawing(_ref31) {\n            let {\n              transform,\n              viewport,\n              transparency = false,\n              background = null\n            } = _ref31;\n            const width = this.ctx.canvas.width;\n            const height = this.ctx.canvas.height;\n            const savedFillStyle = this.ctx.fillStyle;\n            this.ctx.fillStyle = background || \"#ffffff\";\n            this.ctx.fillRect(0, 0, width, height);\n            this.ctx.fillStyle = savedFillStyle;\n\n            if (transparency) {\n              const transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height);\n              this.compositeCtx = this.ctx;\n              this.transparentCanvas = transparentCanvas.canvas;\n              this.ctx = transparentCanvas.context;\n              this.ctx.save();\n              this.ctx.transform(...(0, _display_utils.getCurrentTransform)(this.compositeCtx));\n            }\n\n            this.ctx.save();\n            resetCtxToDefault(this.ctx);\n\n            if (transform) {\n              this.ctx.transform(...transform);\n              this.outputScaleX = transform[0];\n              this.outputScaleY = transform[0];\n            }\n\n            this.ctx.transform(...viewport.transform);\n            this.viewportScale = viewport.scale;\n            this.baseTransform = (0, _display_utils.getCurrentTransform)(this.ctx);\n          }\n\n          executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n            const argsArray = operatorList.argsArray;\n            const fnArray = operatorList.fnArray;\n            let i = executionStartIdx || 0;\n            const argsArrayLen = argsArray.length;\n\n            if (argsArrayLen === i) {\n              return i;\n            }\n\n            const chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n            const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n            let steps = 0;\n            const commonObjs = this.commonObjs;\n            const objs = this.objs;\n            let fnId;\n\n            while (true) {\n              if (stepper !== undefined && i === stepper.nextBreakPoint) {\n                stepper.breakIt(i, continueCallback);\n                return i;\n              }\n\n              fnId = fnArray[i];\n\n              if (fnId !== _util.OPS.dependency) {\n                this[fnId].apply(this, argsArray[i]);\n              } else {\n                for (const depObjId of argsArray[i]) {\n                  const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n                  if (!objsPool.has(depObjId)) {\n                    objsPool.get(depObjId, continueCallback);\n                    return i;\n                  }\n                }\n              }\n\n              i++;\n\n              if (i === argsArrayLen) {\n                return i;\n              }\n\n              if (chunkOperations && ++steps > EXECUTION_STEPS) {\n                if (Date.now() > endTime) {\n                  continueCallback();\n                  return i;\n                }\n\n                steps = 0;\n              }\n            }\n          }\n\n          #restoreInitialState() {\n            while (this.stateStack.length || this.inSMaskMode) {\n              this.restore();\n            }\n\n            this.ctx.restore();\n\n            if (this.transparentCanvas) {\n              this.ctx = this.compositeCtx;\n              this.ctx.save();\n              this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n              this.ctx.drawImage(this.transparentCanvas, 0, 0);\n              this.ctx.restore();\n              this.transparentCanvas = null;\n            }\n          }\n\n          endDrawing() {\n            this.#restoreInitialState();\n            this.cachedCanvases.clear();\n            this.cachedPatterns.clear();\n\n            for (const cache of this._cachedBitmapsMap.values()) {\n              for (const canvas of cache.values()) {\n                if (typeof HTMLCanvasElement !== \"undefined\" && canvas instanceof HTMLCanvasElement) {\n                  canvas.width = canvas.height = 0;\n                }\n              }\n\n              cache.clear();\n            }\n\n            this._cachedBitmapsMap.clear();\n\n            this.#drawFilter();\n          }\n\n          #drawFilter() {\n            if (this.pageColors) {\n              const hcmFilterId = this.filterFactory.addHCMFilter(this.pageColors.foreground, this.pageColors.background);\n\n              if (hcmFilterId !== \"none\") {\n                const savedFilter = this.ctx.filter;\n                this.ctx.filter = hcmFilterId;\n                this.ctx.drawImage(this.ctx.canvas, 0, 0);\n                this.ctx.filter = savedFilter;\n              }\n            }\n          }\n\n          _scaleImage(img, inverseTransform) {\n            const width = img.width;\n            const height = img.height;\n            let widthScale = Math.max(Math.hypot(inverseTransform[0], inverseTransform[1]), 1);\n            let heightScale = Math.max(Math.hypot(inverseTransform[2], inverseTransform[3]), 1);\n            let paintWidth = width,\n                paintHeight = height;\n            let tmpCanvasId = \"prescale1\";\n            let tmpCanvas, tmpCtx;\n\n            while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n              let newWidth = paintWidth,\n                  newHeight = paintHeight;\n\n              if (widthScale > 2 && paintWidth > 1) {\n                newWidth = paintWidth >= 16384 ? Math.floor(paintWidth / 2) - 1 || 1 : Math.ceil(paintWidth / 2);\n                widthScale /= paintWidth / newWidth;\n              }\n\n              if (heightScale > 2 && paintHeight > 1) {\n                newHeight = paintHeight >= 16384 ? Math.floor(paintHeight / 2) - 1 || 1 : Math.ceil(paintHeight) / 2;\n                heightScale /= paintHeight / newHeight;\n              }\n\n              tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n              tmpCtx = tmpCanvas.context;\n              tmpCtx.clearRect(0, 0, newWidth, newHeight);\n              tmpCtx.drawImage(img, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n              img = tmpCanvas.canvas;\n              paintWidth = newWidth;\n              paintHeight = newHeight;\n              tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n            }\n\n            return {\n              img,\n              paintWidth,\n              paintHeight\n            };\n          }\n\n          _createMaskCanvas(img) {\n            const ctx = this.ctx;\n            const {\n              width,\n              height\n            } = img;\n            const fillColor = this.current.fillColor;\n            const isPatternFill = this.current.patternFill;\n            const currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n            let cache, cacheKey, scaled, maskCanvas;\n\n            if ((img.bitmap || img.data) && img.count > 1) {\n              const mainKey = img.bitmap || img.data.buffer;\n              cacheKey = JSON.stringify(isPatternFill ? currentTransform : [currentTransform.slice(0, 4), fillColor]);\n              cache = this._cachedBitmapsMap.get(mainKey);\n\n              if (!cache) {\n                cache = new Map();\n\n                this._cachedBitmapsMap.set(mainKey, cache);\n              }\n\n              const cachedImage = cache.get(cacheKey);\n\n              if (cachedImage && !isPatternFill) {\n                const offsetX = Math.round(Math.min(currentTransform[0], currentTransform[2]) + currentTransform[4]);\n                const offsetY = Math.round(Math.min(currentTransform[1], currentTransform[3]) + currentTransform[5]);\n                return {\n                  canvas: cachedImage,\n                  offsetX,\n                  offsetY\n                };\n              }\n\n              scaled = cachedImage;\n            }\n\n            if (!scaled) {\n              maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n              putBinaryImageMask(maskCanvas.context, img);\n            }\n\n            let maskToCanvas = _util.Util.transform(currentTransform, [1 / width, 0, 0, -1 / height, 0, 0]);\n\n            maskToCanvas = _util.Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n\n            const cord1 = _util.Util.applyTransform([0, 0], maskToCanvas);\n\n            const cord2 = _util.Util.applyTransform([width, height], maskToCanvas);\n\n            const rect = _util.Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n\n            const drawnWidth = Math.round(rect[2] - rect[0]) || 1;\n            const drawnHeight = Math.round(rect[3] - rect[1]) || 1;\n            const fillCanvas = this.cachedCanvases.getCanvas(\"fillCanvas\", drawnWidth, drawnHeight);\n            const fillCtx = fillCanvas.context;\n            const offsetX = Math.min(cord1[0], cord2[0]);\n            const offsetY = Math.min(cord1[1], cord2[1]);\n            fillCtx.translate(-offsetX, -offsetY);\n            fillCtx.transform(...maskToCanvas);\n\n            if (!scaled) {\n              scaled = this._scaleImage(maskCanvas.canvas, (0, _display_utils.getCurrentTransformInverse)(fillCtx));\n              scaled = scaled.img;\n\n              if (cache && isPatternFill) {\n                cache.set(cacheKey, scaled);\n              }\n            }\n\n            fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled((0, _display_utils.getCurrentTransform)(fillCtx), img.interpolate);\n            drawImageAtIntegerCoords(fillCtx, scaled, 0, 0, scaled.width, scaled.height, 0, 0, width, height);\n            fillCtx.globalCompositeOperation = \"source-in\";\n\n            const inverse = _util.Util.transform((0, _display_utils.getCurrentTransformInverse)(fillCtx), [1, 0, 0, 1, -offsetX, -offsetY]);\n\n            fillCtx.fillStyle = isPatternFill ? fillColor.getPattern(ctx, this, inverse, _pattern_helper.PathType.FILL) : fillColor;\n            fillCtx.fillRect(0, 0, width, height);\n\n            if (cache && !isPatternFill) {\n              this.cachedCanvases.delete(\"fillCanvas\");\n              cache.set(cacheKey, fillCanvas.canvas);\n            }\n\n            return {\n              canvas: fillCanvas.canvas,\n              offsetX: Math.round(offsetX),\n              offsetY: Math.round(offsetY)\n            };\n          }\n\n          setLineWidth(width) {\n            if (width !== this.current.lineWidth) {\n              this._cachedScaleForStroking[0] = -1;\n            }\n\n            this.current.lineWidth = width;\n            this.ctx.lineWidth = width;\n          }\n\n          setLineCap(style) {\n            this.ctx.lineCap = LINE_CAP_STYLES[style];\n          }\n\n          setLineJoin(style) {\n            this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n          }\n\n          setMiterLimit(limit) {\n            this.ctx.miterLimit = limit;\n          }\n\n          setDash(dashArray, dashPhase) {\n            const ctx = this.ctx;\n\n            if (ctx.setLineDash !== undefined) {\n              ctx.setLineDash(dashArray);\n              ctx.lineDashOffset = dashPhase;\n            }\n          }\n\n          setRenderingIntent(intent) {}\n\n          setFlatness(flatness) {}\n\n          setGState(states) {\n            for (const [key, value] of states) {\n              switch (key) {\n                case \"LW\":\n                  this.setLineWidth(value);\n                  break;\n\n                case \"LC\":\n                  this.setLineCap(value);\n                  break;\n\n                case \"LJ\":\n                  this.setLineJoin(value);\n                  break;\n\n                case \"ML\":\n                  this.setMiterLimit(value);\n                  break;\n\n                case \"D\":\n                  this.setDash(value[0], value[1]);\n                  break;\n\n                case \"RI\":\n                  this.setRenderingIntent(value);\n                  break;\n\n                case \"FL\":\n                  this.setFlatness(value);\n                  break;\n\n                case \"Font\":\n                  this.setFont(value[0], value[1]);\n                  break;\n\n                case \"CA\":\n                  this.current.strokeAlpha = value;\n                  break;\n\n                case \"ca\":\n                  this.current.fillAlpha = value;\n                  this.ctx.globalAlpha = value;\n                  break;\n\n                case \"BM\":\n                  this.ctx.globalCompositeOperation = value;\n                  break;\n\n                case \"SMask\":\n                  this.current.activeSMask = value ? this.tempSMask : null;\n                  this.tempSMask = null;\n                  this.checkSMaskState();\n                  break;\n\n                case \"TR\":\n                  this.ctx.filter = this.current.transferMaps = this.filterFactory.addFilter(value);\n                  break;\n              }\n            }\n          }\n\n          get inSMaskMode() {\n            return !!this.suspendedCtx;\n          }\n\n          checkSMaskState() {\n            const inSMaskMode = this.inSMaskMode;\n\n            if (this.current.activeSMask && !inSMaskMode) {\n              this.beginSMaskMode();\n            } else if (!this.current.activeSMask && inSMaskMode) {\n              this.endSMaskMode();\n            }\n          }\n\n          beginSMaskMode() {\n            if (this.inSMaskMode) {\n              throw new Error(\"beginSMaskMode called while already in smask mode\");\n            }\n\n            const drawnWidth = this.ctx.canvas.width;\n            const drawnHeight = this.ctx.canvas.height;\n            const cacheId = \"smaskGroupAt\" + this.groupLevel;\n            const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight);\n            this.suspendedCtx = this.ctx;\n            this.ctx = scratchCanvas.context;\n            const ctx = this.ctx;\n            ctx.setTransform(...(0, _display_utils.getCurrentTransform)(this.suspendedCtx));\n            copyCtxState(this.suspendedCtx, ctx);\n            mirrorContextOperations(ctx, this.suspendedCtx);\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n          }\n\n          endSMaskMode() {\n            if (!this.inSMaskMode) {\n              throw new Error(\"endSMaskMode called while not in smask mode\");\n            }\n\n            this.ctx._removeMirroring();\n\n            copyCtxState(this.ctx, this.suspendedCtx);\n            this.ctx = this.suspendedCtx;\n            this.suspendedCtx = null;\n          }\n\n          compose(dirtyBox) {\n            if (!this.current.activeSMask) {\n              return;\n            }\n\n            if (!dirtyBox) {\n              dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n            } else {\n              dirtyBox[0] = Math.floor(dirtyBox[0]);\n              dirtyBox[1] = Math.floor(dirtyBox[1]);\n              dirtyBox[2] = Math.ceil(dirtyBox[2]);\n              dirtyBox[3] = Math.ceil(dirtyBox[3]);\n            }\n\n            const smask = this.current.activeSMask;\n            const suspendedCtx = this.suspendedCtx;\n            composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n            this.ctx.save();\n            this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n            this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n            this.ctx.restore();\n          }\n\n          save() {\n            if (this.inSMaskMode) {\n              copyCtxState(this.ctx, this.suspendedCtx);\n              this.suspendedCtx.save();\n            } else {\n              this.ctx.save();\n            }\n\n            const old = this.current;\n            this.stateStack.push(old);\n            this.current = old.clone();\n          }\n\n          restore() {\n            if (this.stateStack.length === 0 && this.inSMaskMode) {\n              this.endSMaskMode();\n            }\n\n            if (this.stateStack.length !== 0) {\n              this.current = this.stateStack.pop();\n\n              if (this.inSMaskMode) {\n                this.suspendedCtx.restore();\n                copyCtxState(this.suspendedCtx, this.ctx);\n              } else {\n                this.ctx.restore();\n              }\n\n              this.checkSMaskState();\n              this.pendingClip = null;\n              this._cachedScaleForStroking[0] = -1;\n              this._cachedGetSinglePixelWidth = null;\n            }\n          }\n\n          transform(a, b, c, d, e, f) {\n            this.ctx.transform(a, b, c, d, e, f);\n            this._cachedScaleForStroking[0] = -1;\n            this._cachedGetSinglePixelWidth = null;\n          }\n\n          constructPath(ops, args, minMax) {\n            const ctx = this.ctx;\n            const current = this.current;\n            let x = current.x,\n                y = current.y;\n            let startX, startY;\n            const currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n            const isScalingMatrix = currentTransform[0] === 0 && currentTransform[3] === 0 || currentTransform[1] === 0 && currentTransform[2] === 0;\n            const minMaxForBezier = isScalingMatrix ? minMax.slice(0) : null;\n\n            for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n              switch (ops[i] | 0) {\n                case _util.OPS.rectangle:\n                  x = args[j++];\n                  y = args[j++];\n                  const width = args[j++];\n                  const height = args[j++];\n                  const xw = x + width;\n                  const yh = y + height;\n                  ctx.moveTo(x, y);\n\n                  if (width === 0 || height === 0) {\n                    ctx.lineTo(xw, yh);\n                  } else {\n                    ctx.lineTo(xw, y);\n                    ctx.lineTo(xw, yh);\n                    ctx.lineTo(x, yh);\n                  }\n\n                  if (!isScalingMatrix) {\n                    current.updateRectMinMax(currentTransform, [x, y, xw, yh]);\n                  }\n\n                  ctx.closePath();\n                  break;\n\n                case _util.OPS.moveTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.moveTo(x, y);\n\n                  if (!isScalingMatrix) {\n                    current.updatePathMinMax(currentTransform, x, y);\n                  }\n\n                  break;\n\n                case _util.OPS.lineTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.lineTo(x, y);\n\n                  if (!isScalingMatrix) {\n                    current.updatePathMinMax(currentTransform, x, y);\n                  }\n\n                  break;\n\n                case _util.OPS.curveTo:\n                  startX = x;\n                  startY = y;\n                  x = args[j + 4];\n                  y = args[j + 5];\n                  ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                  current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], args[j + 2], args[j + 3], x, y, minMaxForBezier);\n                  j += 6;\n                  break;\n\n                case _util.OPS.curveTo2:\n                  startX = x;\n                  startY = y;\n                  ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                  current.updateCurvePathMinMax(currentTransform, startX, startY, x, y, args[j], args[j + 1], args[j + 2], args[j + 3], minMaxForBezier);\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  j += 4;\n                  break;\n\n                case _util.OPS.curveTo3:\n                  startX = x;\n                  startY = y;\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n                  current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], x, y, x, y, minMaxForBezier);\n                  j += 4;\n                  break;\n\n                case _util.OPS.closePath:\n                  ctx.closePath();\n                  break;\n              }\n            }\n\n            if (isScalingMatrix) {\n              current.updateScalingPathMinMax(currentTransform, minMaxForBezier);\n            }\n\n            current.setCurrentPoint(x, y);\n          }\n\n          closePath() {\n            this.ctx.closePath();\n          }\n\n          stroke() {\n            let consumePath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n            const ctx = this.ctx;\n            const strokeColor = this.current.strokeColor;\n            ctx.globalAlpha = this.current.strokeAlpha;\n\n            if (this.contentVisible) {\n              if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n                ctx.save();\n                ctx.strokeStyle = strokeColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.STROKE);\n                this.rescaleAndStroke(false);\n                ctx.restore();\n              } else {\n                this.rescaleAndStroke(true);\n              }\n            }\n\n            if (consumePath) {\n              this.consumePath(this.current.getClippedPathBoundingBox());\n            }\n\n            ctx.globalAlpha = this.current.fillAlpha;\n          }\n\n          closeStroke() {\n            this.closePath();\n            this.stroke();\n          }\n\n          fill() {\n            let consumePath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n            const ctx = this.ctx;\n            const fillColor = this.current.fillColor;\n            const isPatternFill = this.current.patternFill;\n            let needRestore = false;\n\n            if (isPatternFill) {\n              ctx.save();\n              ctx.fillStyle = fillColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL);\n              needRestore = true;\n            }\n\n            const intersect = this.current.getClippedPathBoundingBox();\n\n            if (this.contentVisible && intersect !== null) {\n              if (this.pendingEOFill) {\n                ctx.fill(\"evenodd\");\n                this.pendingEOFill = false;\n              } else {\n                ctx.fill();\n              }\n            }\n\n            if (needRestore) {\n              ctx.restore();\n            }\n\n            if (consumePath) {\n              this.consumePath(intersect);\n            }\n          }\n\n          eoFill() {\n            this.pendingEOFill = true;\n            this.fill();\n          }\n\n          fillStroke() {\n            this.fill(false);\n            this.stroke(false);\n            this.consumePath();\n          }\n\n          eoFillStroke() {\n            this.pendingEOFill = true;\n            this.fillStroke();\n          }\n\n          closeFillStroke() {\n            this.closePath();\n            this.fillStroke();\n          }\n\n          closeEOFillStroke() {\n            this.pendingEOFill = true;\n            this.closePath();\n            this.fillStroke();\n          }\n\n          endPath() {\n            this.consumePath();\n          }\n\n          clip() {\n            this.pendingClip = NORMAL_CLIP;\n          }\n\n          eoClip() {\n            this.pendingClip = EO_CLIP;\n          }\n\n          beginText() {\n            this.current.textMatrix = _util.IDENTITY_MATRIX;\n            this.current.textMatrixScale = 1;\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          }\n\n          endText() {\n            const paths = this.pendingTextPaths;\n            const ctx = this.ctx;\n\n            if (paths === undefined) {\n              ctx.beginPath();\n              return;\n            }\n\n            ctx.save();\n            ctx.beginPath();\n\n            for (const path of paths) {\n              ctx.setTransform(...path.transform);\n              ctx.translate(path.x, path.y);\n              path.addToPath(ctx, path.fontSize);\n            }\n\n            ctx.restore();\n            ctx.clip();\n            ctx.beginPath();\n            delete this.pendingTextPaths;\n          }\n\n          setCharSpacing(spacing) {\n            this.current.charSpacing = spacing;\n          }\n\n          setWordSpacing(spacing) {\n            this.current.wordSpacing = spacing;\n          }\n\n          setHScale(scale) {\n            this.current.textHScale = scale / 100;\n          }\n\n          setLeading(leading) {\n            this.current.leading = -leading;\n          }\n\n          setFont(fontRefName, size) {\n            const fontObj = this.commonObjs.get(fontRefName);\n            const current = this.current;\n\n            if (!fontObj) {\n              throw new Error(`Can't find font for ${fontRefName}`);\n            }\n\n            current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n\n            if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n              (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n            }\n\n            if (size < 0) {\n              size = -size;\n              current.fontDirection = -1;\n            } else {\n              current.fontDirection = 1;\n            }\n\n            this.current.font = fontObj;\n            this.current.fontSize = size;\n\n            if (fontObj.isType3Font) {\n              return;\n            }\n\n            const name = fontObj.loadedName || \"sans-serif\";\n            const typeface = fontObj.systemFontInfo?.css || `\"${name}\", ${fontObj.fallbackName}`;\n            let bold = \"normal\";\n\n            if (fontObj.black) {\n              bold = \"900\";\n            } else if (fontObj.bold) {\n              bold = \"bold\";\n            }\n\n            const italic = fontObj.italic ? \"italic\" : \"normal\";\n            let browserFontSize = size;\n\n            if (size < MIN_FONT_SIZE) {\n              browserFontSize = MIN_FONT_SIZE;\n            } else if (size > MAX_FONT_SIZE) {\n              browserFontSize = MAX_FONT_SIZE;\n            }\n\n            this.current.fontSizeScale = size / browserFontSize;\n            this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n          }\n\n          setTextRenderingMode(mode) {\n            this.current.textRenderingMode = mode;\n          }\n\n          setTextRise(rise) {\n            this.current.textRise = rise;\n          }\n\n          moveText(x, y) {\n            this.current.x = this.current.lineX += x;\n            this.current.y = this.current.lineY += y;\n          }\n\n          setLeadingMoveText(x, y) {\n            this.setLeading(-y);\n            this.moveText(x, y);\n          }\n\n          setTextMatrix(a, b, c, d, e, f) {\n            this.current.textMatrix = [a, b, c, d, e, f];\n            this.current.textMatrixScale = Math.hypot(a, b);\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          }\n\n          nextLine() {\n            this.moveText(0, this.current.leading);\n          }\n\n          paintChar(character, x, y, patternTransform) {\n            const ctx = this.ctx;\n            const current = this.current;\n            const font = current.font;\n            const textRenderingMode = current.textRenderingMode;\n            const fontSize = current.fontSize / current.fontSizeScale;\n            const fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            const isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n            const patternFill = current.patternFill && !font.missingFile;\n            let addToPath;\n\n            if (font.disableFontFace || isAddToPathSet || patternFill) {\n              addToPath = font.getPathGenerator(this.commonObjs, character);\n            }\n\n            if (font.disableFontFace || patternFill) {\n              ctx.save();\n              ctx.translate(x, y);\n              ctx.beginPath();\n              addToPath(ctx, fontSize);\n\n              if (patternTransform) {\n                ctx.setTransform(...patternTransform);\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fill();\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.stroke();\n              }\n\n              ctx.restore();\n            } else {\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fillText(character, x, y);\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.strokeText(character, x, y);\n              }\n            }\n\n            if (isAddToPathSet) {\n              const paths = this.pendingTextPaths ||= [];\n              paths.push({\n                transform: (0, _display_utils.getCurrentTransform)(ctx),\n                x,\n                y,\n                fontSize,\n                addToPath\n              });\n            }\n          }\n\n          get isFontSubpixelAAEnabled() {\n            const {\n              context: ctx\n            } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\n            ctx.scale(1.5, 1);\n            ctx.fillText(\"I\", 0, 10);\n            const data = ctx.getImageData(0, 0, 10, 10).data;\n            let enabled = false;\n\n            for (let i = 3; i < data.length; i += 4) {\n              if (data[i] > 0 && data[i] < 255) {\n                enabled = true;\n                break;\n              }\n            }\n\n            return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n          }\n\n          showText(glyphs) {\n            const current = this.current;\n            const font = current.font;\n\n            if (font.isType3Font) {\n              return this.showType3Text(glyphs);\n            }\n\n            const fontSize = current.fontSize;\n\n            if (fontSize === 0) {\n              return undefined;\n            }\n\n            const ctx = this.ctx;\n            const fontSizeScale = current.fontSizeScale;\n            const charSpacing = current.charSpacing;\n            const wordSpacing = current.wordSpacing;\n            const fontDirection = current.fontDirection;\n            const textHScale = current.textHScale * fontDirection;\n            const glyphsLength = glyphs.length;\n            const vertical = font.vertical;\n            const spacingDir = vertical ? 1 : -1;\n            const defaultVMetrics = font.defaultVMetrics;\n            const widthAdvanceScale = fontSize * current.fontMatrix[0];\n            const simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n            ctx.save();\n            ctx.transform(...current.textMatrix);\n            ctx.translate(current.x, current.y + current.textRise);\n\n            if (fontDirection > 0) {\n              ctx.scale(textHScale, -1);\n            } else {\n              ctx.scale(textHScale, 1);\n            }\n\n            let patternTransform;\n\n            if (current.patternFill) {\n              ctx.save();\n              const pattern = current.fillColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL);\n              patternTransform = (0, _display_utils.getCurrentTransform)(ctx);\n              ctx.restore();\n              ctx.fillStyle = pattern;\n            }\n\n            let lineWidth = current.lineWidth;\n            const scale = current.textMatrixScale;\n\n            if (scale === 0 || lineWidth === 0) {\n              const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                lineWidth = this.getSinglePixelWidth();\n              }\n            } else {\n              lineWidth /= scale;\n            }\n\n            if (fontSizeScale !== 1.0) {\n              ctx.scale(fontSizeScale, fontSizeScale);\n              lineWidth /= fontSizeScale;\n            }\n\n            ctx.lineWidth = lineWidth;\n\n            if (font.isInvalidPDFjsFont) {\n              const chars = [];\n              let width = 0;\n\n              for (const glyph of glyphs) {\n                chars.push(glyph.unicode);\n                width += glyph.width;\n              }\n\n              ctx.fillText(chars.join(\"\"), 0, 0);\n              current.x += width * widthAdvanceScale * textHScale;\n              ctx.restore();\n              this.compose();\n              return undefined;\n            }\n\n            let x = 0,\n                i;\n\n            for (i = 0; i < glyphsLength; ++i) {\n              const glyph = glyphs[i];\n\n              if (typeof glyph === \"number\") {\n                x += spacingDir * glyph * fontSize / 1000;\n                continue;\n              }\n\n              let restoreNeeded = false;\n              const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              const character = glyph.fontChar;\n              const accent = glyph.accent;\n              let scaledX, scaledY;\n              let width = glyph.width;\n\n              if (vertical) {\n                const vmetric = glyph.vmetric || defaultVMetrics;\n                const vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n                const vy = vmetric[2] * widthAdvanceScale;\n                width = vmetric ? -vmetric[0] : width;\n                scaledX = vx / fontSizeScale;\n                scaledY = (x + vy) / fontSizeScale;\n              } else {\n                scaledX = x / fontSizeScale;\n                scaledY = 0;\n              }\n\n              if (font.remeasure && width > 0) {\n                const measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n\n                if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n                  const characterScaleX = width / measuredWidth;\n                  restoreNeeded = true;\n                  ctx.save();\n                  ctx.scale(characterScaleX, 1);\n                  scaledX /= characterScaleX;\n                } else if (width !== measuredWidth) {\n                  scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n                }\n              }\n\n              if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n                if (simpleFillText && !accent) {\n                  ctx.fillText(character, scaledX, scaledY);\n                } else {\n                  this.paintChar(character, scaledX, scaledY, patternTransform);\n\n                  if (accent) {\n                    const scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;\n                    const scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;\n                    this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n                  }\n                }\n              }\n\n              const charWidth = vertical ? width * widthAdvanceScale - spacing * fontDirection : width * widthAdvanceScale + spacing * fontDirection;\n              x += charWidth;\n\n              if (restoreNeeded) {\n                ctx.restore();\n              }\n            }\n\n            if (vertical) {\n              current.y -= x;\n            } else {\n              current.x += x * textHScale;\n            }\n\n            ctx.restore();\n            this.compose();\n            return undefined;\n          }\n\n          showType3Text(glyphs) {\n            const ctx = this.ctx;\n            const current = this.current;\n            const font = current.font;\n            const fontSize = current.fontSize;\n            const fontDirection = current.fontDirection;\n            const spacingDir = font.vertical ? 1 : -1;\n            const charSpacing = current.charSpacing;\n            const wordSpacing = current.wordSpacing;\n            const textHScale = current.textHScale * fontDirection;\n            const fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n            const glyphsLength = glyphs.length;\n            const isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n            let i, glyph, width, spacingLength;\n\n            if (isTextInvisible || fontSize === 0) {\n              return;\n            }\n\n            this._cachedScaleForStroking[0] = -1;\n            this._cachedGetSinglePixelWidth = null;\n            ctx.save();\n            ctx.transform(...current.textMatrix);\n            ctx.translate(current.x, current.y);\n            ctx.scale(textHScale, fontDirection);\n\n            for (i = 0; i < glyphsLength; ++i) {\n              glyph = glyphs[i];\n\n              if (typeof glyph === \"number\") {\n                spacingLength = spacingDir * glyph * fontSize / 1000;\n                this.ctx.translate(spacingLength, 0);\n                current.x += spacingLength * textHScale;\n                continue;\n              }\n\n              const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              const operatorList = font.charProcOperatorList[glyph.operatorListId];\n\n              if (!operatorList) {\n                (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n                continue;\n              }\n\n              if (this.contentVisible) {\n                this.processingType3 = glyph;\n                this.save();\n                ctx.scale(fontSize, fontSize);\n                ctx.transform(...fontMatrix);\n                this.executeOperatorList(operatorList);\n                this.restore();\n              }\n\n              const transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n\n              width = transformed[0] * fontSize + spacing;\n              ctx.translate(width, 0);\n              current.x += width * textHScale;\n            }\n\n            ctx.restore();\n            this.processingType3 = null;\n          }\n\n          setCharWidth(xWidth, yWidth) {}\n\n          setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n            this.ctx.rect(llx, lly, urx - llx, ury - lly);\n            this.ctx.clip();\n            this.endPath();\n          }\n\n          getColorN_Pattern(IR) {\n            let pattern;\n\n            if (IR[0] === \"TilingPattern\") {\n              const color = IR[1];\n              const baseTransform = this.baseTransform || (0, _display_utils.getCurrentTransform)(this.ctx);\n              const canvasGraphicsFactory = {\n                createCanvasGraphics: ctx => {\n                  return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory, this.filterFactory, {\n                    optionalContentConfig: this.optionalContentConfig,\n                    markedContentStack: this.markedContentStack\n                  });\n                }\n              };\n              pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n            } else {\n              pattern = this._getPattern(IR[1], IR[2]);\n            }\n\n            return pattern;\n          }\n\n          setStrokeColorN() {\n            this.current.strokeColor = this.getColorN_Pattern(arguments);\n          }\n\n          setFillColorN() {\n            this.current.fillColor = this.getColorN_Pattern(arguments);\n            this.current.patternFill = true;\n          }\n\n          setStrokeRGBColor(r, g, b) {\n            const color = _util.Util.makeHexColor(r, g, b);\n\n            this.ctx.strokeStyle = color;\n            this.current.strokeColor = color;\n          }\n\n          setFillRGBColor(r, g, b) {\n            const color = _util.Util.makeHexColor(r, g, b);\n\n            this.ctx.fillStyle = color;\n            this.current.fillColor = color;\n            this.current.patternFill = false;\n          }\n\n          _getPattern(objId) {\n            let matrix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            let pattern;\n\n            if (this.cachedPatterns.has(objId)) {\n              pattern = this.cachedPatterns.get(objId);\n            } else {\n              pattern = (0, _pattern_helper.getShadingPattern)(this.getObject(objId));\n              this.cachedPatterns.set(objId, pattern);\n            }\n\n            if (matrix) {\n              pattern.matrix = matrix;\n            }\n\n            return pattern;\n          }\n\n          shadingFill(objId) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const ctx = this.ctx;\n            this.save();\n\n            const pattern = this._getPattern(objId);\n\n            ctx.fillStyle = pattern.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.SHADING);\n            const inv = (0, _display_utils.getCurrentTransformInverse)(ctx);\n\n            if (inv) {\n              const {\n                width,\n                height\n              } = ctx.canvas;\n\n              const [x0, y0, x1, y1] = _util.Util.getAxialAlignedBoundingBox([0, 0, width, height], inv);\n\n              this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n            } else {\n              this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n            }\n\n            this.compose(this.current.getClippedPathBoundingBox());\n            this.restore();\n          }\n\n          beginInlineImage() {\n            (0, _util.unreachable)(\"Should not call beginInlineImage\");\n          }\n\n          beginImageData() {\n            (0, _util.unreachable)(\"Should not call beginImageData\");\n          }\n\n          paintFormXObjectBegin(matrix, bbox) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.save();\n            this.baseTransformStack.push(this.baseTransform);\n\n            if (Array.isArray(matrix) && matrix.length === 6) {\n              this.transform(...matrix);\n            }\n\n            this.baseTransform = (0, _display_utils.getCurrentTransform)(this.ctx);\n\n            if (bbox) {\n              const width = bbox[2] - bbox[0];\n              const height = bbox[3] - bbox[1];\n              this.ctx.rect(bbox[0], bbox[1], width, height);\n              this.current.updateRectMinMax((0, _display_utils.getCurrentTransform)(this.ctx), bbox);\n              this.clip();\n              this.endPath();\n            }\n          }\n\n          paintFormXObjectEnd() {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.restore();\n            this.baseTransform = this.baseTransformStack.pop();\n          }\n\n          beginGroup(group) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.save();\n\n            if (this.inSMaskMode) {\n              this.endSMaskMode();\n              this.current.activeSMask = null;\n            }\n\n            const currentCtx = this.ctx;\n\n            if (!group.isolated) {\n              (0, _util.info)(\"TODO: Support non-isolated groups.\");\n            }\n\n            if (group.knockout) {\n              (0, _util.warn)(\"Knockout groups not supported.\");\n            }\n\n            const currentTransform = (0, _display_utils.getCurrentTransform)(currentCtx);\n\n            if (group.matrix) {\n              currentCtx.transform(...group.matrix);\n            }\n\n            if (!group.bbox) {\n              throw new Error(\"Bounding box is required.\");\n            }\n\n            let bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, (0, _display_utils.getCurrentTransform)(currentCtx));\n\n            const canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n            bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n            const offsetX = Math.floor(bounds[0]);\n            const offsetY = Math.floor(bounds[1]);\n            let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n            let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n            let scaleX = 1,\n                scaleY = 1;\n\n            if (drawnWidth > MAX_GROUP_SIZE) {\n              scaleX = drawnWidth / MAX_GROUP_SIZE;\n              drawnWidth = MAX_GROUP_SIZE;\n            }\n\n            if (drawnHeight > MAX_GROUP_SIZE) {\n              scaleY = drawnHeight / MAX_GROUP_SIZE;\n              drawnHeight = MAX_GROUP_SIZE;\n            }\n\n            this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n            let cacheId = \"groupAt\" + this.groupLevel;\n\n            if (group.smask) {\n              cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n            }\n\n            const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight);\n            const groupCtx = scratchCanvas.context;\n            groupCtx.scale(1 / scaleX, 1 / scaleY);\n            groupCtx.translate(-offsetX, -offsetY);\n            groupCtx.transform(...currentTransform);\n\n            if (group.smask) {\n              this.smaskStack.push({\n                canvas: scratchCanvas.canvas,\n                context: groupCtx,\n                offsetX,\n                offsetY,\n                scaleX,\n                scaleY,\n                subtype: group.smask.subtype,\n                backdrop: group.smask.backdrop,\n                transferMap: group.smask.transferMap || null,\n                startTransformInverse: null\n              });\n            } else {\n              currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n              currentCtx.translate(offsetX, offsetY);\n              currentCtx.scale(scaleX, scaleY);\n              currentCtx.save();\n            }\n\n            copyCtxState(currentCtx, groupCtx);\n            this.ctx = groupCtx;\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n          }\n\n          endGroup(group) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.groupLevel--;\n            const groupCtx = this.ctx;\n            const ctx = this.groupStack.pop();\n            this.ctx = ctx;\n            this.ctx.imageSmoothingEnabled = false;\n\n            if (group.smask) {\n              this.tempSMask = this.smaskStack.pop();\n              this.restore();\n            } else {\n              this.ctx.restore();\n              const currentMtx = (0, _display_utils.getCurrentTransform)(this.ctx);\n              this.restore();\n              this.ctx.save();\n              this.ctx.setTransform(...currentMtx);\n\n              const dirtyBox = _util.Util.getAxialAlignedBoundingBox([0, 0, groupCtx.canvas.width, groupCtx.canvas.height], currentMtx);\n\n              this.ctx.drawImage(groupCtx.canvas, 0, 0);\n              this.ctx.restore();\n              this.compose(dirtyBox);\n            }\n          }\n\n          beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n            this.#restoreInitialState();\n            resetCtxToDefault(this.ctx);\n            this.ctx.save();\n            this.save();\n\n            if (this.baseTransform) {\n              this.ctx.setTransform(...this.baseTransform);\n            }\n\n            if (Array.isArray(rect) && rect.length === 4) {\n              const width = rect[2] - rect[0];\n              const height = rect[3] - rect[1];\n\n              if (hasOwnCanvas && this.annotationCanvasMap) {\n                transform = transform.slice();\n                transform[4] -= rect[0];\n                transform[5] -= rect[1];\n                rect = rect.slice();\n                rect[0] = rect[1] = 0;\n                rect[2] = width;\n                rect[3] = height;\n\n                const [scaleX, scaleY] = _util.Util.singularValueDecompose2dScale((0, _display_utils.getCurrentTransform)(this.ctx));\n\n                const {\n                  viewportScale\n                } = this;\n                const canvasWidth = Math.ceil(width * this.outputScaleX * viewportScale);\n                const canvasHeight = Math.ceil(height * this.outputScaleY * viewportScale);\n                this.annotationCanvas = this.canvasFactory.create(canvasWidth, canvasHeight);\n                const {\n                  canvas,\n                  context\n                } = this.annotationCanvas;\n                this.annotationCanvasMap.set(id, canvas);\n                this.annotationCanvas.savedCtx = this.ctx;\n                this.ctx = context;\n                this.ctx.save();\n                this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n                resetCtxToDefault(this.ctx);\n              } else {\n                resetCtxToDefault(this.ctx);\n                this.ctx.rect(rect[0], rect[1], width, height);\n                this.ctx.clip();\n                this.endPath();\n              }\n            }\n\n            this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n            this.transform(...transform);\n            this.transform(...matrix);\n          }\n\n          endAnnotation() {\n            if (this.annotationCanvas) {\n              this.ctx.restore();\n              this.#drawFilter();\n              this.ctx = this.annotationCanvas.savedCtx;\n              delete this.annotationCanvas.savedCtx;\n              delete this.annotationCanvas;\n            }\n          }\n\n          paintImageMaskXObject(img) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const count = img.count;\n            img = this.getObject(img.data, img);\n            img.count = count;\n            const ctx = this.ctx;\n            const glyph = this.processingType3;\n\n            if (glyph) {\n              if (glyph.compiled === undefined) {\n                glyph.compiled = compileType3Glyph(img);\n              }\n\n              if (glyph.compiled) {\n                glyph.compiled(ctx);\n                return;\n              }\n            }\n\n            const mask = this._createMaskCanvas(img);\n\n            const maskCanvas = mask.canvas;\n            ctx.save();\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n            ctx.restore();\n            this.compose();\n          }\n\n          paintImageMaskXObjectRepeat(img, scaleX) {\n            let skewX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n            let skewY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n            let scaleY = arguments.length > 4 ? arguments[4] : undefined;\n            let positions = arguments.length > 5 ? arguments[5] : undefined;\n\n            if (!this.contentVisible) {\n              return;\n            }\n\n            img = this.getObject(img.data, img);\n            const ctx = this.ctx;\n            ctx.save();\n            const currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n            ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n\n            const mask = this._createMaskCanvas(img);\n\n            ctx.setTransform(1, 0, 0, 1, mask.offsetX - currentTransform[4], mask.offsetY - currentTransform[5]);\n\n            for (let i = 0, ii = positions.length; i < ii; i += 2) {\n              const trans = _util.Util.transform(currentTransform, [scaleX, skewX, skewY, scaleY, positions[i], positions[i + 1]]);\n\n              const [x, y] = _util.Util.applyTransform([0, 0], trans);\n\n              ctx.drawImage(mask.canvas, x, y);\n            }\n\n            ctx.restore();\n            this.compose();\n          }\n\n          paintImageMaskXObjectGroup(images) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const ctx = this.ctx;\n            const fillColor = this.current.fillColor;\n            const isPatternFill = this.current.patternFill;\n\n            for (const image of images) {\n              const {\n                data,\n                width,\n                height,\n                transform\n              } = image;\n              const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n              const maskCtx = maskCanvas.context;\n              maskCtx.save();\n              const img = this.getObject(data, image);\n              putBinaryImageMask(maskCtx, img);\n              maskCtx.globalCompositeOperation = \"source-in\";\n              maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL) : fillColor;\n              maskCtx.fillRect(0, 0, width, height);\n              maskCtx.restore();\n              ctx.save();\n              ctx.transform(...transform);\n              ctx.scale(1, -1);\n              drawImageAtIntegerCoords(ctx, maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n              ctx.restore();\n            }\n\n            this.compose();\n          }\n\n          paintImageXObject(objId) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const imgData = this.getObject(objId);\n\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n\n            this.paintInlineImageXObject(imgData);\n          }\n\n          paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const imgData = this.getObject(objId);\n\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n\n            const width = imgData.width;\n            const height = imgData.height;\n            const map = [];\n\n            for (let i = 0, ii = positions.length; i < ii; i += 2) {\n              map.push({\n                transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n                x: 0,\n                y: 0,\n                w: width,\n                h: height\n              });\n            }\n\n            this.paintInlineImageXObjectGroup(imgData, map);\n          }\n\n          applyTransferMapsToCanvas(ctx) {\n            if (this.current.transferMaps !== \"none\") {\n              ctx.filter = this.current.transferMaps;\n              ctx.drawImage(ctx.canvas, 0, 0);\n              ctx.filter = \"none\";\n            }\n\n            return ctx.canvas;\n          }\n\n          applyTransferMapsToBitmap(imgData) {\n            if (this.current.transferMaps === \"none\") {\n              return imgData.bitmap;\n            }\n\n            const {\n              bitmap,\n              width,\n              height\n            } = imgData;\n            const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n            const tmpCtx = tmpCanvas.context;\n            tmpCtx.filter = this.current.transferMaps;\n            tmpCtx.drawImage(bitmap, 0, 0);\n            tmpCtx.filter = \"none\";\n            return tmpCanvas.canvas;\n          }\n\n          paintInlineImageXObject(imgData) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const width = imgData.width;\n            const height = imgData.height;\n            const ctx = this.ctx;\n            this.save();\n\n            if (!_util.isNodeJS) {\n              const {\n                filter\n              } = ctx;\n\n              if (filter !== \"none\" && filter !== \"\") {\n                ctx.filter = \"none\";\n              }\n            }\n\n            ctx.scale(1 / width, -1 / height);\n            let imgToPaint;\n\n            if (imgData.bitmap) {\n              imgToPaint = this.applyTransferMapsToBitmap(imgData);\n            } else if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n              imgToPaint = imgData;\n            } else {\n              const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n              const tmpCtx = tmpCanvas.context;\n              putBinaryImageData(tmpCtx, imgData);\n              imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n            }\n\n            const scaled = this._scaleImage(imgToPaint, (0, _display_utils.getCurrentTransformInverse)(ctx));\n\n            ctx.imageSmoothingEnabled = getImageSmoothingEnabled((0, _display_utils.getCurrentTransform)(ctx), imgData.interpolate);\n            drawImageAtIntegerCoords(ctx, scaled.img, 0, 0, scaled.paintWidth, scaled.paintHeight, 0, -height, width, height);\n            this.compose();\n            this.restore();\n          }\n\n          paintInlineImageXObjectGroup(imgData, map) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const ctx = this.ctx;\n            let imgToPaint;\n\n            if (imgData.bitmap) {\n              imgToPaint = imgData.bitmap;\n            } else {\n              const w = imgData.width;\n              const h = imgData.height;\n              const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n              const tmpCtx = tmpCanvas.context;\n              putBinaryImageData(tmpCtx, imgData);\n              imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n            }\n\n            for (const entry of map) {\n              ctx.save();\n              ctx.transform(...entry.transform);\n              ctx.scale(1, -1);\n              drawImageAtIntegerCoords(ctx, imgToPaint, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n              ctx.restore();\n            }\n\n            this.compose();\n          }\n\n          paintSolidColorImageMask() {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.ctx.fillRect(0, 0, 1, 1);\n            this.compose();\n          }\n\n          markPoint(tag) {}\n\n          markPointProps(tag, properties) {}\n\n          beginMarkedContent(tag) {\n            this.markedContentStack.push({\n              visible: true\n            });\n          }\n\n          beginMarkedContentProps(tag, properties) {\n            if (tag === \"OC\") {\n              this.markedContentStack.push({\n                visible: this.optionalContentConfig.isVisible(properties)\n              });\n            } else {\n              this.markedContentStack.push({\n                visible: true\n              });\n            }\n\n            this.contentVisible = this.isContentVisible();\n          }\n\n          endMarkedContent() {\n            this.markedContentStack.pop();\n            this.contentVisible = this.isContentVisible();\n          }\n\n          beginCompat() {}\n\n          endCompat() {}\n\n          consumePath(clipBox) {\n            const isEmpty = this.current.isEmptyClip();\n\n            if (this.pendingClip) {\n              this.current.updateClipFromPath();\n            }\n\n            if (!this.pendingClip) {\n              this.compose(clipBox);\n            }\n\n            const ctx = this.ctx;\n\n            if (this.pendingClip) {\n              if (!isEmpty) {\n                if (this.pendingClip === EO_CLIP) {\n                  ctx.clip(\"evenodd\");\n                } else {\n                  ctx.clip();\n                }\n              }\n\n              this.pendingClip = null;\n            }\n\n            this.current.startNewPathAndClipBox(this.current.clipBox);\n            ctx.beginPath();\n          }\n\n          getSinglePixelWidth() {\n            if (!this._cachedGetSinglePixelWidth) {\n              const m = (0, _display_utils.getCurrentTransform)(this.ctx);\n\n              if (m[1] === 0 && m[2] === 0) {\n                this._cachedGetSinglePixelWidth = 1 / Math.min(Math.abs(m[0]), Math.abs(m[3]));\n              } else {\n                const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n                const normX = Math.hypot(m[0], m[2]);\n                const normY = Math.hypot(m[1], m[3]);\n                this._cachedGetSinglePixelWidth = Math.max(normX, normY) / absDet;\n              }\n            }\n\n            return this._cachedGetSinglePixelWidth;\n          }\n\n          getScaleForStroking() {\n            if (this._cachedScaleForStroking[0] === -1) {\n              const {\n                lineWidth\n              } = this.current;\n              const {\n                a,\n                b,\n                c,\n                d\n              } = this.ctx.getTransform();\n              let scaleX, scaleY;\n\n              if (b === 0 && c === 0) {\n                const normX = Math.abs(a);\n                const normY = Math.abs(d);\n\n                if (normX === normY) {\n                  if (lineWidth === 0) {\n                    scaleX = scaleY = 1 / normX;\n                  } else {\n                    const scaledLineWidth = normX * lineWidth;\n                    scaleX = scaleY = scaledLineWidth < 1 ? 1 / scaledLineWidth : 1;\n                  }\n                } else if (lineWidth === 0) {\n                  scaleX = 1 / normX;\n                  scaleY = 1 / normY;\n                } else {\n                  const scaledXLineWidth = normX * lineWidth;\n                  const scaledYLineWidth = normY * lineWidth;\n                  scaleX = scaledXLineWidth < 1 ? 1 / scaledXLineWidth : 1;\n                  scaleY = scaledYLineWidth < 1 ? 1 / scaledYLineWidth : 1;\n                }\n              } else {\n                const absDet = Math.abs(a * d - b * c);\n                const normX = Math.hypot(a, b);\n                const normY = Math.hypot(c, d);\n\n                if (lineWidth === 0) {\n                  scaleX = normY / absDet;\n                  scaleY = normX / absDet;\n                } else {\n                  const baseArea = lineWidth * absDet;\n                  scaleX = normY > baseArea ? normY / baseArea : 1;\n                  scaleY = normX > baseArea ? normX / baseArea : 1;\n                }\n              }\n\n              this._cachedScaleForStroking[0] = scaleX;\n              this._cachedScaleForStroking[1] = scaleY;\n            }\n\n            return this._cachedScaleForStroking;\n          }\n\n          rescaleAndStroke(saveRestore) {\n            const {\n              ctx\n            } = this;\n            const {\n              lineWidth\n            } = this.current;\n            const [scaleX, scaleY] = this.getScaleForStroking();\n            ctx.lineWidth = lineWidth || 1;\n\n            if (scaleX === 1 && scaleY === 1) {\n              ctx.stroke();\n              return;\n            }\n\n            const dashes = ctx.getLineDash();\n\n            if (saveRestore) {\n              ctx.save();\n            }\n\n            ctx.scale(scaleX, scaleY);\n\n            if (dashes.length > 0) {\n              const scale = Math.max(scaleX, scaleY);\n              ctx.setLineDash(dashes.map(x => x / scale));\n              ctx.lineDashOffset /= scale;\n            }\n\n            ctx.stroke();\n\n            if (saveRestore) {\n              ctx.restore();\n            }\n          }\n\n          isContentVisible() {\n            for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n              if (!this.markedContentStack[i].visible) {\n                return false;\n              }\n            }\n\n            return true;\n          }\n\n        }\n\n        exports.CanvasGraphics = CanvasGraphics;\n\n        for (const op in _util.OPS) {\n          if (CanvasGraphics.prototype[op] !== undefined) {\n            CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n          }\n        }\n        /***/\n\n      },\n      /* 12 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.TilingPattern = exports.PathType = void 0;\n        exports.getShadingPattern = getShadingPattern;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _display_utils = __w_pdfjs_require__(6);\n\n        const PathType = {\n          FILL: \"Fill\",\n          STROKE: \"Stroke\",\n          SHADING: \"Shading\"\n        };\n        exports.PathType = PathType;\n\n        function applyBoundingBox(ctx, bbox) {\n          if (!bbox) {\n            return;\n          }\n\n          const width = bbox[2] - bbox[0];\n          const height = bbox[3] - bbox[1];\n          const region = new Path2D();\n          region.rect(bbox[0], bbox[1], width, height);\n          ctx.clip(region);\n        }\n\n        class BaseShadingPattern {\n          constructor() {\n            if (this.constructor === BaseShadingPattern) {\n              (0, _util.unreachable)(\"Cannot initialize BaseShadingPattern.\");\n            }\n          }\n\n          getPattern() {\n            (0, _util.unreachable)(\"Abstract method `getPattern` called.\");\n          }\n\n        }\n\n        class RadialAxialShadingPattern extends BaseShadingPattern {\n          constructor(IR) {\n            super();\n            this._type = IR[1];\n            this._bbox = IR[2];\n            this._colorStops = IR[3];\n            this._p0 = IR[4];\n            this._p1 = IR[5];\n            this._r0 = IR[6];\n            this._r1 = IR[7];\n            this.matrix = null;\n          }\n\n          _createGradient(ctx) {\n            let grad;\n\n            if (this._type === \"axial\") {\n              grad = ctx.createLinearGradient(this._p0[0], this._p0[1], this._p1[0], this._p1[1]);\n            } else if (this._type === \"radial\") {\n              grad = ctx.createRadialGradient(this._p0[0], this._p0[1], this._r0, this._p1[0], this._p1[1], this._r1);\n            }\n\n            for (const colorStop of this._colorStops) {\n              grad.addColorStop(colorStop[0], colorStop[1]);\n            }\n\n            return grad;\n          }\n\n          getPattern(ctx, owner, inverse, pathType) {\n            let pattern;\n\n            if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n              const ownerBBox = owner.current.getClippedPathBoundingBox(pathType, (0, _display_utils.getCurrentTransform)(ctx)) || [0, 0, 0, 0];\n              const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n              const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n              const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", width, height, true);\n              const tmpCtx = tmpCanvas.context;\n              tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n              tmpCtx.beginPath();\n              tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n              tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n              inverse = _util.Util.transform(inverse, [1, 0, 0, 1, ownerBBox[0], ownerBBox[1]]);\n              tmpCtx.transform(...owner.baseTransform);\n\n              if (this.matrix) {\n                tmpCtx.transform(...this.matrix);\n              }\n\n              applyBoundingBox(tmpCtx, this._bbox);\n              tmpCtx.fillStyle = this._createGradient(tmpCtx);\n              tmpCtx.fill();\n              pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n              const domMatrix = new DOMMatrix(inverse);\n              pattern.setTransform(domMatrix);\n            } else {\n              applyBoundingBox(ctx, this._bbox);\n              pattern = this._createGradient(ctx);\n            }\n\n            return pattern;\n          }\n\n        }\n\n        function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n          const coords = context.coords,\n                colors = context.colors;\n          const bytes = data.data,\n                rowSize = data.width * 4;\n          let tmp;\n\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n\n          if (coords[p2 + 1] > coords[p3 + 1]) {\n            tmp = p2;\n            p2 = p3;\n            p3 = tmp;\n            tmp = c2;\n            c2 = c3;\n            c3 = tmp;\n          }\n\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n\n          const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n          const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n          const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n          const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n          const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n          const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n\n          if (y1 >= y3) {\n            return;\n          }\n\n          const c1r = colors[c1],\n                c1g = colors[c1 + 1],\n                c1b = colors[c1 + 2];\n          const c2r = colors[c2],\n                c2g = colors[c2 + 1],\n                c2b = colors[c2 + 2];\n          const c3r = colors[c3],\n                c3g = colors[c3 + 1],\n                c3b = colors[c3 + 2];\n          const minY = Math.round(y1),\n                maxY = Math.round(y3);\n          let xa, car, cag, cab;\n          let xb, cbr, cbg, cbb;\n\n          for (let y = minY; y <= maxY; y++) {\n            if (y < y2) {\n              const k = y < y1 ? 0 : (y1 - y) / (y1 - y2);\n              xa = x1 - (x1 - x2) * k;\n              car = c1r - (c1r - c2r) * k;\n              cag = c1g - (c1g - c2g) * k;\n              cab = c1b - (c1b - c2b) * k;\n            } else {\n              let k;\n\n              if (y > y3) {\n                k = 1;\n              } else if (y2 === y3) {\n                k = 0;\n              } else {\n                k = (y2 - y) / (y2 - y3);\n              }\n\n              xa = x2 - (x2 - x3) * k;\n              car = c2r - (c2r - c3r) * k;\n              cag = c2g - (c2g - c3g) * k;\n              cab = c2b - (c2b - c3b) * k;\n            }\n\n            let k;\n\n            if (y < y1) {\n              k = 0;\n            } else if (y > y3) {\n              k = 1;\n            } else {\n              k = (y1 - y) / (y1 - y3);\n            }\n\n            xb = x1 - (x1 - x3) * k;\n            cbr = c1r - (c1r - c3r) * k;\n            cbg = c1g - (c1g - c3g) * k;\n            cbb = c1b - (c1b - c3b) * k;\n            const x1_ = Math.round(Math.min(xa, xb));\n            const x2_ = Math.round(Math.max(xa, xb));\n            let j = rowSize * y + x1_ * 4;\n\n            for (let x = x1_; x <= x2_; x++) {\n              k = (xa - x) / (xa - xb);\n\n              if (k < 0) {\n                k = 0;\n              } else if (k > 1) {\n                k = 1;\n              }\n\n              bytes[j++] = car - (car - cbr) * k | 0;\n              bytes[j++] = cag - (cag - cbg) * k | 0;\n              bytes[j++] = cab - (cab - cbb) * k | 0;\n              bytes[j++] = 255;\n            }\n          }\n        }\n\n        function drawFigure(data, figure, context) {\n          const ps = figure.coords;\n          const cs = figure.colors;\n          let i, ii;\n\n          switch (figure.type) {\n            case \"lattice\":\n              const verticesPerRow = figure.verticesPerRow;\n              const rows = Math.floor(ps.length / verticesPerRow) - 1;\n              const cols = verticesPerRow - 1;\n\n              for (i = 0; i < rows; i++) {\n                let q = i * verticesPerRow;\n\n                for (let j = 0; j < cols; j++, q++) {\n                  drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n                  drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n                }\n              }\n\n              break;\n\n            case \"triangles\":\n              for (i = 0, ii = ps.length; i < ii; i += 3) {\n                drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n              }\n\n              break;\n\n            default:\n              throw new Error(\"illegal figure\");\n          }\n        }\n\n        class MeshShadingPattern extends BaseShadingPattern {\n          constructor(IR) {\n            super();\n            this._coords = IR[2];\n            this._colors = IR[3];\n            this._figures = IR[4];\n            this._bounds = IR[5];\n            this._bbox = IR[7];\n            this._background = IR[8];\n            this.matrix = null;\n          }\n\n          _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n            const EXPECTED_SCALE = 1.1;\n            const MAX_PATTERN_SIZE = 3000;\n            const BORDER_SIZE = 2;\n            const offsetX = Math.floor(this._bounds[0]);\n            const offsetY = Math.floor(this._bounds[1]);\n            const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n            const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n            const width = Math.min(Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n            const height = Math.min(Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n            const scaleX = boundsWidth / width;\n            const scaleY = boundsHeight / height;\n            const context = {\n              coords: this._coords,\n              colors: this._colors,\n              offsetX: -offsetX,\n              offsetY: -offsetY,\n              scaleX: 1 / scaleX,\n              scaleY: 1 / scaleY\n            };\n            const paddedWidth = width + BORDER_SIZE * 2;\n            const paddedHeight = height + BORDER_SIZE * 2;\n            const tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n            const tmpCtx = tmpCanvas.context;\n            const data = tmpCtx.createImageData(width, height);\n\n            if (backgroundColor) {\n              const bytes = data.data;\n\n              for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n                bytes[i] = backgroundColor[0];\n                bytes[i + 1] = backgroundColor[1];\n                bytes[i + 2] = backgroundColor[2];\n                bytes[i + 3] = 255;\n              }\n            }\n\n            for (const figure of this._figures) {\n              drawFigure(data, figure, context);\n            }\n\n            tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n            const canvas = tmpCanvas.canvas;\n            return {\n              canvas,\n              offsetX: offsetX - BORDER_SIZE * scaleX,\n              offsetY: offsetY - BORDER_SIZE * scaleY,\n              scaleX,\n              scaleY\n            };\n          }\n\n          getPattern(ctx, owner, inverse, pathType) {\n            applyBoundingBox(ctx, this._bbox);\n            let scale;\n\n            if (pathType === PathType.SHADING) {\n              scale = _util.Util.singularValueDecompose2dScale((0, _display_utils.getCurrentTransform)(ctx));\n            } else {\n              scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n\n              if (this.matrix) {\n                const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n\n                scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n              }\n            }\n\n            const temporaryPatternCanvas = this._createMeshCanvas(scale, pathType === PathType.SHADING ? null : this._background, owner.cachedCanvases);\n\n            if (pathType !== PathType.SHADING) {\n              ctx.setTransform(...owner.baseTransform);\n\n              if (this.matrix) {\n                ctx.transform(...this.matrix);\n              }\n            }\n\n            ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n            ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n            return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n          }\n\n        }\n\n        class DummyShadingPattern extends BaseShadingPattern {\n          getPattern() {\n            return \"hotpink\";\n          }\n\n        }\n\n        function getShadingPattern(IR) {\n          switch (IR[0]) {\n            case \"RadialAxial\":\n              return new RadialAxialShadingPattern(IR);\n\n            case \"Mesh\":\n              return new MeshShadingPattern(IR);\n\n            case \"Dummy\":\n              return new DummyShadingPattern();\n          }\n\n          throw new Error(`Unknown IR type: ${IR[0]}`);\n        }\n\n        const PaintType = {\n          COLORED: 1,\n          UNCOLORED: 2\n        };\n\n        class TilingPattern {\n          static MAX_PATTERN_SIZE = 3000;\n\n          constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n            this.operatorList = IR[2];\n            this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n            this.bbox = IR[4];\n            this.xstep = IR[5];\n            this.ystep = IR[6];\n            this.paintType = IR[7];\n            this.tilingType = IR[8];\n            this.color = color;\n            this.ctx = ctx;\n            this.canvasGraphicsFactory = canvasGraphicsFactory;\n            this.baseTransform = baseTransform;\n          }\n\n          createPatternCanvas(owner) {\n            const operatorList = this.operatorList;\n            const bbox = this.bbox;\n            const xstep = this.xstep;\n            const ystep = this.ystep;\n            const paintType = this.paintType;\n            const tilingType = this.tilingType;\n            const color = this.color;\n            const canvasGraphicsFactory = this.canvasGraphicsFactory;\n            (0, _util.info)(\"TilingType: \" + tilingType);\n            const x0 = bbox[0],\n                  y0 = bbox[1],\n                  x1 = bbox[2],\n                  y1 = bbox[3];\n\n            const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n\n            const curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n\n            const combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n            const dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n            const dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n            const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n            const tmpCtx = tmpCanvas.context;\n            const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n            graphics.groupLevel = owner.groupLevel;\n            this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n            let adjustedX0 = x0;\n            let adjustedY0 = y0;\n            let adjustedX1 = x1;\n            let adjustedY1 = y1;\n\n            if (x0 < 0) {\n              adjustedX0 = 0;\n              adjustedX1 += Math.abs(x0);\n            }\n\n            if (y0 < 0) {\n              adjustedY0 = 0;\n              adjustedY1 += Math.abs(y0);\n            }\n\n            tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n            graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n            tmpCtx.save();\n            this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n            graphics.baseTransform = (0, _display_utils.getCurrentTransform)(graphics.ctx);\n            graphics.executeOperatorList(operatorList);\n            graphics.endDrawing();\n            return {\n              canvas: tmpCanvas.canvas,\n              scaleX: dimx.scale,\n              scaleY: dimy.scale,\n              offsetX: adjustedX0,\n              offsetY: adjustedY0\n            };\n          }\n\n          getSizeAndScale(step, realOutputSize, scale) {\n            step = Math.abs(step);\n            const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n            let size = Math.ceil(step * scale);\n\n            if (size >= maxSize) {\n              size = maxSize;\n            } else {\n              scale = size / step;\n            }\n\n            return {\n              scale,\n              size\n            };\n          }\n\n          clipBbox(graphics, x0, y0, x1, y1) {\n            const bboxWidth = x1 - x0;\n            const bboxHeight = y1 - y0;\n            graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n            graphics.current.updateRectMinMax((0, _display_utils.getCurrentTransform)(graphics.ctx), [x0, y0, x1, y1]);\n            graphics.clip();\n            graphics.endPath();\n          }\n\n          setFillAndStrokeStyleToContext(graphics, paintType, color) {\n            const context = graphics.ctx,\n                  current = graphics.current;\n\n            switch (paintType) {\n              case PaintType.COLORED:\n                const ctx = this.ctx;\n                context.fillStyle = ctx.fillStyle;\n                context.strokeStyle = ctx.strokeStyle;\n                current.fillColor = ctx.fillStyle;\n                current.strokeColor = ctx.strokeStyle;\n                break;\n\n              case PaintType.UNCOLORED:\n                const cssColor = _util.Util.makeHexColor(color[0], color[1], color[2]);\n\n                context.fillStyle = cssColor;\n                context.strokeStyle = cssColor;\n                current.fillColor = cssColor;\n                current.strokeColor = cssColor;\n                break;\n\n              default:\n                throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n            }\n          }\n\n          getPattern(ctx, owner, inverse, pathType) {\n            let matrix = inverse;\n\n            if (pathType !== PathType.SHADING) {\n              matrix = _util.Util.transform(matrix, owner.baseTransform);\n\n              if (this.matrix) {\n                matrix = _util.Util.transform(matrix, this.matrix);\n              }\n            }\n\n            const temporaryPatternCanvas = this.createPatternCanvas(owner);\n            let domMatrix = new DOMMatrix(matrix);\n            domMatrix = domMatrix.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n            domMatrix = domMatrix.scale(1 / temporaryPatternCanvas.scaleX, 1 / temporaryPatternCanvas.scaleY);\n            const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n            pattern.setTransform(domMatrix);\n            return pattern;\n          }\n\n        }\n\n        exports.TilingPattern = TilingPattern;\n        /***/\n      },\n      /* 13 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.convertBlackAndWhiteToRGBA = convertBlackAndWhiteToRGBA;\n        exports.convertToRGBA = convertToRGBA;\n        exports.grayToRGBA = grayToRGBA;\n\n        var _util = __w_pdfjs_require__(1);\n\n        function convertToRGBA(params) {\n          switch (params.kind) {\n            case _util.ImageKind.GRAYSCALE_1BPP:\n              return convertBlackAndWhiteToRGBA(params);\n\n            case _util.ImageKind.RGB_24BPP:\n              return convertRGBToRGBA(params);\n          }\n\n          return null;\n        }\n\n        function convertBlackAndWhiteToRGBA(_ref32) {\n          let {\n            src,\n            srcPos = 0,\n            dest,\n            width,\n            height,\n            nonBlackColor = 0xffffffff,\n            inverseDecode = false\n          } = _ref32;\n          const black = _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n          const [zeroMapping, oneMapping] = inverseDecode ? [nonBlackColor, black] : [black, nonBlackColor];\n          const widthInSource = width >> 3;\n          const widthRemainder = width & 7;\n          const srcLength = src.length;\n          dest = new Uint32Array(dest.buffer);\n          let destPos = 0;\n\n          for (let i = 0; i < height; i++) {\n            for (const max = srcPos + widthInSource; srcPos < max; srcPos++) {\n              const elem = srcPos < srcLength ? src[srcPos] : 255;\n              dest[destPos++] = elem & 0b10000000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b1000000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b100000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b10000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b1000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b100 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b10 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b1 ? oneMapping : zeroMapping;\n            }\n\n            if (widthRemainder === 0) {\n              continue;\n            }\n\n            const elem = srcPos < srcLength ? src[srcPos++] : 255;\n\n            for (let j = 0; j < widthRemainder; j++) {\n              dest[destPos++] = elem & 1 << 7 - j ? oneMapping : zeroMapping;\n            }\n          }\n\n          return {\n            srcPos,\n            destPos\n          };\n        }\n\n        function convertRGBToRGBA(_ref33) {\n          let {\n            src,\n            srcPos = 0,\n            dest,\n            destPos = 0,\n            width,\n            height\n          } = _ref33;\n          let i = 0;\n          const len32 = src.length >> 2;\n          const src32 = new Uint32Array(src.buffer, srcPos, len32);\n\n          if (_util.FeatureTest.isLittleEndian) {\n            for (; i < len32 - 2; i += 3, destPos += 4) {\n              const s1 = src32[i];\n              const s2 = src32[i + 1];\n              const s3 = src32[i + 2];\n              dest[destPos] = s1 | 0xff000000;\n              dest[destPos + 1] = s1 >>> 24 | s2 << 8 | 0xff000000;\n              dest[destPos + 2] = s2 >>> 16 | s3 << 16 | 0xff000000;\n              dest[destPos + 3] = s3 >>> 8 | 0xff000000;\n            }\n\n            for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n              dest[destPos++] = src[j] | src[j + 1] << 8 | src[j + 2] << 16 | 0xff000000;\n            }\n          } else {\n            for (; i < len32 - 2; i += 3, destPos += 4) {\n              const s1 = src32[i];\n              const s2 = src32[i + 1];\n              const s3 = src32[i + 2];\n              dest[destPos] = s1 | 0xff;\n              dest[destPos + 1] = s1 << 24 | s2 >>> 8 | 0xff;\n              dest[destPos + 2] = s2 << 16 | s3 >>> 16 | 0xff;\n              dest[destPos + 3] = s3 << 8 | 0xff;\n            }\n\n            for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n              dest[destPos++] = src[j] << 24 | src[j + 1] << 16 | src[j + 2] << 8 | 0xff;\n            }\n          }\n\n          return {\n            srcPos,\n            destPos\n          };\n        }\n\n        function grayToRGBA(src, dest) {\n          if (_util.FeatureTest.isLittleEndian) {\n            for (let i = 0, ii = src.length; i < ii; i++) {\n              dest[i] = src[i] * 0x10101 | 0xff000000;\n            }\n          } else {\n            for (let i = 0, ii = src.length; i < ii; i++) {\n              dest[i] = src[i] * 0x1010100 | 0x000000ff;\n            }\n          }\n        }\n        /***/\n\n      },\n      /* 14 */\n\n      /***/\n      (__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.GlobalWorkerOptions = void 0;\n        const GlobalWorkerOptions = Object.create(null);\n        exports.GlobalWorkerOptions = GlobalWorkerOptions;\n        GlobalWorkerOptions.workerPort = null;\n        GlobalWorkerOptions.workerSrc = \"\";\n        /***/\n      },\n      /* 15 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.MessageHandler = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        const CallbackKind = {\n          UNKNOWN: 0,\n          DATA: 1,\n          ERROR: 2\n        };\n        const StreamKind = {\n          UNKNOWN: 0,\n          CANCEL: 1,\n          CANCEL_COMPLETE: 2,\n          CLOSE: 3,\n          ENQUEUE: 4,\n          ERROR: 5,\n          PULL: 6,\n          PULL_COMPLETE: 7,\n          START_COMPLETE: 8\n        };\n\n        function wrapReason(reason) {\n          if (!(reason instanceof Error || typeof reason === \"object\" && reason !== null)) {\n            (0, _util.unreachable)('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n          }\n\n          switch (reason.name) {\n            case \"AbortException\":\n              return new _util.AbortException(reason.message);\n\n            case \"MissingPDFException\":\n              return new _util.MissingPDFException(reason.message);\n\n            case \"PasswordException\":\n              return new _util.PasswordException(reason.message, reason.code);\n\n            case \"UnexpectedResponseException\":\n              return new _util.UnexpectedResponseException(reason.message, reason.status);\n\n            case \"UnknownErrorException\":\n              return new _util.UnknownErrorException(reason.message, reason.details);\n\n            default:\n              return new _util.UnknownErrorException(reason.message, reason.toString());\n          }\n        }\n\n        class MessageHandler {\n          constructor(sourceName, targetName, comObj) {\n            this.sourceName = sourceName;\n            this.targetName = targetName;\n            this.comObj = comObj;\n            this.callbackId = 1;\n            this.streamId = 1;\n            this.streamSinks = Object.create(null);\n            this.streamControllers = Object.create(null);\n            this.callbackCapabilities = Object.create(null);\n            this.actionHandler = Object.create(null);\n\n            this._onComObjOnMessage = event => {\n              const data = event.data;\n\n              if (data.targetName !== this.sourceName) {\n                return;\n              }\n\n              if (data.stream) {\n                this.#processStreamMessage(data);\n                return;\n              }\n\n              if (data.callback) {\n                const callbackId = data.callbackId;\n                const capability = this.callbackCapabilities[callbackId];\n\n                if (!capability) {\n                  throw new Error(`Cannot resolve callback ${callbackId}`);\n                }\n\n                delete this.callbackCapabilities[callbackId];\n\n                if (data.callback === CallbackKind.DATA) {\n                  capability.resolve(data.data);\n                } else if (data.callback === CallbackKind.ERROR) {\n                  capability.reject(wrapReason(data.reason));\n                } else {\n                  throw new Error(\"Unexpected callback case\");\n                }\n\n                return;\n              }\n\n              const action = this.actionHandler[data.action];\n\n              if (!action) {\n                throw new Error(`Unknown action from worker: ${data.action}`);\n              }\n\n              if (data.callbackId) {\n                const cbSourceName = this.sourceName;\n                const cbTargetName = data.sourceName;\n                new Promise(function (resolve) {\n                  resolve(action(data.data));\n                }).then(function (result) {\n                  comObj.postMessage({\n                    sourceName: cbSourceName,\n                    targetName: cbTargetName,\n                    callback: CallbackKind.DATA,\n                    callbackId: data.callbackId,\n                    data: result\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName: cbSourceName,\n                    targetName: cbTargetName,\n                    callback: CallbackKind.ERROR,\n                    callbackId: data.callbackId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                return;\n              }\n\n              if (data.streamId) {\n                this.#createStreamSink(data);\n                return;\n              }\n\n              action(data.data);\n            };\n\n            comObj.addEventListener(\"message\", this._onComObjOnMessage);\n          }\n\n          on(actionName, handler) {\n            const ah = this.actionHandler;\n\n            if (ah[actionName]) {\n              throw new Error(`There is already an actionName called \"${actionName}\"`);\n            }\n\n            ah[actionName] = handler;\n          }\n\n          send(actionName, data, transfers) {\n            this.comObj.postMessage({\n              sourceName: this.sourceName,\n              targetName: this.targetName,\n              action: actionName,\n              data\n            }, transfers);\n          }\n\n          sendWithPromise(actionName, data, transfers) {\n            const callbackId = this.callbackId++;\n            const capability = new _util.PromiseCapability();\n            this.callbackCapabilities[callbackId] = capability;\n\n            try {\n              this.comObj.postMessage({\n                sourceName: this.sourceName,\n                targetName: this.targetName,\n                action: actionName,\n                callbackId,\n                data\n              }, transfers);\n            } catch (ex) {\n              capability.reject(ex);\n            }\n\n            return capability.promise;\n          }\n\n          sendWithStream(actionName, data, queueingStrategy, transfers) {\n            const streamId = this.streamId++,\n                  sourceName = this.sourceName,\n                  targetName = this.targetName,\n                  comObj = this.comObj;\n            return new ReadableStream({\n              start: controller => {\n                const startCapability = new _util.PromiseCapability();\n                this.streamControllers[streamId] = {\n                  controller,\n                  startCall: startCapability,\n                  pullCall: null,\n                  cancelCall: null,\n                  isClosed: false\n                };\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  action: actionName,\n                  streamId,\n                  data,\n                  desiredSize: controller.desiredSize\n                }, transfers);\n                return startCapability.promise;\n              },\n              pull: controller => {\n                const pullCapability = new _util.PromiseCapability();\n                this.streamControllers[streamId].pullCall = pullCapability;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.PULL,\n                  streamId,\n                  desiredSize: controller.desiredSize\n                });\n                return pullCapability.promise;\n              },\n              cancel: reason => {\n                (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n                const cancelCapability = new _util.PromiseCapability();\n                this.streamControllers[streamId].cancelCall = cancelCapability;\n                this.streamControllers[streamId].isClosed = true;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.CANCEL,\n                  streamId,\n                  reason: wrapReason(reason)\n                });\n                return cancelCapability.promise;\n              }\n            }, queueingStrategy);\n          }\n\n          #createStreamSink(data) {\n            const streamId = data.streamId,\n                  sourceName = this.sourceName,\n                  targetName = data.sourceName,\n                  comObj = this.comObj;\n            const self = this,\n                  action = this.actionHandler[data.action];\n            const streamSink = {\n              enqueue(chunk) {\n                let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n                let transfers = arguments.length > 2 ? arguments[2] : undefined;\n\n                if (this.isCancelled) {\n                  return;\n                }\n\n                const lastDesiredSize = this.desiredSize;\n                this.desiredSize -= size;\n\n                if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n                  this.sinkCapability = new _util.PromiseCapability();\n                  this.ready = this.sinkCapability.promise;\n                }\n\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.ENQUEUE,\n                  streamId,\n                  chunk\n                }, transfers);\n              },\n\n              close() {\n                if (this.isCancelled) {\n                  return;\n                }\n\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.CLOSE,\n                  streamId\n                });\n                delete self.streamSinks[streamId];\n              },\n\n              error(reason) {\n                (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n\n                if (this.isCancelled) {\n                  return;\n                }\n\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.ERROR,\n                  streamId,\n                  reason: wrapReason(reason)\n                });\n              },\n\n              sinkCapability: new _util.PromiseCapability(),\n              onPull: null,\n              onCancel: null,\n              isCancelled: false,\n              desiredSize: data.desiredSize,\n              ready: null\n            };\n            streamSink.sinkCapability.resolve();\n            streamSink.ready = streamSink.sinkCapability.promise;\n            this.streamSinks[streamId] = streamSink;\n            new Promise(function (resolve) {\n              resolve(action(data.data, streamSink));\n            }).then(function () {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId,\n                success: true\n              });\n            }, function (reason) {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId,\n                reason: wrapReason(reason)\n              });\n            });\n          }\n\n          #processStreamMessage(data) {\n            const streamId = data.streamId,\n                  sourceName = this.sourceName,\n                  targetName = data.sourceName,\n                  comObj = this.comObj;\n            const streamController = this.streamControllers[streamId],\n                  streamSink = this.streamSinks[streamId];\n\n            switch (data.stream) {\n              case StreamKind.START_COMPLETE:\n                if (data.success) {\n                  streamController.startCall.resolve();\n                } else {\n                  streamController.startCall.reject(wrapReason(data.reason));\n                }\n\n                break;\n\n              case StreamKind.PULL_COMPLETE:\n                if (data.success) {\n                  streamController.pullCall.resolve();\n                } else {\n                  streamController.pullCall.reject(wrapReason(data.reason));\n                }\n\n                break;\n\n              case StreamKind.PULL:\n                if (!streamSink) {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId,\n                    success: true\n                  });\n                  break;\n                }\n\n                if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n                  streamSink.sinkCapability.resolve();\n                }\n\n                streamSink.desiredSize = data.desiredSize;\n                new Promise(function (resolve) {\n                  resolve(streamSink.onPull?.());\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                break;\n\n              case StreamKind.ENQUEUE:\n                (0, _util.assert)(streamController, \"enqueue should have stream controller\");\n\n                if (streamController.isClosed) {\n                  break;\n                }\n\n                streamController.controller.enqueue(data.chunk);\n                break;\n\n              case StreamKind.CLOSE:\n                (0, _util.assert)(streamController, \"close should have stream controller\");\n\n                if (streamController.isClosed) {\n                  break;\n                }\n\n                streamController.isClosed = true;\n                streamController.controller.close();\n                this.#deleteStreamController(streamController, streamId);\n                break;\n\n              case StreamKind.ERROR:\n                (0, _util.assert)(streamController, \"error should have stream controller\");\n                streamController.controller.error(wrapReason(data.reason));\n                this.#deleteStreamController(streamController, streamId);\n                break;\n\n              case StreamKind.CANCEL_COMPLETE:\n                if (data.success) {\n                  streamController.cancelCall.resolve();\n                } else {\n                  streamController.cancelCall.reject(wrapReason(data.reason));\n                }\n\n                this.#deleteStreamController(streamController, streamId);\n                break;\n\n              case StreamKind.CANCEL:\n                if (!streamSink) {\n                  break;\n                }\n\n                new Promise(function (resolve) {\n                  resolve(streamSink.onCancel?.(wrapReason(data.reason)));\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                streamSink.sinkCapability.reject(wrapReason(data.reason));\n                streamSink.isCancelled = true;\n                delete this.streamSinks[streamId];\n                break;\n\n              default:\n                throw new Error(\"Unexpected stream case\");\n            }\n          }\n\n          async #deleteStreamController(streamController, streamId) {\n            await Promise.allSettled([streamController.startCall?.promise, streamController.pullCall?.promise, streamController.cancelCall?.promise]);\n            delete this.streamControllers[streamId];\n          }\n\n          destroy() {\n            this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n          }\n\n        }\n\n        exports.MessageHandler = MessageHandler;\n        /***/\n      },\n      /* 16 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.Metadata = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        class Metadata {\n          #metadataMap;\n          #data;\n\n          constructor(_ref34) {\n            let {\n              parsedData,\n              rawData\n            } = _ref34;\n            this.#metadataMap = parsedData;\n            this.#data = rawData;\n          }\n\n          getRaw() {\n            return this.#data;\n          }\n\n          get(name) {\n            return this.#metadataMap.get(name) ?? null;\n          }\n\n          getAll() {\n            return (0, _util.objectFromMap)(this.#metadataMap);\n          }\n\n          has(name) {\n            return this.#metadataMap.has(name);\n          }\n\n        }\n\n        exports.Metadata = Metadata;\n        /***/\n      },\n      /* 17 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.OptionalContentConfig = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _murmurhash = __w_pdfjs_require__(8);\n\n        const INTERNAL = Symbol(\"INTERNAL\");\n\n        class OptionalContentGroup {\n          #visible = true;\n\n          constructor(name, intent) {\n            this.name = name;\n            this.intent = intent;\n          }\n\n          get visible() {\n            return this.#visible;\n          }\n\n          _setVisible(internal, visible) {\n            if (internal !== INTERNAL) {\n              (0, _util.unreachable)(\"Internal method `_setVisible` called.\");\n            }\n\n            this.#visible = visible;\n          }\n\n        }\n\n        class OptionalContentConfig {\n          #cachedGetHash = null;\n          #groups = new Map();\n          #initialHash = null;\n          #order = null;\n\n          constructor(data) {\n            this.name = null;\n            this.creator = null;\n\n            if (data === null) {\n              return;\n            }\n\n            this.name = data.name;\n            this.creator = data.creator;\n            this.#order = data.order;\n\n            for (const group of data.groups) {\n              this.#groups.set(group.id, new OptionalContentGroup(group.name, group.intent));\n            }\n\n            if (data.baseState === \"OFF\") {\n              for (const group of this.#groups.values()) {\n                group._setVisible(INTERNAL, false);\n              }\n            }\n\n            for (const on of data.on) {\n              this.#groups.get(on)._setVisible(INTERNAL, true);\n            }\n\n            for (const off of data.off) {\n              this.#groups.get(off)._setVisible(INTERNAL, false);\n            }\n\n            this.#initialHash = this.getHash();\n          }\n\n          #evaluateVisibilityExpression(array) {\n            const length = array.length;\n\n            if (length < 2) {\n              return true;\n            }\n\n            const operator = array[0];\n\n            for (let i = 1; i < length; i++) {\n              const element = array[i];\n              let state;\n\n              if (Array.isArray(element)) {\n                state = this.#evaluateVisibilityExpression(element);\n              } else if (this.#groups.has(element)) {\n                state = this.#groups.get(element).visible;\n              } else {\n                (0, _util.warn)(`Optional content group not found: ${element}`);\n                return true;\n              }\n\n              switch (operator) {\n                case \"And\":\n                  if (!state) {\n                    return false;\n                  }\n\n                  break;\n\n                case \"Or\":\n                  if (state) {\n                    return true;\n                  }\n\n                  break;\n\n                case \"Not\":\n                  return !state;\n\n                default:\n                  return true;\n              }\n            }\n\n            return operator === \"And\";\n          }\n\n          isVisible(group) {\n            if (this.#groups.size === 0) {\n              return true;\n            }\n\n            if (!group) {\n              (0, _util.warn)(\"Optional content group not defined.\");\n              return true;\n            }\n\n            if (group.type === \"OCG\") {\n              if (!this.#groups.has(group.id)) {\n                (0, _util.warn)(`Optional content group not found: ${group.id}`);\n                return true;\n              }\n\n              return this.#groups.get(group.id).visible;\n            } else if (group.type === \"OCMD\") {\n              if (group.expression) {\n                return this.#evaluateVisibilityExpression(group.expression);\n              }\n\n              if (!group.policy || group.policy === \"AnyOn\") {\n                for (const id of group.ids) {\n                  if (!this.#groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n\n                  if (this.#groups.get(id).visible) {\n                    return true;\n                  }\n                }\n\n                return false;\n              } else if (group.policy === \"AllOn\") {\n                for (const id of group.ids) {\n                  if (!this.#groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n\n                  if (!this.#groups.get(id).visible) {\n                    return false;\n                  }\n                }\n\n                return true;\n              } else if (group.policy === \"AnyOff\") {\n                for (const id of group.ids) {\n                  if (!this.#groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n\n                  if (!this.#groups.get(id).visible) {\n                    return true;\n                  }\n                }\n\n                return false;\n              } else if (group.policy === \"AllOff\") {\n                for (const id of group.ids) {\n                  if (!this.#groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n\n                  if (this.#groups.get(id).visible) {\n                    return false;\n                  }\n                }\n\n                return true;\n              }\n\n              (0, _util.warn)(`Unknown optional content policy ${group.policy}.`);\n              return true;\n            }\n\n            (0, _util.warn)(`Unknown group type ${group.type}.`);\n            return true;\n          }\n\n          setVisibility(id) {\n            let visible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n            if (!this.#groups.has(id)) {\n              (0, _util.warn)(`Optional content group not found: ${id}`);\n              return;\n            }\n\n            this.#groups.get(id)._setVisible(INTERNAL, !!visible);\n\n            this.#cachedGetHash = null;\n          }\n\n          get hasInitialVisibility() {\n            return this.#initialHash === null || this.getHash() === this.#initialHash;\n          }\n\n          getOrder() {\n            if (!this.#groups.size) {\n              return null;\n            }\n\n            if (this.#order) {\n              return this.#order.slice();\n            }\n\n            return [...this.#groups.keys()];\n          }\n\n          getGroups() {\n            return this.#groups.size > 0 ? (0, _util.objectFromMap)(this.#groups) : null;\n          }\n\n          getGroup(id) {\n            return this.#groups.get(id) || null;\n          }\n\n          getHash() {\n            if (this.#cachedGetHash !== null) {\n              return this.#cachedGetHash;\n            }\n\n            const hash = new _murmurhash.MurmurHash3_64();\n\n            for (const [id, group] of this.#groups) {\n              hash.update(`${id}:${group.visible}`);\n            }\n\n            return this.#cachedGetHash = hash.hexdigest();\n          }\n\n        }\n\n        exports.OptionalContentConfig = OptionalContentConfig;\n        /***/\n      },\n      /* 18 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFDataTransportStream = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _display_utils = __w_pdfjs_require__(6);\n\n        class PDFDataTransportStream {\n          constructor(_ref35, pdfDataRangeTransport) {\n            let {\n              length,\n              initialData,\n              progressiveDone = false,\n              contentDispositionFilename = null,\n              disableRange = false,\n              disableStream = false\n            } = _ref35;\n            (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n            this._queuedChunks = [];\n            this._progressiveDone = progressiveDone;\n            this._contentDispositionFilename = contentDispositionFilename;\n\n            if (initialData?.length > 0) {\n              const buffer = initialData instanceof Uint8Array && initialData.byteLength === initialData.buffer.byteLength ? initialData.buffer : new Uint8Array(initialData).buffer;\n\n              this._queuedChunks.push(buffer);\n            }\n\n            this._pdfDataRangeTransport = pdfDataRangeTransport;\n            this._isStreamingSupported = !disableStream;\n            this._isRangeSupported = !disableRange;\n            this._contentLength = length;\n            this._fullRequestReader = null;\n            this._rangeReaders = [];\n\n            this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n              this._onReceiveData({\n                begin,\n                chunk\n              });\n            });\n\n            this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n              this._onProgress({\n                loaded,\n                total\n              });\n            });\n\n            this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n              this._onReceiveData({\n                chunk\n              });\n            });\n\n            this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n              this._onProgressiveDone();\n            });\n\n            this._pdfDataRangeTransport.transportReady();\n          }\n\n          _onReceiveData(_ref36) {\n            let {\n              begin,\n              chunk\n            } = _ref36;\n            const buffer = chunk instanceof Uint8Array && chunk.byteLength === chunk.buffer.byteLength ? chunk.buffer : new Uint8Array(chunk).buffer;\n\n            if (begin === undefined) {\n              if (this._fullRequestReader) {\n                this._fullRequestReader._enqueue(buffer);\n              } else {\n                this._queuedChunks.push(buffer);\n              }\n            } else {\n              const found = this._rangeReaders.some(function (rangeReader) {\n                if (rangeReader._begin !== begin) {\n                  return false;\n                }\n\n                rangeReader._enqueue(buffer);\n\n                return true;\n              });\n\n              (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n            }\n          }\n\n          get _progressiveDataLength() {\n            return this._fullRequestReader?._loaded ?? 0;\n          }\n\n          _onProgress(evt) {\n            if (evt.total === undefined) {\n              this._rangeReaders[0]?.onProgress?.({\n                loaded: evt.loaded\n              });\n            } else {\n              this._fullRequestReader?.onProgress?.({\n                loaded: evt.loaded,\n                total: evt.total\n              });\n            }\n          }\n\n          _onProgressiveDone() {\n            this._fullRequestReader?.progressiveDone();\n            this._progressiveDone = true;\n          }\n\n          _removeRangeReader(reader) {\n            const i = this._rangeReaders.indexOf(reader);\n\n            if (i >= 0) {\n              this._rangeReaders.splice(i, 1);\n            }\n          }\n\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n            const queuedChunks = this._queuedChunks;\n            this._queuedChunks = null;\n            return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone, this._contentDispositionFilename);\n          }\n\n          getRangeReader(begin, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n\n            const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n\n            this._pdfDataRangeTransport.requestDataRange(begin, end);\n\n            this._rangeReaders.push(reader);\n\n            return reader;\n          }\n\n          cancelAllRequests(reason) {\n            this._fullRequestReader?.cancel(reason);\n\n            for (const reader of this._rangeReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n\n            this._pdfDataRangeTransport.abort();\n          }\n\n        }\n\n        exports.PDFDataTransportStream = PDFDataTransportStream;\n\n        class PDFDataTransportStreamReader {\n          constructor(stream, queuedChunks) {\n            let progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            let contentDispositionFilename = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n            this._stream = stream;\n            this._done = progressiveDone || false;\n            this._filename = (0, _display_utils.isPdfFile)(contentDispositionFilename) ? contentDispositionFilename : null;\n            this._queuedChunks = queuedChunks || [];\n            this._loaded = 0;\n\n            for (const chunk of this._queuedChunks) {\n              this._loaded += chunk.byteLength;\n            }\n\n            this._requests = [];\n            this._headersReady = Promise.resolve();\n            stream._fullRequestReader = this;\n            this.onProgress = null;\n          }\n\n          _enqueue(chunk) {\n            if (this._done) {\n              return;\n            }\n\n            if (this._requests.length > 0) {\n              const requestCapability = this._requests.shift();\n\n              requestCapability.resolve({\n                value: chunk,\n                done: false\n              });\n            } else {\n              this._queuedChunks.push(chunk);\n            }\n\n            this._loaded += chunk.byteLength;\n          }\n\n          get headersReady() {\n            return this._headersReady;\n          }\n\n          get filename() {\n            return this._filename;\n          }\n\n          get isRangeSupported() {\n            return this._stream._isRangeSupported;\n          }\n\n          get isStreamingSupported() {\n            return this._stream._isStreamingSupported;\n          }\n\n          get contentLength() {\n            return this._stream._contentLength;\n          }\n\n          async read() {\n            if (this._queuedChunks.length > 0) {\n              const chunk = this._queuedChunks.shift();\n\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n\n            const requestCapability = new _util.PromiseCapability();\n\n            this._requests.push(requestCapability);\n\n            return requestCapability.promise;\n          }\n\n          cancel(reason) {\n            this._done = true;\n\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n\n            this._requests.length = 0;\n          }\n\n          progressiveDone() {\n            if (this._done) {\n              return;\n            }\n\n            this._done = true;\n          }\n\n        }\n\n        class PDFDataTransportStreamRangeReader {\n          constructor(stream, begin, end) {\n            this._stream = stream;\n            this._begin = begin;\n            this._end = end;\n            this._queuedChunk = null;\n            this._requests = [];\n            this._done = false;\n            this.onProgress = null;\n          }\n\n          _enqueue(chunk) {\n            if (this._done) {\n              return;\n            }\n\n            if (this._requests.length === 0) {\n              this._queuedChunk = chunk;\n            } else {\n              const requestsCapability = this._requests.shift();\n\n              requestsCapability.resolve({\n                value: chunk,\n                done: false\n              });\n\n              for (const requestCapability of this._requests) {\n                requestCapability.resolve({\n                  value: undefined,\n                  done: true\n                });\n              }\n\n              this._requests.length = 0;\n            }\n\n            this._done = true;\n\n            this._stream._removeRangeReader(this);\n          }\n\n          get isStreamingSupported() {\n            return false;\n          }\n\n          async read() {\n            if (this._queuedChunk) {\n              const chunk = this._queuedChunk;\n              this._queuedChunk = null;\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n\n            const requestCapability = new _util.PromiseCapability();\n\n            this._requests.push(requestCapability);\n\n            return requestCapability.promise;\n          }\n\n          cancel(reason) {\n            this._done = true;\n\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n\n            this._requests.length = 0;\n\n            this._stream._removeRangeReader(this);\n          }\n\n        }\n        /***/\n\n      },\n      /* 19 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFFetchStream = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _network_utils = __w_pdfjs_require__(20);\n\n        ;\n\n        function createFetchOptions(headers, withCredentials, abortController) {\n          return {\n            method: \"GET\",\n            headers,\n            signal: abortController.signal,\n            mode: \"cors\",\n            credentials: withCredentials ? \"include\" : \"same-origin\",\n            redirect: \"follow\"\n          };\n        }\n\n        function createHeaders(httpHeaders) {\n          const headers = new Headers();\n\n          for (const property in httpHeaders) {\n            const value = httpHeaders[property];\n\n            if (value === undefined) {\n              continue;\n            }\n\n            headers.append(property, value);\n          }\n\n          return headers;\n        }\n\n        function getArrayBuffer(val) {\n          if (val instanceof Uint8Array) {\n            return val.buffer;\n          }\n\n          if (val instanceof ArrayBuffer) {\n            return val;\n          }\n\n          (0, _util.warn)(`getArrayBuffer - unexpected data format: ${val}`);\n          return new Uint8Array(val).buffer;\n        }\n\n        class PDFFetchStream {\n          constructor(source) {\n            this.source = source;\n            this.isHttp = /^https?:/i.test(source.url);\n            this.httpHeaders = this.isHttp && source.httpHeaders || {};\n            this._fullRequestReader = null;\n            this._rangeRequestReaders = [];\n          }\n\n          get _progressiveDataLength() {\n            return this._fullRequestReader?._loaded ?? 0;\n          }\n\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n            this._fullRequestReader = new PDFFetchStreamReader(this);\n            return this._fullRequestReader;\n          }\n\n          getRangeReader(begin, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n\n            const reader = new PDFFetchStreamRangeReader(this, begin, end);\n\n            this._rangeRequestReaders.push(reader);\n\n            return reader;\n          }\n\n          cancelAllRequests(reason) {\n            this._fullRequestReader?.cancel(reason);\n\n            for (const reader of this._rangeRequestReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n          }\n\n        }\n\n        exports.PDFFetchStream = PDFFetchStream;\n\n        class PDFFetchStreamReader {\n          constructor(stream) {\n            this._stream = stream;\n            this._reader = null;\n            this._loaded = 0;\n            this._filename = null;\n            const source = stream.source;\n            this._withCredentials = source.withCredentials || false;\n            this._contentLength = source.length;\n            this._headersCapability = new _util.PromiseCapability();\n            this._disableRange = source.disableRange || false;\n            this._rangeChunkSize = source.rangeChunkSize;\n\n            if (!this._rangeChunkSize && !this._disableRange) {\n              this._disableRange = true;\n            }\n\n            this._abortController = new AbortController();\n            this._isStreamingSupported = !source.disableStream;\n            this._isRangeSupported = !source.disableRange;\n            this._headers = createHeaders(this._stream.httpHeaders);\n            const url = source.url;\n            fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n              if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n                throw (0, _network_utils.createResponseStatusError)(response.status, url);\n              }\n\n              this._reader = response.body.getReader();\n\n              this._headersCapability.resolve();\n\n              const getResponseHeader = name => {\n                return response.headers.get(name);\n              };\n\n              const {\n                allowRangeRequests,\n                suggestedLength\n              } = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader,\n                isHttp: this._stream.isHttp,\n                rangeChunkSize: this._rangeChunkSize,\n                disableRange: this._disableRange\n              });\n              this._isRangeSupported = allowRangeRequests;\n              this._contentLength = suggestedLength || this._contentLength;\n              this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n              if (!this._isStreamingSupported && this._isRangeSupported) {\n                this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n              }\n            }).catch(this._headersCapability.reject);\n            this.onProgress = null;\n          }\n\n          get headersReady() {\n            return this._headersCapability.promise;\n          }\n\n          get filename() {\n            return this._filename;\n          }\n\n          get contentLength() {\n            return this._contentLength;\n          }\n\n          get isRangeSupported() {\n            return this._isRangeSupported;\n          }\n\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n\n          async read() {\n            await this._headersCapability.promise;\n            const {\n              value,\n              done\n            } = await this._reader.read();\n\n            if (done) {\n              return {\n                value,\n                done\n              };\n            }\n\n            this._loaded += value.byteLength;\n            this.onProgress?.({\n              loaded: this._loaded,\n              total: this._contentLength\n            });\n            return {\n              value: getArrayBuffer(value),\n              done: false\n            };\n          }\n\n          cancel(reason) {\n            this._reader?.cancel(reason);\n\n            this._abortController.abort();\n          }\n\n        }\n\n        class PDFFetchStreamRangeReader {\n          constructor(stream, begin, end) {\n            this._stream = stream;\n            this._reader = null;\n            this._loaded = 0;\n            const source = stream.source;\n            this._withCredentials = source.withCredentials || false;\n            this._readCapability = new _util.PromiseCapability();\n            this._isStreamingSupported = !source.disableStream;\n            this._abortController = new AbortController();\n            this._headers = createHeaders(this._stream.httpHeaders);\n\n            this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n            const url = source.url;\n            fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n              if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n                throw (0, _network_utils.createResponseStatusError)(response.status, url);\n              }\n\n              this._readCapability.resolve();\n\n              this._reader = response.body.getReader();\n            }).catch(this._readCapability.reject);\n            this.onProgress = null;\n          }\n\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n\n          async read() {\n            await this._readCapability.promise;\n            const {\n              value,\n              done\n            } = await this._reader.read();\n\n            if (done) {\n              return {\n                value,\n                done\n              };\n            }\n\n            this._loaded += value.byteLength;\n            this.onProgress?.({\n              loaded: this._loaded\n            });\n            return {\n              value: getArrayBuffer(value),\n              done: false\n            };\n          }\n\n          cancel(reason) {\n            this._reader?.cancel(reason);\n\n            this._abortController.abort();\n          }\n\n        }\n        /***/\n\n      },\n      /* 20 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.createResponseStatusError = createResponseStatusError;\n        exports.extractFilenameFromHeader = extractFilenameFromHeader;\n        exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n        exports.validateResponseStatus = validateResponseStatus;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _content_disposition = __w_pdfjs_require__(21);\n\n        var _display_utils = __w_pdfjs_require__(6);\n\n        function validateRangeRequestCapabilities(_ref37) {\n          let {\n            getResponseHeader,\n            isHttp,\n            rangeChunkSize,\n            disableRange\n          } = _ref37;\n          const returnValues = {\n            allowRangeRequests: false,\n            suggestedLength: undefined\n          };\n          const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n\n          if (!Number.isInteger(length)) {\n            return returnValues;\n          }\n\n          returnValues.suggestedLength = length;\n\n          if (length <= 2 * rangeChunkSize) {\n            return returnValues;\n          }\n\n          if (disableRange || !isHttp) {\n            return returnValues;\n          }\n\n          if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n            return returnValues;\n          }\n\n          const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n\n          if (contentEncoding !== \"identity\") {\n            return returnValues;\n          }\n\n          returnValues.allowRangeRequests = true;\n          return returnValues;\n        }\n\n        function extractFilenameFromHeader(getResponseHeader) {\n          const contentDisposition = getResponseHeader(\"Content-Disposition\");\n\n          if (contentDisposition) {\n            let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n\n            if (filename.includes(\"%\")) {\n              try {\n                filename = decodeURIComponent(filename);\n              } catch {}\n            }\n\n            if ((0, _display_utils.isPdfFile)(filename)) {\n              return filename;\n            }\n          }\n\n          return null;\n        }\n\n        function createResponseStatusError(status, url) {\n          if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n            return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n          }\n\n          return new _util.UnexpectedResponseException(`Unexpected server response (${status}) while retrieving PDF \"${url}\".`, status);\n        }\n\n        function validateResponseStatus(status) {\n          return status === 200 || status === 206;\n        }\n        /***/\n\n      },\n      /* 21 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n\n        var _util = __w_pdfjs_require__(1);\n\n        function getFilenameFromContentDispositionHeader(contentDisposition) {\n          let needsEncodingFixup = true;\n          let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n\n          if (tmp) {\n            tmp = tmp[1];\n            let filename = rfc2616unquote(tmp);\n            filename = unescape(filename);\n            filename = rfc5987decode(filename);\n            filename = rfc2047decode(filename);\n            return fixupEncoding(filename);\n          }\n\n          tmp = rfc2231getparam(contentDisposition);\n\n          if (tmp) {\n            const filename = rfc2047decode(tmp);\n            return fixupEncoding(filename);\n          }\n\n          tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n\n          if (tmp) {\n            tmp = tmp[1];\n            let filename = rfc2616unquote(tmp);\n            filename = rfc2047decode(filename);\n            return fixupEncoding(filename);\n          }\n\n          function toParamRegExp(attributePattern, flags) {\n            return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n          }\n\n          function textdecode(encoding, value) {\n            if (encoding) {\n              if (!/^[\\x00-\\xFF]+$/.test(value)) {\n                return value;\n              }\n\n              try {\n                const decoder = new TextDecoder(encoding, {\n                  fatal: true\n                });\n                const buffer = (0, _util.stringToBytes)(value);\n                value = decoder.decode(buffer);\n                needsEncodingFixup = false;\n              } catch {}\n            }\n\n            return value;\n          }\n\n          function fixupEncoding(value) {\n            if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n              value = textdecode(\"utf-8\", value);\n\n              if (needsEncodingFixup) {\n                value = textdecode(\"iso-8859-1\", value);\n              }\n            }\n\n            return value;\n          }\n\n          function rfc2231getparam(contentDispositionStr) {\n            const matches = [];\n            let match;\n            const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n\n            while ((match = iter.exec(contentDispositionStr)) !== null) {\n              let [, n, quot, part] = match;\n              n = parseInt(n, 10);\n\n              if (n in matches) {\n                if (n === 0) {\n                  break;\n                }\n\n                continue;\n              }\n\n              matches[n] = [quot, part];\n            }\n\n            const parts = [];\n\n            for (let n = 0; n < matches.length; ++n) {\n              if (!(n in matches)) {\n                break;\n              }\n\n              let [quot, part] = matches[n];\n              part = rfc2616unquote(part);\n\n              if (quot) {\n                part = unescape(part);\n\n                if (n === 0) {\n                  part = rfc5987decode(part);\n                }\n              }\n\n              parts.push(part);\n            }\n\n            return parts.join(\"\");\n          }\n\n          function rfc2616unquote(value) {\n            if (value.startsWith('\"')) {\n              const parts = value.slice(1).split('\\\\\"');\n\n              for (let i = 0; i < parts.length; ++i) {\n                const quotindex = parts[i].indexOf('\"');\n\n                if (quotindex !== -1) {\n                  parts[i] = parts[i].slice(0, quotindex);\n                  parts.length = i + 1;\n                }\n\n                parts[i] = parts[i].replaceAll(/\\\\(.)/g, \"$1\");\n              }\n\n              value = parts.join('\"');\n            }\n\n            return value;\n          }\n\n          function rfc5987decode(extvalue) {\n            const encodingend = extvalue.indexOf(\"'\");\n\n            if (encodingend === -1) {\n              return extvalue;\n            }\n\n            const encoding = extvalue.slice(0, encodingend);\n            const langvalue = extvalue.slice(encodingend + 1);\n            const value = langvalue.replace(/^[^']*'/, \"\");\n            return textdecode(encoding, value);\n          }\n\n          function rfc2047decode(value) {\n            if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n              return value;\n            }\n\n            return value.replaceAll(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n              if (encoding === \"q\" || encoding === \"Q\") {\n                text = text.replaceAll(\"_\", \" \");\n                text = text.replaceAll(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n                  return String.fromCharCode(parseInt(hex, 16));\n                });\n                return textdecode(charset, text);\n              }\n\n              try {\n                text = atob(text);\n              } catch {}\n\n              return textdecode(charset, text);\n            });\n          }\n\n          return \"\";\n        }\n        /***/\n\n      },\n      /* 22 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFNetworkStream = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _network_utils = __w_pdfjs_require__(20);\n\n        ;\n        const OK_RESPONSE = 200;\n        const PARTIAL_CONTENT_RESPONSE = 206;\n\n        function getArrayBuffer(xhr) {\n          const data = xhr.response;\n\n          if (typeof data !== \"string\") {\n            return data;\n          }\n\n          return (0, _util.stringToBytes)(data).buffer;\n        }\n\n        class NetworkManager {\n          constructor(url) {\n            let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            this.url = url;\n            this.isHttp = /^https?:/i.test(url);\n            this.httpHeaders = this.isHttp && args.httpHeaders || Object.create(null);\n            this.withCredentials = args.withCredentials || false;\n            this.currXhrId = 0;\n            this.pendingRequests = Object.create(null);\n          }\n\n          requestRange(begin, end, listeners) {\n            const args = {\n              begin,\n              end\n            };\n\n            for (const prop in listeners) {\n              args[prop] = listeners[prop];\n            }\n\n            return this.request(args);\n          }\n\n          requestFull(listeners) {\n            return this.request(listeners);\n          }\n\n          request(args) {\n            const xhr = new XMLHttpRequest();\n            const xhrId = this.currXhrId++;\n            const pendingRequest = this.pendingRequests[xhrId] = {\n              xhr\n            };\n            xhr.open(\"GET\", this.url);\n            xhr.withCredentials = this.withCredentials;\n\n            for (const property in this.httpHeaders) {\n              const value = this.httpHeaders[property];\n\n              if (value === undefined) {\n                continue;\n              }\n\n              xhr.setRequestHeader(property, value);\n            }\n\n            if (this.isHttp && \"begin\" in args && \"end\" in args) {\n              xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n              pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n            } else {\n              pendingRequest.expectedStatus = OK_RESPONSE;\n            }\n\n            xhr.responseType = \"arraybuffer\";\n\n            if (args.onError) {\n              xhr.onerror = function (evt) {\n                args.onError(xhr.status);\n              };\n            }\n\n            xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n            xhr.onprogress = this.onProgress.bind(this, xhrId);\n            pendingRequest.onHeadersReceived = args.onHeadersReceived;\n            pendingRequest.onDone = args.onDone;\n            pendingRequest.onError = args.onError;\n            pendingRequest.onProgress = args.onProgress;\n            xhr.send(null);\n            return xhrId;\n          }\n\n          onProgress(xhrId, evt) {\n            const pendingRequest = this.pendingRequests[xhrId];\n\n            if (!pendingRequest) {\n              return;\n            }\n\n            pendingRequest.onProgress?.(evt);\n          }\n\n          onStateChange(xhrId, evt) {\n            const pendingRequest = this.pendingRequests[xhrId];\n\n            if (!pendingRequest) {\n              return;\n            }\n\n            const xhr = pendingRequest.xhr;\n\n            if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n              pendingRequest.onHeadersReceived();\n              delete pendingRequest.onHeadersReceived;\n            }\n\n            if (xhr.readyState !== 4) {\n              return;\n            }\n\n            if (!(xhrId in this.pendingRequests)) {\n              return;\n            }\n\n            delete this.pendingRequests[xhrId];\n\n            if (xhr.status === 0 && this.isHttp) {\n              pendingRequest.onError?.(xhr.status);\n              return;\n            }\n\n            const xhrStatus = xhr.status || OK_RESPONSE;\n            const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n            if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n              pendingRequest.onError?.(xhr.status);\n              return;\n            }\n\n            const chunk = getArrayBuffer(xhr);\n\n            if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n              const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n              const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n              pendingRequest.onDone({\n                begin: parseInt(matches[1], 10),\n                chunk\n              });\n            } else if (chunk) {\n              pendingRequest.onDone({\n                begin: 0,\n                chunk\n              });\n            } else {\n              pendingRequest.onError?.(xhr.status);\n            }\n          }\n\n          getRequestXhr(xhrId) {\n            return this.pendingRequests[xhrId].xhr;\n          }\n\n          isPendingRequest(xhrId) {\n            return xhrId in this.pendingRequests;\n          }\n\n          abortRequest(xhrId) {\n            const xhr = this.pendingRequests[xhrId].xhr;\n            delete this.pendingRequests[xhrId];\n            xhr.abort();\n          }\n\n        }\n\n        class PDFNetworkStream {\n          constructor(source) {\n            this._source = source;\n            this._manager = new NetworkManager(source.url, {\n              httpHeaders: source.httpHeaders,\n              withCredentials: source.withCredentials\n            });\n            this._rangeChunkSize = source.rangeChunkSize;\n            this._fullRequestReader = null;\n            this._rangeRequestReaders = [];\n          }\n\n          _onRangeRequestReaderClosed(reader) {\n            const i = this._rangeRequestReaders.indexOf(reader);\n\n            if (i >= 0) {\n              this._rangeRequestReaders.splice(i, 1);\n            }\n          }\n\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n            this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n            return this._fullRequestReader;\n          }\n\n          getRangeReader(begin, end) {\n            const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n            reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n\n            this._rangeRequestReaders.push(reader);\n\n            return reader;\n          }\n\n          cancelAllRequests(reason) {\n            this._fullRequestReader?.cancel(reason);\n\n            for (const reader of this._rangeRequestReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n          }\n\n        }\n\n        exports.PDFNetworkStream = PDFNetworkStream;\n\n        class PDFNetworkStreamFullRequestReader {\n          constructor(manager, source) {\n            this._manager = manager;\n            const args = {\n              onHeadersReceived: this._onHeadersReceived.bind(this),\n              onDone: this._onDone.bind(this),\n              onError: this._onError.bind(this),\n              onProgress: this._onProgress.bind(this)\n            };\n            this._url = source.url;\n            this._fullRequestId = manager.requestFull(args);\n            this._headersReceivedCapability = new _util.PromiseCapability();\n            this._disableRange = source.disableRange || false;\n            this._contentLength = source.length;\n            this._rangeChunkSize = source.rangeChunkSize;\n\n            if (!this._rangeChunkSize && !this._disableRange) {\n              this._disableRange = true;\n            }\n\n            this._isStreamingSupported = false;\n            this._isRangeSupported = false;\n            this._cachedChunks = [];\n            this._requests = [];\n            this._done = false;\n            this._storedError = undefined;\n            this._filename = null;\n            this.onProgress = null;\n          }\n\n          _onHeadersReceived() {\n            const fullRequestXhrId = this._fullRequestId;\n\n            const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n            const getResponseHeader = name => {\n              return fullRequestXhr.getResponseHeader(name);\n            };\n\n            const {\n              allowRangeRequests,\n              suggestedLength\n            } = (0, _network_utils.validateRangeRequestCapabilities)({\n              getResponseHeader,\n              isHttp: this._manager.isHttp,\n              rangeChunkSize: this._rangeChunkSize,\n              disableRange: this._disableRange\n            });\n\n            if (allowRangeRequests) {\n              this._isRangeSupported = true;\n            }\n\n            this._contentLength = suggestedLength || this._contentLength;\n            this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n            if (this._isRangeSupported) {\n              this._manager.abortRequest(fullRequestXhrId);\n            }\n\n            this._headersReceivedCapability.resolve();\n          }\n\n          _onDone(data) {\n            if (data) {\n              if (this._requests.length > 0) {\n                const requestCapability = this._requests.shift();\n\n                requestCapability.resolve({\n                  value: data.chunk,\n                  done: false\n                });\n              } else {\n                this._cachedChunks.push(data.chunk);\n              }\n            }\n\n            this._done = true;\n\n            if (this._cachedChunks.length > 0) {\n              return;\n            }\n\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n\n            this._requests.length = 0;\n          }\n\n          _onError(status) {\n            this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n\n            this._headersReceivedCapability.reject(this._storedError);\n\n            for (const requestCapability of this._requests) {\n              requestCapability.reject(this._storedError);\n            }\n\n            this._requests.length = 0;\n            this._cachedChunks.length = 0;\n          }\n\n          _onProgress(evt) {\n            this.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.lengthComputable ? evt.total : this._contentLength\n            });\n          }\n\n          get filename() {\n            return this._filename;\n          }\n\n          get isRangeSupported() {\n            return this._isRangeSupported;\n          }\n\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n\n          get contentLength() {\n            return this._contentLength;\n          }\n\n          get headersReady() {\n            return this._headersReceivedCapability.promise;\n          }\n\n          async read() {\n            if (this._storedError) {\n              throw this._storedError;\n            }\n\n            if (this._cachedChunks.length > 0) {\n              const chunk = this._cachedChunks.shift();\n\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n\n            const requestCapability = new _util.PromiseCapability();\n\n            this._requests.push(requestCapability);\n\n            return requestCapability.promise;\n          }\n\n          cancel(reason) {\n            this._done = true;\n\n            this._headersReceivedCapability.reject(reason);\n\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n\n            this._requests.length = 0;\n\n            if (this._manager.isPendingRequest(this._fullRequestId)) {\n              this._manager.abortRequest(this._fullRequestId);\n            }\n\n            this._fullRequestReader = null;\n          }\n\n        }\n\n        class PDFNetworkStreamRangeRequestReader {\n          constructor(manager, begin, end) {\n            this._manager = manager;\n            const args = {\n              onDone: this._onDone.bind(this),\n              onError: this._onError.bind(this),\n              onProgress: this._onProgress.bind(this)\n            };\n            this._url = manager.url;\n            this._requestId = manager.requestRange(begin, end, args);\n            this._requests = [];\n            this._queuedChunk = null;\n            this._done = false;\n            this._storedError = undefined;\n            this.onProgress = null;\n            this.onClosed = null;\n          }\n\n          _close() {\n            this.onClosed?.(this);\n          }\n\n          _onDone(data) {\n            const chunk = data.chunk;\n\n            if (this._requests.length > 0) {\n              const requestCapability = this._requests.shift();\n\n              requestCapability.resolve({\n                value: chunk,\n                done: false\n              });\n            } else {\n              this._queuedChunk = chunk;\n            }\n\n            this._done = true;\n\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n\n            this._requests.length = 0;\n\n            this._close();\n          }\n\n          _onError(status) {\n            this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n\n            for (const requestCapability of this._requests) {\n              requestCapability.reject(this._storedError);\n            }\n\n            this._requests.length = 0;\n            this._queuedChunk = null;\n          }\n\n          _onProgress(evt) {\n            if (!this.isStreamingSupported) {\n              this.onProgress?.({\n                loaded: evt.loaded\n              });\n            }\n          }\n\n          get isStreamingSupported() {\n            return false;\n          }\n\n          async read() {\n            if (this._storedError) {\n              throw this._storedError;\n            }\n\n            if (this._queuedChunk !== null) {\n              const chunk = this._queuedChunk;\n              this._queuedChunk = null;\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n\n            const requestCapability = new _util.PromiseCapability();\n\n            this._requests.push(requestCapability);\n\n            return requestCapability.promise;\n          }\n\n          cancel(reason) {\n            this._done = true;\n\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n\n            this._requests.length = 0;\n\n            if (this._manager.isPendingRequest(this._requestId)) {\n              this._manager.abortRequest(this._requestId);\n            }\n\n            this._close();\n          }\n\n        }\n        /***/\n\n      },\n      /* 23 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFNodeStream = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _network_utils = __w_pdfjs_require__(20);\n\n        ;\n        const fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\n        function parseUrl(sourceUrl) {\n          const url = require(\"url\");\n\n          const parsedUrl = url.parse(sourceUrl);\n\n          if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n            return parsedUrl;\n          }\n\n          if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n            return url.parse(`file:///${sourceUrl}`);\n          }\n\n          if (!parsedUrl.host) {\n            parsedUrl.protocol = \"file:\";\n          }\n\n          return parsedUrl;\n        }\n\n        class PDFNodeStream {\n          constructor(source) {\n            this.source = source;\n            this.url = parseUrl(source.url);\n            this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n            this.isFsUrl = this.url.protocol === \"file:\";\n            this.httpHeaders = this.isHttp && source.httpHeaders || {};\n            this._fullRequestReader = null;\n            this._rangeRequestReaders = [];\n          }\n\n          get _progressiveDataLength() {\n            return this._fullRequestReader?._loaded ?? 0;\n          }\n\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n            this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n            return this._fullRequestReader;\n          }\n\n          getRangeReader(start, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n\n            const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n\n            this._rangeRequestReaders.push(rangeReader);\n\n            return rangeReader;\n          }\n\n          cancelAllRequests(reason) {\n            this._fullRequestReader?.cancel(reason);\n\n            for (const reader of this._rangeRequestReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n          }\n\n        }\n\n        exports.PDFNodeStream = PDFNodeStream;\n\n        class BaseFullReader {\n          constructor(stream) {\n            this._url = stream.url;\n            this._done = false;\n            this._storedError = null;\n            this.onProgress = null;\n            const source = stream.source;\n            this._contentLength = source.length;\n            this._loaded = 0;\n            this._filename = null;\n            this._disableRange = source.disableRange || false;\n            this._rangeChunkSize = source.rangeChunkSize;\n\n            if (!this._rangeChunkSize && !this._disableRange) {\n              this._disableRange = true;\n            }\n\n            this._isStreamingSupported = !source.disableStream;\n            this._isRangeSupported = !source.disableRange;\n            this._readableStream = null;\n            this._readCapability = new _util.PromiseCapability();\n            this._headersCapability = new _util.PromiseCapability();\n          }\n\n          get headersReady() {\n            return this._headersCapability.promise;\n          }\n\n          get filename() {\n            return this._filename;\n          }\n\n          get contentLength() {\n            return this._contentLength;\n          }\n\n          get isRangeSupported() {\n            return this._isRangeSupported;\n          }\n\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n\n          async read() {\n            await this._readCapability.promise;\n\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n\n            if (this._storedError) {\n              throw this._storedError;\n            }\n\n            const chunk = this._readableStream.read();\n\n            if (chunk === null) {\n              this._readCapability = new _util.PromiseCapability();\n              return this.read();\n            }\n\n            this._loaded += chunk.length;\n            this.onProgress?.({\n              loaded: this._loaded,\n              total: this._contentLength\n            });\n            const buffer = new Uint8Array(chunk).buffer;\n            return {\n              value: buffer,\n              done: false\n            };\n          }\n\n          cancel(reason) {\n            if (!this._readableStream) {\n              this._error(reason);\n\n              return;\n            }\n\n            this._readableStream.destroy(reason);\n          }\n\n          _error(reason) {\n            this._storedError = reason;\n\n            this._readCapability.resolve();\n          }\n\n          _setReadableStream(readableStream) {\n            this._readableStream = readableStream;\n            readableStream.on(\"readable\", () => {\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"end\", () => {\n              readableStream.destroy();\n              this._done = true;\n\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"error\", reason => {\n              this._error(reason);\n            });\n\n            if (!this._isStreamingSupported && this._isRangeSupported) {\n              this._error(new _util.AbortException(\"streaming is disabled\"));\n            }\n\n            if (this._storedError) {\n              this._readableStream.destroy(this._storedError);\n            }\n          }\n\n        }\n\n        class BaseRangeReader {\n          constructor(stream) {\n            this._url = stream.url;\n            this._done = false;\n            this._storedError = null;\n            this.onProgress = null;\n            this._loaded = 0;\n            this._readableStream = null;\n            this._readCapability = new _util.PromiseCapability();\n            const source = stream.source;\n            this._isStreamingSupported = !source.disableStream;\n          }\n\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n\n          async read() {\n            await this._readCapability.promise;\n\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n\n            if (this._storedError) {\n              throw this._storedError;\n            }\n\n            const chunk = this._readableStream.read();\n\n            if (chunk === null) {\n              this._readCapability = new _util.PromiseCapability();\n              return this.read();\n            }\n\n            this._loaded += chunk.length;\n            this.onProgress?.({\n              loaded: this._loaded\n            });\n            const buffer = new Uint8Array(chunk).buffer;\n            return {\n              value: buffer,\n              done: false\n            };\n          }\n\n          cancel(reason) {\n            if (!this._readableStream) {\n              this._error(reason);\n\n              return;\n            }\n\n            this._readableStream.destroy(reason);\n          }\n\n          _error(reason) {\n            this._storedError = reason;\n\n            this._readCapability.resolve();\n          }\n\n          _setReadableStream(readableStream) {\n            this._readableStream = readableStream;\n            readableStream.on(\"readable\", () => {\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"end\", () => {\n              readableStream.destroy();\n              this._done = true;\n\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"error\", reason => {\n              this._error(reason);\n            });\n\n            if (this._storedError) {\n              this._readableStream.destroy(this._storedError);\n            }\n          }\n\n        }\n\n        function createRequestOptions(parsedUrl, headers) {\n          return {\n            protocol: parsedUrl.protocol,\n            auth: parsedUrl.auth,\n            host: parsedUrl.hostname,\n            port: parsedUrl.port,\n            path: parsedUrl.path,\n            method: \"GET\",\n            headers\n          };\n        }\n\n        class PDFNodeStreamFullReader extends BaseFullReader {\n          constructor(stream) {\n            super(stream);\n\n            const handleResponse = response => {\n              if (response.statusCode === 404) {\n                const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n                this._storedError = error;\n\n                this._headersCapability.reject(error);\n\n                return;\n              }\n\n              this._headersCapability.resolve();\n\n              this._setReadableStream(response);\n\n              const getResponseHeader = name => {\n                return this._readableStream.headers[name.toLowerCase()];\n              };\n\n              const {\n                allowRangeRequests,\n                suggestedLength\n              } = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader,\n                isHttp: stream.isHttp,\n                rangeChunkSize: this._rangeChunkSize,\n                disableRange: this._disableRange\n              });\n              this._isRangeSupported = allowRangeRequests;\n              this._contentLength = suggestedLength || this._contentLength;\n              this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n            };\n\n            this._request = null;\n\n            if (this._url.protocol === \"http:\") {\n              const http = require(\"http\");\n\n              this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n            } else {\n              const https = require(\"https\");\n\n              this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n            }\n\n            this._request.on(\"error\", reason => {\n              this._storedError = reason;\n\n              this._headersCapability.reject(reason);\n            });\n\n            this._request.end();\n          }\n\n        }\n\n        class PDFNodeStreamRangeReader extends BaseRangeReader {\n          constructor(stream, start, end) {\n            super(stream);\n            this._httpHeaders = {};\n\n            for (const property in stream.httpHeaders) {\n              const value = stream.httpHeaders[property];\n\n              if (value === undefined) {\n                continue;\n              }\n\n              this._httpHeaders[property] = value;\n            }\n\n            this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n            const handleResponse = response => {\n              if (response.statusCode === 404) {\n                const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n                this._storedError = error;\n                return;\n              }\n\n              this._setReadableStream(response);\n            };\n\n            this._request = null;\n\n            if (this._url.protocol === \"http:\") {\n              const http = require(\"http\");\n\n              this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n            } else {\n              const https = require(\"https\");\n\n              this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n            }\n\n            this._request.on(\"error\", reason => {\n              this._storedError = reason;\n            });\n\n            this._request.end();\n          }\n\n        }\n\n        class PDFNodeStreamFsFullReader extends BaseFullReader {\n          constructor(stream) {\n            super(stream);\n            let path = decodeURIComponent(this._url.path);\n\n            if (fileUriRegex.test(this._url.href)) {\n              path = path.replace(/^\\//, \"\");\n            }\n\n            const fs = require(\"fs\");\n\n            fs.lstat(path, (error, stat) => {\n              if (error) {\n                if (error.code === \"ENOENT\") {\n                  error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n                }\n\n                this._storedError = error;\n\n                this._headersCapability.reject(error);\n\n                return;\n              }\n\n              this._contentLength = stat.size;\n\n              this._setReadableStream(fs.createReadStream(path));\n\n              this._headersCapability.resolve();\n            });\n          }\n\n        }\n\n        class PDFNodeStreamFsRangeReader extends BaseRangeReader {\n          constructor(stream, start, end) {\n            super(stream);\n            let path = decodeURIComponent(this._url.path);\n\n            if (fileUriRegex.test(this._url.href)) {\n              path = path.replace(/^\\//, \"\");\n            }\n\n            const fs = require(\"fs\");\n\n            this._setReadableStream(fs.createReadStream(path, {\n              start,\n              end: end - 1\n            }));\n          }\n\n        }\n        /***/\n\n      },\n      /* 24 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.SVGGraphics = void 0;\n\n        var _display_utils = __w_pdfjs_require__(6);\n\n        var _util = __w_pdfjs_require__(1);\n\n        ;\n        const SVG_DEFAULTS = {\n          fontStyle: \"normal\",\n          fontWeight: \"normal\",\n          fillColor: \"#000000\"\n        };\n        const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n        const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n        const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n        const createObjectURL = function (data) {\n          let contentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n          let forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n          if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n            return URL.createObjectURL(new Blob([data], {\n              type: contentType\n            }));\n          }\n\n          const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n          let buffer = `data:${contentType};base64,`;\n\n          for (let i = 0, ii = data.length; i < ii; i += 3) {\n            const b1 = data[i] & 0xff;\n            const b2 = data[i + 1] & 0xff;\n            const b3 = data[i + 2] & 0xff;\n            const d1 = b1 >> 2,\n                  d2 = (b1 & 3) << 4 | b2 >> 4;\n            const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n            const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n            buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n          }\n\n          return buffer;\n        };\n\n        const convertImgDataToPng = function () {\n          const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n          const CHUNK_WRAPPER_SIZE = 12;\n          const crcTable = new Int32Array(256);\n\n          for (let i = 0; i < 256; i++) {\n            let c = i;\n\n            for (let h = 0; h < 8; h++) {\n              c = c & 1 ? 0xedb88320 ^ c >> 1 & 0x7fffffff : c >> 1 & 0x7fffffff;\n            }\n\n            crcTable[i] = c;\n          }\n\n          function crc32(data, start, end) {\n            let crc = -1;\n\n            for (let i = start; i < end; i++) {\n              const a = (crc ^ data[i]) & 0xff;\n              const b = crcTable[a];\n              crc = crc >>> 8 ^ b;\n            }\n\n            return crc ^ -1;\n          }\n\n          function writePngChunk(type, body, data, offset) {\n            let p = offset;\n            const len = body.length;\n            data[p] = len >> 24 & 0xff;\n            data[p + 1] = len >> 16 & 0xff;\n            data[p + 2] = len >> 8 & 0xff;\n            data[p + 3] = len & 0xff;\n            p += 4;\n            data[p] = type.charCodeAt(0) & 0xff;\n            data[p + 1] = type.charCodeAt(1) & 0xff;\n            data[p + 2] = type.charCodeAt(2) & 0xff;\n            data[p + 3] = type.charCodeAt(3) & 0xff;\n            p += 4;\n            data.set(body, p);\n            p += body.length;\n            const crc = crc32(data, offset + 4, p);\n            data[p] = crc >> 24 & 0xff;\n            data[p + 1] = crc >> 16 & 0xff;\n            data[p + 2] = crc >> 8 & 0xff;\n            data[p + 3] = crc & 0xff;\n          }\n\n          function adler32(data, start, end) {\n            let a = 1;\n            let b = 0;\n\n            for (let i = start; i < end; ++i) {\n              a = (a + (data[i] & 0xff)) % 65521;\n              b = (b + a) % 65521;\n            }\n\n            return b << 16 | a;\n          }\n\n          function deflateSync(literals) {\n            if (!_util.isNodeJS) {\n              return deflateSyncUncompressed(literals);\n            }\n\n            try {\n              const input = parseInt(process.versions.node) >= 8 ? literals : Buffer.from(literals);\n\n              const output = require(\"zlib\").deflateSync(input, {\n                level: 9\n              });\n\n              return output instanceof Uint8Array ? output : new Uint8Array(output);\n            } catch (e) {\n              (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n            }\n\n            return deflateSyncUncompressed(literals);\n          }\n\n          function deflateSyncUncompressed(literals) {\n            let len = literals.length;\n            const maxBlockLength = 0xffff;\n            const deflateBlocks = Math.ceil(len / maxBlockLength);\n            const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n            let pi = 0;\n            idat[pi++] = 0x78;\n            idat[pi++] = 0x9c;\n            let pos = 0;\n\n            while (len > maxBlockLength) {\n              idat[pi++] = 0x00;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0x00;\n              idat[pi++] = 0x00;\n              idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n              pi += maxBlockLength;\n              pos += maxBlockLength;\n              len -= maxBlockLength;\n            }\n\n            idat[pi++] = 0x01;\n            idat[pi++] = len & 0xff;\n            idat[pi++] = len >> 8 & 0xff;\n            idat[pi++] = ~len & 0xffff & 0xff;\n            idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n            idat.set(literals.subarray(pos), pi);\n            pi += literals.length - pos;\n            const adler = adler32(literals, 0, literals.length);\n            idat[pi++] = adler >> 24 & 0xff;\n            idat[pi++] = adler >> 16 & 0xff;\n            idat[pi++] = adler >> 8 & 0xff;\n            idat[pi++] = adler & 0xff;\n            return idat;\n          }\n\n          function encode(imgData, kind, forceDataSchema, isMask) {\n            const width = imgData.width;\n            const height = imgData.height;\n            let bitDepth, colorType, lineSize;\n            const bytes = imgData.data;\n\n            switch (kind) {\n              case _util.ImageKind.GRAYSCALE_1BPP:\n                colorType = 0;\n                bitDepth = 1;\n                lineSize = width + 7 >> 3;\n                break;\n\n              case _util.ImageKind.RGB_24BPP:\n                colorType = 2;\n                bitDepth = 8;\n                lineSize = width * 3;\n                break;\n\n              case _util.ImageKind.RGBA_32BPP:\n                colorType = 6;\n                bitDepth = 8;\n                lineSize = width * 4;\n                break;\n\n              default:\n                throw new Error(\"invalid format\");\n            }\n\n            const literals = new Uint8Array((1 + lineSize) * height);\n            let offsetLiterals = 0,\n                offsetBytes = 0;\n\n            for (let y = 0; y < height; ++y) {\n              literals[offsetLiterals++] = 0;\n              literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n              offsetBytes += lineSize;\n              offsetLiterals += lineSize;\n            }\n\n            if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n              offsetLiterals = 0;\n\n              for (let y = 0; y < height; y++) {\n                offsetLiterals++;\n\n                for (let i = 0; i < lineSize; i++) {\n                  literals[offsetLiterals++] ^= 0xff;\n                }\n              }\n            }\n\n            const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n            const idat = deflateSync(literals);\n            const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n            const data = new Uint8Array(pngLength);\n            let offset = 0;\n            data.set(PNG_HEADER, offset);\n            offset += PNG_HEADER.length;\n            writePngChunk(\"IHDR\", ihdr, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n            writePngChunk(\"IDATA\", idat, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + idat.length;\n            writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n            return createObjectURL(data, \"image/png\", forceDataSchema);\n          }\n\n          return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n            const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n            return encode(imgData, kind, forceDataSchema, isMask);\n          };\n        }();\n\n        class SVGExtraState {\n          constructor() {\n            this.fontSizeScale = 1;\n            this.fontWeight = SVG_DEFAULTS.fontWeight;\n            this.fontSize = 0;\n            this.textMatrix = _util.IDENTITY_MATRIX;\n            this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n            this.leading = 0;\n            this.textRenderingMode = _util.TextRenderingMode.FILL;\n            this.textMatrixScale = 1;\n            this.x = 0;\n            this.y = 0;\n            this.lineX = 0;\n            this.lineY = 0;\n            this.charSpacing = 0;\n            this.wordSpacing = 0;\n            this.textHScale = 1;\n            this.textRise = 0;\n            this.fillColor = SVG_DEFAULTS.fillColor;\n            this.strokeColor = \"#000000\";\n            this.fillAlpha = 1;\n            this.strokeAlpha = 1;\n            this.lineWidth = 1;\n            this.lineJoin = \"\";\n            this.lineCap = \"\";\n            this.miterLimit = 0;\n            this.dashArray = [];\n            this.dashPhase = 0;\n            this.dependencies = [];\n            this.activeClipUrl = null;\n            this.clipGroup = null;\n            this.maskId = \"\";\n          }\n\n          clone() {\n            return Object.create(this);\n          }\n\n          setCurrentPoint(x, y) {\n            this.x = x;\n            this.y = y;\n          }\n\n        }\n\n        function opListToTree(opList) {\n          let opTree = [];\n          const tmp = [];\n\n          for (const opListElement of opList) {\n            if (opListElement.fn === \"save\") {\n              opTree.push({\n                fnId: 92,\n                fn: \"group\",\n                items: []\n              });\n              tmp.push(opTree);\n              opTree = opTree.at(-1).items;\n              continue;\n            }\n\n            if (opListElement.fn === \"restore\") {\n              opTree = tmp.pop();\n            } else {\n              opTree.push(opListElement);\n            }\n          }\n\n          return opTree;\n        }\n\n        function pf(value) {\n          if (Number.isInteger(value)) {\n            return value.toString();\n          }\n\n          const s = value.toFixed(10);\n          let i = s.length - 1;\n\n          if (s[i] !== \"0\") {\n            return s;\n          }\n\n          do {\n            i--;\n          } while (s[i] === \"0\");\n\n          return s.substring(0, s[i] === \".\" ? i : i + 1);\n        }\n\n        function pm(m) {\n          if (m[4] === 0 && m[5] === 0) {\n            if (m[1] === 0 && m[2] === 0) {\n              if (m[0] === 1 && m[3] === 1) {\n                return \"\";\n              }\n\n              return `scale(${pf(m[0])} ${pf(m[3])})`;\n            }\n\n            if (m[0] === m[3] && m[1] === -m[2]) {\n              const a = Math.acos(m[0]) * 180 / Math.PI;\n              return `rotate(${pf(a)})`;\n            }\n          } else if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n            return `translate(${pf(m[4])} ${pf(m[5])})`;\n          }\n\n          return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n        }\n\n        let clipCount = 0;\n        let maskCount = 0;\n        let shadingCount = 0;\n\n        class SVGGraphics {\n          constructor(commonObjs, objs) {\n            let forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            (0, _display_utils.deprecated)(\"The SVG back-end is no longer maintained and *may* be removed in the future.\");\n            this.svgFactory = new _display_utils.DOMSVGFactory();\n            this.current = new SVGExtraState();\n            this.transformMatrix = _util.IDENTITY_MATRIX;\n            this.transformStack = [];\n            this.extraStack = [];\n            this.commonObjs = commonObjs;\n            this.objs = objs;\n            this.pendingClip = null;\n            this.pendingEOFill = false;\n            this.embedFonts = false;\n            this.embeddedFonts = Object.create(null);\n            this.cssStyle = null;\n            this.forceDataSchema = !!forceDataSchema;\n            this._operatorIdMapping = [];\n\n            for (const op in _util.OPS) {\n              this._operatorIdMapping[_util.OPS[op]] = op;\n            }\n          }\n\n          getObject(data) {\n            let fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            if (typeof data === \"string\") {\n              return data.startsWith(\"g_\") ? this.commonObjs.get(data) : this.objs.get(data);\n            }\n\n            return fallback;\n          }\n\n          save() {\n            this.transformStack.push(this.transformMatrix);\n            const old = this.current;\n            this.extraStack.push(old);\n            this.current = old.clone();\n          }\n\n          restore() {\n            this.transformMatrix = this.transformStack.pop();\n            this.current = this.extraStack.pop();\n            this.pendingClip = null;\n            this.tgrp = null;\n          }\n\n          group(items) {\n            this.save();\n            this.executeOpTree(items);\n            this.restore();\n          }\n\n          loadDependencies(operatorList) {\n            const fnArray = operatorList.fnArray;\n            const argsArray = operatorList.argsArray;\n\n            for (let i = 0, ii = fnArray.length; i < ii; i++) {\n              if (fnArray[i] !== _util.OPS.dependency) {\n                continue;\n              }\n\n              for (const obj of argsArray[i]) {\n                const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n                const promise = new Promise(resolve => {\n                  objsPool.get(obj, resolve);\n                });\n                this.current.dependencies.push(promise);\n              }\n            }\n\n            return Promise.all(this.current.dependencies);\n          }\n\n          transform(a, b, c, d, e, f) {\n            const transformMatrix = [a, b, c, d, e, f];\n            this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n            this.tgrp = null;\n          }\n\n          getSVG(operatorList, viewport) {\n            this.viewport = viewport;\n\n            const svgElement = this._initialize(viewport);\n\n            return this.loadDependencies(operatorList).then(() => {\n              this.transformMatrix = _util.IDENTITY_MATRIX;\n              this.executeOpTree(this.convertOpList(operatorList));\n              return svgElement;\n            });\n          }\n\n          convertOpList(operatorList) {\n            const operatorIdMapping = this._operatorIdMapping;\n            const argsArray = operatorList.argsArray;\n            const fnArray = operatorList.fnArray;\n            const opList = [];\n\n            for (let i = 0, ii = fnArray.length; i < ii; i++) {\n              const fnId = fnArray[i];\n              opList.push({\n                fnId,\n                fn: operatorIdMapping[fnId],\n                args: argsArray[i]\n              });\n            }\n\n            return opListToTree(opList);\n          }\n\n          executeOpTree(opTree) {\n            for (const opTreeElement of opTree) {\n              const fn = opTreeElement.fn;\n              const fnId = opTreeElement.fnId;\n              const args = opTreeElement.args;\n\n              switch (fnId | 0) {\n                case _util.OPS.beginText:\n                  this.beginText();\n                  break;\n\n                case _util.OPS.dependency:\n                  break;\n\n                case _util.OPS.setLeading:\n                  this.setLeading(args);\n                  break;\n\n                case _util.OPS.setLeadingMoveText:\n                  this.setLeadingMoveText(args[0], args[1]);\n                  break;\n\n                case _util.OPS.setFont:\n                  this.setFont(args);\n                  break;\n\n                case _util.OPS.showText:\n                  this.showText(args[0]);\n                  break;\n\n                case _util.OPS.showSpacedText:\n                  this.showText(args[0]);\n                  break;\n\n                case _util.OPS.endText:\n                  this.endText();\n                  break;\n\n                case _util.OPS.moveText:\n                  this.moveText(args[0], args[1]);\n                  break;\n\n                case _util.OPS.setCharSpacing:\n                  this.setCharSpacing(args[0]);\n                  break;\n\n                case _util.OPS.setWordSpacing:\n                  this.setWordSpacing(args[0]);\n                  break;\n\n                case _util.OPS.setHScale:\n                  this.setHScale(args[0]);\n                  break;\n\n                case _util.OPS.setTextMatrix:\n                  this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                  break;\n\n                case _util.OPS.setTextRise:\n                  this.setTextRise(args[0]);\n                  break;\n\n                case _util.OPS.setTextRenderingMode:\n                  this.setTextRenderingMode(args[0]);\n                  break;\n\n                case _util.OPS.setLineWidth:\n                  this.setLineWidth(args[0]);\n                  break;\n\n                case _util.OPS.setLineJoin:\n                  this.setLineJoin(args[0]);\n                  break;\n\n                case _util.OPS.setLineCap:\n                  this.setLineCap(args[0]);\n                  break;\n\n                case _util.OPS.setMiterLimit:\n                  this.setMiterLimit(args[0]);\n                  break;\n\n                case _util.OPS.setFillRGBColor:\n                  this.setFillRGBColor(args[0], args[1], args[2]);\n                  break;\n\n                case _util.OPS.setStrokeRGBColor:\n                  this.setStrokeRGBColor(args[0], args[1], args[2]);\n                  break;\n\n                case _util.OPS.setStrokeColorN:\n                  this.setStrokeColorN(args);\n                  break;\n\n                case _util.OPS.setFillColorN:\n                  this.setFillColorN(args);\n                  break;\n\n                case _util.OPS.shadingFill:\n                  this.shadingFill(args[0]);\n                  break;\n\n                case _util.OPS.setDash:\n                  this.setDash(args[0], args[1]);\n                  break;\n\n                case _util.OPS.setRenderingIntent:\n                  this.setRenderingIntent(args[0]);\n                  break;\n\n                case _util.OPS.setFlatness:\n                  this.setFlatness(args[0]);\n                  break;\n\n                case _util.OPS.setGState:\n                  this.setGState(args[0]);\n                  break;\n\n                case _util.OPS.fill:\n                  this.fill();\n                  break;\n\n                case _util.OPS.eoFill:\n                  this.eoFill();\n                  break;\n\n                case _util.OPS.stroke:\n                  this.stroke();\n                  break;\n\n                case _util.OPS.fillStroke:\n                  this.fillStroke();\n                  break;\n\n                case _util.OPS.eoFillStroke:\n                  this.eoFillStroke();\n                  break;\n\n                case _util.OPS.clip:\n                  this.clip(\"nonzero\");\n                  break;\n\n                case _util.OPS.eoClip:\n                  this.clip(\"evenodd\");\n                  break;\n\n                case _util.OPS.paintSolidColorImageMask:\n                  this.paintSolidColorImageMask();\n                  break;\n\n                case _util.OPS.paintImageXObject:\n                  this.paintImageXObject(args[0]);\n                  break;\n\n                case _util.OPS.paintInlineImageXObject:\n                  this.paintInlineImageXObject(args[0]);\n                  break;\n\n                case _util.OPS.paintImageMaskXObject:\n                  this.paintImageMaskXObject(args[0]);\n                  break;\n\n                case _util.OPS.paintFormXObjectBegin:\n                  this.paintFormXObjectBegin(args[0], args[1]);\n                  break;\n\n                case _util.OPS.paintFormXObjectEnd:\n                  this.paintFormXObjectEnd();\n                  break;\n\n                case _util.OPS.closePath:\n                  this.closePath();\n                  break;\n\n                case _util.OPS.closeStroke:\n                  this.closeStroke();\n                  break;\n\n                case _util.OPS.closeFillStroke:\n                  this.closeFillStroke();\n                  break;\n\n                case _util.OPS.closeEOFillStroke:\n                  this.closeEOFillStroke();\n                  break;\n\n                case _util.OPS.nextLine:\n                  this.nextLine();\n                  break;\n\n                case _util.OPS.transform:\n                  this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n                  break;\n\n                case _util.OPS.constructPath:\n                  this.constructPath(args[0], args[1]);\n                  break;\n\n                case _util.OPS.endPath:\n                  this.endPath();\n                  break;\n\n                case 92:\n                  this.group(opTreeElement.items);\n                  break;\n\n                default:\n                  (0, _util.warn)(`Unimplemented operator ${fn}`);\n                  break;\n              }\n            }\n          }\n\n          setWordSpacing(wordSpacing) {\n            this.current.wordSpacing = wordSpacing;\n          }\n\n          setCharSpacing(charSpacing) {\n            this.current.charSpacing = charSpacing;\n          }\n\n          nextLine() {\n            this.moveText(0, this.current.leading);\n          }\n\n          setTextMatrix(a, b, c, d, e, f) {\n            const current = this.current;\n            current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n            current.textMatrixScale = Math.hypot(a, b);\n            current.x = current.lineX = 0;\n            current.y = current.lineY = 0;\n            current.xcoords = [];\n            current.ycoords = [];\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            current.txtElement = this.svgFactory.createElement(\"svg:text\");\n            current.txtElement.append(current.tspan);\n          }\n\n          beginText() {\n            const current = this.current;\n            current.x = current.lineX = 0;\n            current.y = current.lineY = 0;\n            current.textMatrix = _util.IDENTITY_MATRIX;\n            current.lineMatrix = _util.IDENTITY_MATRIX;\n            current.textMatrixScale = 1;\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.txtElement = this.svgFactory.createElement(\"svg:text\");\n            current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n            current.xcoords = [];\n            current.ycoords = [];\n          }\n\n          moveText(x, y) {\n            const current = this.current;\n            current.x = current.lineX += x;\n            current.y = current.lineY += y;\n            current.xcoords = [];\n            current.ycoords = [];\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n          }\n\n          showText(glyphs) {\n            const current = this.current;\n            const font = current.font;\n            const fontSize = current.fontSize;\n\n            if (fontSize === 0) {\n              return;\n            }\n\n            const fontSizeScale = current.fontSizeScale;\n            const charSpacing = current.charSpacing;\n            const wordSpacing = current.wordSpacing;\n            const fontDirection = current.fontDirection;\n            const textHScale = current.textHScale * fontDirection;\n            const vertical = font.vertical;\n            const spacingDir = vertical ? 1 : -1;\n            const defaultVMetrics = font.defaultVMetrics;\n            const widthAdvanceScale = fontSize * current.fontMatrix[0];\n            let x = 0;\n\n            for (const glyph of glyphs) {\n              if (glyph === null) {\n                x += fontDirection * wordSpacing;\n                continue;\n              } else if (typeof glyph === \"number\") {\n                x += spacingDir * glyph * fontSize / 1000;\n                continue;\n              }\n\n              const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              const character = glyph.fontChar;\n              let scaledX, scaledY;\n              let width = glyph.width;\n\n              if (vertical) {\n                let vx;\n                const vmetric = glyph.vmetric || defaultVMetrics;\n                vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n                vx = -vx * widthAdvanceScale;\n                const vy = vmetric[2] * widthAdvanceScale;\n                width = vmetric ? -vmetric[0] : width;\n                scaledX = vx / fontSizeScale;\n                scaledY = (x + vy) / fontSizeScale;\n              } else {\n                scaledX = x / fontSizeScale;\n                scaledY = 0;\n              }\n\n              if (glyph.isInFont || font.missingFile) {\n                current.xcoords.push(current.x + scaledX);\n\n                if (vertical) {\n                  current.ycoords.push(-current.y + scaledY);\n                }\n\n                current.tspan.textContent += character;\n              } else {}\n\n              const charWidth = vertical ? width * widthAdvanceScale - spacing * fontDirection : width * widthAdvanceScale + spacing * fontDirection;\n              x += charWidth;\n            }\n\n            current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n\n            if (vertical) {\n              current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n            } else {\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            }\n\n            if (vertical) {\n              current.y -= x;\n            } else {\n              current.x += x * textHScale;\n            }\n\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n\n            if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n              current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n            }\n\n            if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n              current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n            }\n\n            const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n            if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n                current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n              }\n\n              if (current.fillAlpha < 1) {\n                current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n              }\n            } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n              current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n            } else {\n              current.tspan.setAttributeNS(null, \"fill\", \"none\");\n            }\n\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              const lineWidthScale = 1 / (current.textMatrixScale || 1);\n\n              this._setStrokeAttributes(current.tspan, lineWidthScale);\n            }\n\n            let textMatrix = current.textMatrix;\n\n            if (current.textRise !== 0) {\n              textMatrix = textMatrix.slice();\n              textMatrix[5] += current.textRise;\n            }\n\n            current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n            current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n            current.txtElement.append(current.tspan);\n            current.txtgrp.append(current.txtElement);\n\n            this._ensureTransformGroup().append(current.txtElement);\n          }\n\n          setLeadingMoveText(x, y) {\n            this.setLeading(-y);\n            this.moveText(x, y);\n          }\n\n          addFontStyle(fontObj) {\n            if (!fontObj.data) {\n              throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n            }\n\n            if (!this.cssStyle) {\n              this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n              this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n              this.defs.append(this.cssStyle);\n            }\n\n            const url = createObjectURL(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n            this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n          }\n\n          setFont(details) {\n            const current = this.current;\n            const fontObj = this.commonObjs.get(details[0]);\n            let size = details[1];\n            current.font = fontObj;\n\n            if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n              this.addFontStyle(fontObj);\n              this.embeddedFonts[fontObj.loadedName] = fontObj;\n            }\n\n            current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n            let bold = \"normal\";\n\n            if (fontObj.black) {\n              bold = \"900\";\n            } else if (fontObj.bold) {\n              bold = \"bold\";\n            }\n\n            const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n            if (size < 0) {\n              size = -size;\n              current.fontDirection = -1;\n            } else {\n              current.fontDirection = 1;\n            }\n\n            current.fontSize = size;\n            current.fontFamily = fontObj.loadedName;\n            current.fontWeight = bold;\n            current.fontStyle = italic;\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            current.xcoords = [];\n            current.ycoords = [];\n          }\n\n          endText() {\n            const current = this.current;\n\n            if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement?.hasChildNodes()) {\n              current.element = current.txtElement;\n              this.clip(\"nonzero\");\n              this.endPath();\n            }\n          }\n\n          setLineWidth(width) {\n            if (width > 0) {\n              this.current.lineWidth = width;\n            }\n          }\n\n          setLineCap(style) {\n            this.current.lineCap = LINE_CAP_STYLES[style];\n          }\n\n          setLineJoin(style) {\n            this.current.lineJoin = LINE_JOIN_STYLES[style];\n          }\n\n          setMiterLimit(limit) {\n            this.current.miterLimit = limit;\n          }\n\n          setStrokeAlpha(strokeAlpha) {\n            this.current.strokeAlpha = strokeAlpha;\n          }\n\n          setStrokeRGBColor(r, g, b) {\n            this.current.strokeColor = _util.Util.makeHexColor(r, g, b);\n          }\n\n          setFillAlpha(fillAlpha) {\n            this.current.fillAlpha = fillAlpha;\n          }\n\n          setFillRGBColor(r, g, b) {\n            this.current.fillColor = _util.Util.makeHexColor(r, g, b);\n            this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            this.current.xcoords = [];\n            this.current.ycoords = [];\n          }\n\n          setStrokeColorN(args) {\n            this.current.strokeColor = this._makeColorN_Pattern(args);\n          }\n\n          setFillColorN(args) {\n            this.current.fillColor = this._makeColorN_Pattern(args);\n          }\n\n          shadingFill(args) {\n            const {\n              width,\n              height\n            } = this.viewport;\n\n            const inv = _util.Util.inverseTransform(this.transformMatrix);\n\n            const [x0, y0, x1, y1] = _util.Util.getAxialAlignedBoundingBox([0, 0, width, height], inv);\n\n            const rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", x0);\n            rect.setAttributeNS(null, \"y\", y0);\n            rect.setAttributeNS(null, \"width\", x1 - x0);\n            rect.setAttributeNS(null, \"height\", y1 - y0);\n            rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n\n            if (this.current.fillAlpha < 1) {\n              rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n            }\n\n            this._ensureTransformGroup().append(rect);\n          }\n\n          _makeColorN_Pattern(args) {\n            if (args[0] === \"TilingPattern\") {\n              return this._makeTilingPattern(args);\n            }\n\n            return this._makeShadingPattern(args);\n          }\n\n          _makeTilingPattern(args) {\n            const color = args[1];\n            const operatorList = args[2];\n            const matrix = args[3] || _util.IDENTITY_MATRIX;\n            const [x0, y0, x1, y1] = args[4];\n            const xstep = args[5];\n            const ystep = args[6];\n            const paintType = args[7];\n            const tilingId = `shading${shadingCount++}`;\n\n            const [tx0, ty0, tx1, ty1] = _util.Util.normalizeRect([..._util.Util.applyTransform([x0, y0], matrix), ..._util.Util.applyTransform([x1, y1], matrix)]);\n\n            const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n\n            const txstep = xstep * xscale;\n            const tystep = ystep * yscale;\n            const tiling = this.svgFactory.createElement(\"svg:pattern\");\n            tiling.setAttributeNS(null, \"id\", tilingId);\n            tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n            tiling.setAttributeNS(null, \"width\", txstep);\n            tiling.setAttributeNS(null, \"height\", tystep);\n            tiling.setAttributeNS(null, \"x\", `${tx0}`);\n            tiling.setAttributeNS(null, \"y\", `${ty0}`);\n            const svg = this.svg;\n            const transformMatrix = this.transformMatrix;\n            const fillColor = this.current.fillColor;\n            const strokeColor = this.current.strokeColor;\n            const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n            this.svg = bbox;\n            this.transformMatrix = matrix;\n\n            if (paintType === 2) {\n              const cssColor = _util.Util.makeHexColor(...color);\n\n              this.current.fillColor = cssColor;\n              this.current.strokeColor = cssColor;\n            }\n\n            this.executeOpTree(this.convertOpList(operatorList));\n            this.svg = svg;\n            this.transformMatrix = transformMatrix;\n            this.current.fillColor = fillColor;\n            this.current.strokeColor = strokeColor;\n            tiling.append(bbox.childNodes[0]);\n            this.defs.append(tiling);\n            return `url(#${tilingId})`;\n          }\n\n          _makeShadingPattern(args) {\n            if (typeof args === \"string\") {\n              args = this.objs.get(args);\n            }\n\n            switch (args[0]) {\n              case \"RadialAxial\":\n                const shadingId = `shading${shadingCount++}`;\n                const colorStops = args[3];\n                let gradient;\n\n                switch (args[1]) {\n                  case \"axial\":\n                    const point0 = args[4];\n                    const point1 = args[5];\n                    gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                    gradient.setAttributeNS(null, \"id\", shadingId);\n                    gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                    gradient.setAttributeNS(null, \"x1\", point0[0]);\n                    gradient.setAttributeNS(null, \"y1\", point0[1]);\n                    gradient.setAttributeNS(null, \"x2\", point1[0]);\n                    gradient.setAttributeNS(null, \"y2\", point1[1]);\n                    break;\n\n                  case \"radial\":\n                    const focalPoint = args[4];\n                    const circlePoint = args[5];\n                    const focalRadius = args[6];\n                    const circleRadius = args[7];\n                    gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                    gradient.setAttributeNS(null, \"id\", shadingId);\n                    gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                    gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                    gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                    gradient.setAttributeNS(null, \"r\", circleRadius);\n                    gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                    gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                    gradient.setAttributeNS(null, \"fr\", focalRadius);\n                    break;\n\n                  default:\n                    throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n                }\n\n                for (const colorStop of colorStops) {\n                  const stop = this.svgFactory.createElement(\"svg:stop\");\n                  stop.setAttributeNS(null, \"offset\", colorStop[0]);\n                  stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n                  gradient.append(stop);\n                }\n\n                this.defs.append(gradient);\n                return `url(#${shadingId})`;\n\n              case \"Mesh\":\n                (0, _util.warn)(\"Unimplemented pattern Mesh\");\n                return null;\n\n              case \"Dummy\":\n                return \"hotpink\";\n\n              default:\n                throw new Error(`Unknown IR type: ${args[0]}`);\n            }\n          }\n\n          setDash(dashArray, dashPhase) {\n            this.current.dashArray = dashArray;\n            this.current.dashPhase = dashPhase;\n          }\n\n          constructPath(ops, args) {\n            const current = this.current;\n            let x = current.x,\n                y = current.y;\n            let d = [];\n            let j = 0;\n\n            for (const op of ops) {\n              switch (op | 0) {\n                case _util.OPS.rectangle:\n                  x = args[j++];\n                  y = args[j++];\n                  const width = args[j++];\n                  const height = args[j++];\n                  const xw = x + width;\n                  const yh = y + height;\n                  d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n                  break;\n\n                case _util.OPS.moveTo:\n                  x = args[j++];\n                  y = args[j++];\n                  d.push(\"M\", pf(x), pf(y));\n                  break;\n\n                case _util.OPS.lineTo:\n                  x = args[j++];\n                  y = args[j++];\n                  d.push(\"L\", pf(x), pf(y));\n                  break;\n\n                case _util.OPS.curveTo:\n                  x = args[j + 4];\n                  y = args[j + 5];\n                  d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n                  j += 6;\n                  break;\n\n                case _util.OPS.curveTo2:\n                  d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  j += 4;\n                  break;\n\n                case _util.OPS.curveTo3:\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n                  j += 4;\n                  break;\n\n                case _util.OPS.closePath:\n                  d.push(\"Z\");\n                  break;\n              }\n            }\n\n            d = d.join(\" \");\n\n            if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n              d = current.path.getAttributeNS(null, \"d\") + d;\n            } else {\n              current.path = this.svgFactory.createElement(\"svg:path\");\n\n              this._ensureTransformGroup().append(current.path);\n            }\n\n            current.path.setAttributeNS(null, \"d\", d);\n            current.path.setAttributeNS(null, \"fill\", \"none\");\n            current.element = current.path;\n            current.setCurrentPoint(x, y);\n          }\n\n          endPath() {\n            const current = this.current;\n            current.path = null;\n\n            if (!this.pendingClip) {\n              return;\n            }\n\n            if (!current.element) {\n              this.pendingClip = null;\n              return;\n            }\n\n            const clipId = `clippath${clipCount++}`;\n            const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n            clipPath.setAttributeNS(null, \"id\", clipId);\n            clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n            const clipElement = current.element.cloneNode(true);\n\n            if (this.pendingClip === \"evenodd\") {\n              clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n            } else {\n              clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n            }\n\n            this.pendingClip = null;\n            clipPath.append(clipElement);\n            this.defs.append(clipPath);\n\n            if (current.activeClipUrl) {\n              current.clipGroup = null;\n\n              for (const prev of this.extraStack) {\n                prev.clipGroup = null;\n              }\n\n              clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n            }\n\n            current.activeClipUrl = `url(#${clipId})`;\n            this.tgrp = null;\n          }\n\n          clip(type) {\n            this.pendingClip = type;\n          }\n\n          closePath() {\n            const current = this.current;\n\n            if (current.path) {\n              const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n              current.path.setAttributeNS(null, \"d\", d);\n            }\n          }\n\n          setLeading(leading) {\n            this.current.leading = -leading;\n          }\n\n          setTextRise(textRise) {\n            this.current.textRise = textRise;\n          }\n\n          setTextRenderingMode(textRenderingMode) {\n            this.current.textRenderingMode = textRenderingMode;\n          }\n\n          setHScale(scale) {\n            this.current.textHScale = scale / 100;\n          }\n\n          setRenderingIntent(intent) {}\n\n          setFlatness(flatness) {}\n\n          setGState(states) {\n            for (const [key, value] of states) {\n              switch (key) {\n                case \"LW\":\n                  this.setLineWidth(value);\n                  break;\n\n                case \"LC\":\n                  this.setLineCap(value);\n                  break;\n\n                case \"LJ\":\n                  this.setLineJoin(value);\n                  break;\n\n                case \"ML\":\n                  this.setMiterLimit(value);\n                  break;\n\n                case \"D\":\n                  this.setDash(value[0], value[1]);\n                  break;\n\n                case \"RI\":\n                  this.setRenderingIntent(value);\n                  break;\n\n                case \"FL\":\n                  this.setFlatness(value);\n                  break;\n\n                case \"Font\":\n                  this.setFont(value);\n                  break;\n\n                case \"CA\":\n                  this.setStrokeAlpha(value);\n                  break;\n\n                case \"ca\":\n                  this.setFillAlpha(value);\n                  break;\n\n                default:\n                  (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n                  break;\n              }\n            }\n          }\n\n          fill() {\n            const current = this.current;\n\n            if (current.element) {\n              current.element.setAttributeNS(null, \"fill\", current.fillColor);\n              current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n              this.endPath();\n            }\n          }\n\n          stroke() {\n            const current = this.current;\n\n            if (current.element) {\n              this._setStrokeAttributes(current.element);\n\n              current.element.setAttributeNS(null, \"fill\", \"none\");\n              this.endPath();\n            }\n          }\n\n          _setStrokeAttributes(element) {\n            let lineWidthScale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            const current = this.current;\n            let dashArray = current.dashArray;\n\n            if (lineWidthScale !== 1 && dashArray.length > 0) {\n              dashArray = dashArray.map(function (value) {\n                return lineWidthScale * value;\n              });\n            }\n\n            element.setAttributeNS(null, \"stroke\", current.strokeColor);\n            element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n            element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n            element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n            element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n            element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n            element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n            element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n          }\n\n          eoFill() {\n            this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n            this.fill();\n          }\n\n          fillStroke() {\n            this.stroke();\n            this.fill();\n          }\n\n          eoFillStroke() {\n            this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n            this.fillStroke();\n          }\n\n          closeStroke() {\n            this.closePath();\n            this.stroke();\n          }\n\n          closeFillStroke() {\n            this.closePath();\n            this.fillStroke();\n          }\n\n          closeEOFillStroke() {\n            this.closePath();\n            this.eoFillStroke();\n          }\n\n          paintSolidColorImageMask() {\n            const rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", \"0\");\n            rect.setAttributeNS(null, \"y\", \"0\");\n            rect.setAttributeNS(null, \"width\", \"1px\");\n            rect.setAttributeNS(null, \"height\", \"1px\");\n            rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n            this._ensureTransformGroup().append(rect);\n          }\n\n          paintImageXObject(objId) {\n            const imgData = this.getObject(objId);\n\n            if (!imgData) {\n              (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n              return;\n            }\n\n            this.paintInlineImageXObject(imgData);\n          }\n\n          paintInlineImageXObject(imgData, mask) {\n            const width = imgData.width;\n            const height = imgData.height;\n            const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n            const cliprect = this.svgFactory.createElement(\"svg:rect\");\n            cliprect.setAttributeNS(null, \"x\", \"0\");\n            cliprect.setAttributeNS(null, \"y\", \"0\");\n            cliprect.setAttributeNS(null, \"width\", pf(width));\n            cliprect.setAttributeNS(null, \"height\", pf(height));\n            this.current.element = cliprect;\n            this.clip(\"nonzero\");\n            const imgEl = this.svgFactory.createElement(\"svg:image\");\n            imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n            imgEl.setAttributeNS(null, \"x\", \"0\");\n            imgEl.setAttributeNS(null, \"y\", pf(-height));\n            imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n            imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n            imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n\n            if (mask) {\n              mask.append(imgEl);\n            } else {\n              this._ensureTransformGroup().append(imgEl);\n            }\n          }\n\n          paintImageMaskXObject(img) {\n            const imgData = this.getObject(img.data, img);\n\n            if (imgData.bitmap) {\n              (0, _util.warn)(\"paintImageMaskXObject: ImageBitmap support is not implemented, \" + \"ensure that the `isOffscreenCanvasSupported` API parameter is disabled.\");\n              return;\n            }\n\n            const current = this.current;\n            const width = imgData.width;\n            const height = imgData.height;\n            const fillColor = current.fillColor;\n            current.maskId = `mask${maskCount++}`;\n            const mask = this.svgFactory.createElement(\"svg:mask\");\n            mask.setAttributeNS(null, \"id\", current.maskId);\n            const rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", \"0\");\n            rect.setAttributeNS(null, \"y\", \"0\");\n            rect.setAttributeNS(null, \"width\", pf(width));\n            rect.setAttributeNS(null, \"height\", pf(height));\n            rect.setAttributeNS(null, \"fill\", fillColor);\n            rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n            this.defs.append(mask);\n\n            this._ensureTransformGroup().append(rect);\n\n            this.paintInlineImageXObject(imgData, mask);\n          }\n\n          paintFormXObjectBegin(matrix, bbox) {\n            if (Array.isArray(matrix) && matrix.length === 6) {\n              this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n            }\n\n            if (bbox) {\n              const width = bbox[2] - bbox[0];\n              const height = bbox[3] - bbox[1];\n              const cliprect = this.svgFactory.createElement(\"svg:rect\");\n              cliprect.setAttributeNS(null, \"x\", bbox[0]);\n              cliprect.setAttributeNS(null, \"y\", bbox[1]);\n              cliprect.setAttributeNS(null, \"width\", pf(width));\n              cliprect.setAttributeNS(null, \"height\", pf(height));\n              this.current.element = cliprect;\n              this.clip(\"nonzero\");\n              this.endPath();\n            }\n          }\n\n          paintFormXObjectEnd() {}\n\n          _initialize(viewport) {\n            const svg = this.svgFactory.create(viewport.width, viewport.height);\n            const definitions = this.svgFactory.createElement(\"svg:defs\");\n            svg.append(definitions);\n            this.defs = definitions;\n            const rootGroup = this.svgFactory.createElement(\"svg:g\");\n            rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n            svg.append(rootGroup);\n            this.svg = rootGroup;\n            return svg;\n          }\n\n          _ensureClipGroup() {\n            if (!this.current.clipGroup) {\n              const clipGroup = this.svgFactory.createElement(\"svg:g\");\n              clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n              this.svg.append(clipGroup);\n              this.current.clipGroup = clipGroup;\n            }\n\n            return this.current.clipGroup;\n          }\n\n          _ensureTransformGroup() {\n            if (!this.tgrp) {\n              this.tgrp = this.svgFactory.createElement(\"svg:g\");\n              this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n              if (this.current.activeClipUrl) {\n                this._ensureClipGroup().append(this.tgrp);\n              } else {\n                this.svg.append(this.tgrp);\n              }\n            }\n\n            return this.tgrp;\n          }\n\n        }\n\n        exports.SVGGraphics = SVGGraphics;\n        /***/\n      },\n      /* 25 */\n\n      /***/\n      (__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.XfaText = void 0;\n\n        class XfaText {\n          static textContent(xfa) {\n            const items = [];\n            const output = {\n              items,\n              styles: Object.create(null)\n            };\n\n            function walk(node) {\n              if (!node) {\n                return;\n              }\n\n              let str = null;\n              const name = node.name;\n\n              if (name === \"#text\") {\n                str = node.value;\n              } else if (!XfaText.shouldBuildText(name)) {\n                return;\n              } else if (node?.attributes?.textContent) {\n                str = node.attributes.textContent;\n              } else if (node.value) {\n                str = node.value;\n              }\n\n              if (str !== null) {\n                items.push({\n                  str\n                });\n              }\n\n              if (!node.children) {\n                return;\n              }\n\n              for (const child of node.children) {\n                walk(child);\n              }\n            }\n\n            walk(xfa);\n            return output;\n          }\n\n          static shouldBuildText(name) {\n            return !(name === \"textarea\" || name === \"input\" || name === \"option\" || name === \"select\");\n          }\n\n        }\n\n        exports.XfaText = XfaText;\n        /***/\n      },\n      /* 26 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.TextLayerRenderTask = void 0;\n        exports.renderTextLayer = renderTextLayer;\n        exports.updateTextLayer = updateTextLayer;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _display_utils = __w_pdfjs_require__(6);\n\n        const MAX_TEXT_DIVS_TO_RENDER = 100000;\n        const DEFAULT_FONT_SIZE = 30;\n        const DEFAULT_FONT_ASCENT = 0.8;\n        const ascentCache = new Map();\n\n        function getCtx(size, isOffscreenCanvasSupported) {\n          let ctx;\n\n          if (isOffscreenCanvasSupported && _util.FeatureTest.isOffscreenCanvasSupported) {\n            ctx = new OffscreenCanvas(size, size).getContext(\"2d\", {\n              alpha: false\n            });\n          } else {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = canvas.height = size;\n            ctx = canvas.getContext(\"2d\", {\n              alpha: false\n            });\n          }\n\n          return ctx;\n        }\n\n        function getAscent(fontFamily, isOffscreenCanvasSupported) {\n          const cachedAscent = ascentCache.get(fontFamily);\n\n          if (cachedAscent) {\n            return cachedAscent;\n          }\n\n          const ctx = getCtx(DEFAULT_FONT_SIZE, isOffscreenCanvasSupported);\n          ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n          const metrics = ctx.measureText(\"\");\n          let ascent = metrics.fontBoundingBoxAscent;\n          let descent = Math.abs(metrics.fontBoundingBoxDescent);\n\n          if (ascent) {\n            const ratio = ascent / (ascent + descent);\n            ascentCache.set(fontFamily, ratio);\n            ctx.canvas.width = ctx.canvas.height = 0;\n            return ratio;\n          }\n\n          ctx.strokeStyle = \"red\";\n          ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n          ctx.strokeText(\"g\", 0, 0);\n          let pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n          descent = 0;\n\n          for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n            if (pixels[i] > 0) {\n              descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n              break;\n            }\n          }\n\n          ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n          ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n          pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n          ascent = 0;\n\n          for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n            if (pixels[i] > 0) {\n              ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n              break;\n            }\n          }\n\n          ctx.canvas.width = ctx.canvas.height = 0;\n\n          if (ascent) {\n            const ratio = ascent / (ascent + descent);\n            ascentCache.set(fontFamily, ratio);\n            return ratio;\n          }\n\n          ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n          return DEFAULT_FONT_ASCENT;\n        }\n\n        function appendText(task, geom, styles) {\n          const textDiv = document.createElement(\"span\");\n          const textDivProperties = {\n            angle: 0,\n            canvasWidth: 0,\n            hasText: geom.str !== \"\",\n            hasEOL: geom.hasEOL,\n            fontSize: 0\n          };\n\n          task._textDivs.push(textDiv);\n\n          const tx = _util.Util.transform(task._transform, geom.transform);\n\n          let angle = Math.atan2(tx[1], tx[0]);\n          const style = styles[geom.fontName];\n\n          if (style.vertical) {\n            angle += Math.PI / 2;\n          }\n\n          const fontHeight = Math.hypot(tx[2], tx[3]);\n          const fontAscent = fontHeight * getAscent(style.fontFamily, task._isOffscreenCanvasSupported);\n          let left, top;\n\n          if (angle === 0) {\n            left = tx[4];\n            top = tx[5] - fontAscent;\n          } else {\n            left = tx[4] + fontAscent * Math.sin(angle);\n            top = tx[5] - fontAscent * Math.cos(angle);\n          }\n\n          const scaleFactorStr = \"calc(var(--scale-factor)*\";\n          const divStyle = textDiv.style;\n\n          if (task._container === task._rootContainer) {\n            divStyle.left = `${(100 * left / task._pageWidth).toFixed(2)}%`;\n            divStyle.top = `${(100 * top / task._pageHeight).toFixed(2)}%`;\n          } else {\n            divStyle.left = `${scaleFactorStr}${left.toFixed(2)}px)`;\n            divStyle.top = `${scaleFactorStr}${top.toFixed(2)}px)`;\n          }\n\n          divStyle.fontSize = `${scaleFactorStr}${fontHeight.toFixed(2)}px)`;\n          divStyle.fontFamily = style.fontFamily;\n          textDivProperties.fontSize = fontHeight;\n          textDiv.setAttribute(\"role\", \"presentation\");\n          textDiv.textContent = geom.str;\n          textDiv.dir = geom.dir;\n\n          if (task._fontInspectorEnabled) {\n            textDiv.dataset.fontName = geom.fontName;\n          }\n\n          if (angle !== 0) {\n            textDivProperties.angle = angle * (180 / Math.PI);\n          }\n\n          let shouldScaleText = false;\n\n          if (geom.str.length > 1) {\n            shouldScaleText = true;\n          } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n            const absScaleX = Math.abs(geom.transform[0]),\n                  absScaleY = Math.abs(geom.transform[3]);\n\n            if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n              shouldScaleText = true;\n            }\n          }\n\n          if (shouldScaleText) {\n            textDivProperties.canvasWidth = style.vertical ? geom.height : geom.width;\n          }\n\n          task._textDivProperties.set(textDiv, textDivProperties);\n\n          if (task._isReadableStream) {\n            task._layoutText(textDiv);\n          }\n        }\n\n        function layout(params) {\n          const {\n            div,\n            scale,\n            properties,\n            ctx,\n            prevFontSize,\n            prevFontFamily\n          } = params;\n          const {\n            style\n          } = div;\n          let transform = \"\";\n\n          if (properties.canvasWidth !== 0 && properties.hasText) {\n            const {\n              fontFamily\n            } = style;\n            const {\n              canvasWidth,\n              fontSize\n            } = properties;\n\n            if (prevFontSize !== fontSize || prevFontFamily !== fontFamily) {\n              ctx.font = `${fontSize * scale}px ${fontFamily}`;\n              params.prevFontSize = fontSize;\n              params.prevFontFamily = fontFamily;\n            }\n\n            const {\n              width\n            } = ctx.measureText(div.textContent);\n\n            if (width > 0) {\n              transform = `scaleX(${canvasWidth * scale / width})`;\n            }\n          }\n\n          if (properties.angle !== 0) {\n            transform = `rotate(${properties.angle}deg) ${transform}`;\n          }\n\n          if (transform.length > 0) {\n            style.transform = transform;\n          }\n        }\n\n        function render(task) {\n          if (task._canceled) {\n            return;\n          }\n\n          const textDivs = task._textDivs;\n          const capability = task._capability;\n          const textDivsLength = textDivs.length;\n\n          if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n            capability.resolve();\n            return;\n          }\n\n          if (!task._isReadableStream) {\n            for (const textDiv of textDivs) {\n              task._layoutText(textDiv);\n            }\n          }\n\n          capability.resolve();\n        }\n\n        class TextLayerRenderTask {\n          constructor(_ref38) {\n            let {\n              textContentSource,\n              container,\n              viewport,\n              textDivs,\n              textDivProperties,\n              textContentItemsStr,\n              isOffscreenCanvasSupported\n            } = _ref38;\n            this._textContentSource = textContentSource;\n            this._isReadableStream = textContentSource instanceof ReadableStream;\n            this._container = this._rootContainer = container;\n            this._textDivs = textDivs || [];\n            this._textContentItemsStr = textContentItemsStr || [];\n            this._isOffscreenCanvasSupported = isOffscreenCanvasSupported;\n            this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n            this._reader = null;\n            this._textDivProperties = textDivProperties || new WeakMap();\n            this._canceled = false;\n            this._capability = new _util.PromiseCapability();\n            this._layoutTextParams = {\n              prevFontSize: null,\n              prevFontFamily: null,\n              div: null,\n              scale: viewport.scale * (globalThis.devicePixelRatio || 1),\n              properties: null,\n              ctx: getCtx(0, isOffscreenCanvasSupported)\n            };\n            const {\n              pageWidth,\n              pageHeight,\n              pageX,\n              pageY\n            } = viewport.rawDims;\n            this._transform = [1, 0, 0, -1, -pageX, pageY + pageHeight];\n            this._pageWidth = pageWidth;\n            this._pageHeight = pageHeight;\n            (0, _display_utils.setLayerDimensions)(container, viewport);\n\n            this._capability.promise.finally(() => {\n              this._layoutTextParams = null;\n            }).catch(() => {});\n          }\n\n          get promise() {\n            return this._capability.promise;\n          }\n\n          cancel() {\n            this._canceled = true;\n\n            if (this._reader) {\n              this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\")).catch(() => {});\n\n              this._reader = null;\n            }\n\n            this._capability.reject(new _util.AbortException(\"TextLayer task cancelled.\"));\n          }\n\n          _processItems(items, styleCache) {\n            for (const item of items) {\n              if (item.str === undefined) {\n                if (item.type === \"beginMarkedContentProps\" || item.type === \"beginMarkedContent\") {\n                  const parent = this._container;\n                  this._container = document.createElement(\"span\");\n\n                  this._container.classList.add(\"markedContent\");\n\n                  if (item.id !== null) {\n                    this._container.setAttribute(\"id\", `${item.id}`);\n                  }\n\n                  parent.append(this._container);\n                } else if (item.type === \"endMarkedContent\") {\n                  this._container = this._container.parentNode;\n                }\n\n                continue;\n              }\n\n              this._textContentItemsStr.push(item.str);\n\n              appendText(this, item, styleCache);\n            }\n          }\n\n          _layoutText(textDiv) {\n            const textDivProperties = this._layoutTextParams.properties = this._textDivProperties.get(textDiv);\n\n            this._layoutTextParams.div = textDiv;\n            layout(this._layoutTextParams);\n\n            if (textDivProperties.hasText) {\n              this._container.append(textDiv);\n            }\n\n            if (textDivProperties.hasEOL) {\n              const br = document.createElement(\"br\");\n              br.setAttribute(\"role\", \"presentation\");\n\n              this._container.append(br);\n            }\n          }\n\n          _render() {\n            const capability = new _util.PromiseCapability();\n            let styleCache = Object.create(null);\n\n            if (this._isReadableStream) {\n              const pump = () => {\n                this._reader.read().then(_ref39 => {\n                  let {\n                    value,\n                    done\n                  } = _ref39;\n\n                  if (done) {\n                    capability.resolve();\n                    return;\n                  }\n\n                  Object.assign(styleCache, value.styles);\n\n                  this._processItems(value.items, styleCache);\n\n                  pump();\n                }, capability.reject);\n              };\n\n              this._reader = this._textContentSource.getReader();\n              pump();\n            } else if (this._textContentSource) {\n              const {\n                items,\n                styles\n              } = this._textContentSource;\n\n              this._processItems(items, styles);\n\n              capability.resolve();\n            } else {\n              throw new Error('No \"textContentSource\" parameter specified.');\n            }\n\n            capability.promise.then(() => {\n              styleCache = null;\n              render(this);\n            }, this._capability.reject);\n          }\n\n        }\n\n        exports.TextLayerRenderTask = TextLayerRenderTask;\n\n        function renderTextLayer(params) {\n          if (!params.textContentSource && (params.textContent || params.textContentStream)) {\n            (0, _display_utils.deprecated)(\"The TextLayerRender `textContent`/`textContentStream` parameters \" + \"will be removed in the future, please use `textContentSource` instead.\");\n            params.textContentSource = params.textContent || params.textContentStream;\n          }\n\n          const {\n            container,\n            viewport\n          } = params;\n          const style = getComputedStyle(container);\n          const visibility = style.getPropertyValue(\"visibility\");\n          const scaleFactor = parseFloat(style.getPropertyValue(\"--scale-factor\"));\n\n          if (visibility === \"visible\" && (!scaleFactor || Math.abs(scaleFactor - viewport.scale) > 1e-5)) {\n            console.error(\"The `--scale-factor` CSS-variable must be set, \" + \"to the same value as `viewport.scale`, \" + \"either on the `container`-element itself or higher up in the DOM.\");\n          }\n\n          const task = new TextLayerRenderTask(params);\n\n          task._render();\n\n          return task;\n        }\n\n        function updateTextLayer(_ref40) {\n          let {\n            container,\n            viewport,\n            textDivs,\n            textDivProperties,\n            isOffscreenCanvasSupported,\n            mustRotate = true,\n            mustRescale = true\n          } = _ref40;\n\n          if (mustRotate) {\n            (0, _display_utils.setLayerDimensions)(container, {\n              rotation: viewport.rotation\n            });\n          }\n\n          if (mustRescale) {\n            const ctx = getCtx(0, isOffscreenCanvasSupported);\n            const scale = viewport.scale * (globalThis.devicePixelRatio || 1);\n            const params = {\n              prevFontSize: null,\n              prevFontFamily: null,\n              div: null,\n              scale,\n              properties: null,\n              ctx\n            };\n\n            for (const div of textDivs) {\n              params.properties = textDivProperties.get(div);\n              params.div = div;\n              layout(params);\n            }\n          }\n        }\n        /***/\n\n      },\n      /* 27 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.AnnotationEditorLayer = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _editor = __w_pdfjs_require__(4);\n\n        var _freetext = __w_pdfjs_require__(28);\n\n        var _ink = __w_pdfjs_require__(33);\n\n        var _display_utils = __w_pdfjs_require__(6);\n\n        var _stamp = __w_pdfjs_require__(34);\n\n        class AnnotationEditorLayer {\n          #accessibilityManager;\n          #allowClick = false;\n          #annotationLayer = null;\n          #boundPointerup = this.pointerup.bind(this);\n          #boundPointerdown = this.pointerdown.bind(this);\n          #editors = new Map();\n          #hadPointerDown = false;\n          #isCleaningUp = false;\n          #isDisabling = false;\n          #uiManager;\n          static _initialized = false;\n\n          constructor(_ref41) {\n            let {\n              uiManager,\n              pageIndex,\n              div,\n              accessibilityManager,\n              annotationLayer,\n              viewport,\n              l10n\n            } = _ref41;\n            const editorTypes = [_freetext.FreeTextEditor, _ink.InkEditor, _stamp.StampEditor];\n\n            if (!AnnotationEditorLayer._initialized) {\n              AnnotationEditorLayer._initialized = true;\n\n              for (const editorType of editorTypes) {\n                editorType.initialize(l10n);\n              }\n            }\n\n            uiManager.registerEditorTypes(editorTypes);\n            this.#uiManager = uiManager;\n            this.pageIndex = pageIndex;\n            this.div = div;\n            this.#accessibilityManager = accessibilityManager;\n            this.#annotationLayer = annotationLayer;\n            this.viewport = viewport;\n            this.#uiManager.addLayer(this);\n          }\n\n          get isEmpty() {\n            return this.#editors.size === 0;\n          }\n\n          updateToolbar(mode) {\n            this.#uiManager.updateToolbar(mode);\n          }\n\n          updateMode() {\n            let mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.#uiManager.getMode();\n            this.#cleanup();\n\n            if (mode === _util.AnnotationEditorType.INK) {\n              this.addInkEditorIfNeeded(false);\n              this.disableClick();\n            } else {\n              this.enableClick();\n            }\n\n            if (mode !== _util.AnnotationEditorType.NONE) {\n              this.div.classList.toggle(\"freeTextEditing\", mode === _util.AnnotationEditorType.FREETEXT);\n              this.div.classList.toggle(\"inkEditing\", mode === _util.AnnotationEditorType.INK);\n              this.div.classList.toggle(\"stampEditing\", mode === _util.AnnotationEditorType.STAMP);\n              this.div.hidden = false;\n            }\n          }\n\n          addInkEditorIfNeeded(isCommitting) {\n            if (!isCommitting && this.#uiManager.getMode() !== _util.AnnotationEditorType.INK) {\n              return;\n            }\n\n            if (!isCommitting) {\n              for (const editor of this.#editors.values()) {\n                if (editor.isEmpty()) {\n                  editor.setInBackground();\n                  return;\n                }\n              }\n            }\n\n            const editor = this.#createAndAddNewEditor({\n              offsetX: 0,\n              offsetY: 0\n            }, false);\n            editor.setInBackground();\n          }\n\n          setEditingState(isEditing) {\n            this.#uiManager.setEditingState(isEditing);\n          }\n\n          addCommands(params) {\n            this.#uiManager.addCommands(params);\n          }\n\n          enable() {\n            this.div.style.pointerEvents = \"auto\";\n            const annotationElementIds = new Set();\n\n            for (const editor of this.#editors.values()) {\n              editor.enableEditing();\n\n              if (editor.annotationElementId) {\n                annotationElementIds.add(editor.annotationElementId);\n              }\n            }\n\n            if (!this.#annotationLayer) {\n              return;\n            }\n\n            const editables = this.#annotationLayer.getEditableAnnotations();\n\n            for (const editable of editables) {\n              editable.hide();\n\n              if (this.#uiManager.isDeletedAnnotationElement(editable.data.id)) {\n                continue;\n              }\n\n              if (annotationElementIds.has(editable.data.id)) {\n                continue;\n              }\n\n              const editor = this.deserialize(editable);\n\n              if (!editor) {\n                continue;\n              }\n\n              this.addOrRebuild(editor);\n              editor.enableEditing();\n            }\n          }\n\n          disable() {\n            this.#isDisabling = true;\n            this.div.style.pointerEvents = \"none\";\n            const hiddenAnnotationIds = new Set();\n\n            for (const editor of this.#editors.values()) {\n              editor.disableEditing();\n\n              if (!editor.annotationElementId || editor.serialize() !== null) {\n                hiddenAnnotationIds.add(editor.annotationElementId);\n                continue;\n              }\n\n              this.getEditableAnnotation(editor.annotationElementId)?.show();\n              editor.remove();\n            }\n\n            if (this.#annotationLayer) {\n              const editables = this.#annotationLayer.getEditableAnnotations();\n\n              for (const editable of editables) {\n                const {\n                  id\n                } = editable.data;\n\n                if (hiddenAnnotationIds.has(id) || this.#uiManager.isDeletedAnnotationElement(id)) {\n                  continue;\n                }\n\n                editable.show();\n              }\n            }\n\n            this.#cleanup();\n\n            if (this.isEmpty) {\n              this.div.hidden = true;\n            }\n\n            this.#isDisabling = false;\n          }\n\n          getEditableAnnotation(id) {\n            return this.#annotationLayer?.getEditableAnnotation(id) || null;\n          }\n\n          setActiveEditor(editor) {\n            const currentActive = this.#uiManager.getActive();\n\n            if (currentActive === editor) {\n              return;\n            }\n\n            this.#uiManager.setActiveEditor(editor);\n          }\n\n          enableClick() {\n            this.div.addEventListener(\"pointerdown\", this.#boundPointerdown);\n            this.div.addEventListener(\"pointerup\", this.#boundPointerup);\n          }\n\n          disableClick() {\n            this.div.removeEventListener(\"pointerdown\", this.#boundPointerdown);\n            this.div.removeEventListener(\"pointerup\", this.#boundPointerup);\n          }\n\n          attach(editor) {\n            this.#editors.set(editor.id, editor);\n            const {\n              annotationElementId\n            } = editor;\n\n            if (annotationElementId && this.#uiManager.isDeletedAnnotationElement(annotationElementId)) {\n              this.#uiManager.removeDeletedAnnotationElement(editor);\n            }\n          }\n\n          detach(editor) {\n            this.#editors.delete(editor.id);\n            this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n\n            if (!this.#isDisabling && editor.annotationElementId) {\n              this.#uiManager.addDeletedAnnotationElement(editor);\n            }\n          }\n\n          remove(editor) {\n            this.detach(editor);\n            this.#uiManager.removeEditor(editor);\n\n            if (editor.div.contains(document.activeElement)) {\n              setTimeout(() => {\n                this.#uiManager.focusMainContainer();\n              }, 0);\n            }\n\n            editor.div.remove();\n            editor.isAttachedToDOM = false;\n\n            if (!this.#isCleaningUp) {\n              this.addInkEditorIfNeeded(false);\n            }\n          }\n\n          changeParent(editor) {\n            if (editor.parent === this) {\n              return;\n            }\n\n            if (editor.annotationElementId) {\n              this.#uiManager.addDeletedAnnotationElement(editor.annotationElementId);\n\n              _editor.AnnotationEditor.deleteAnnotationElement(editor);\n\n              editor.annotationElementId = null;\n            }\n\n            this.attach(editor);\n            editor.parent?.detach(editor);\n            editor.setParent(this);\n\n            if (editor.div && editor.isAttachedToDOM) {\n              editor.div.remove();\n              this.div.append(editor.div);\n            }\n          }\n\n          add(editor) {\n            this.changeParent(editor);\n            this.#uiManager.addEditor(editor);\n            this.attach(editor);\n\n            if (!editor.isAttachedToDOM) {\n              const div = editor.render();\n              this.div.append(div);\n              editor.isAttachedToDOM = true;\n            }\n\n            editor.fixAndSetPosition();\n            editor.onceAdded();\n            this.#uiManager.addToAnnotationStorage(editor);\n          }\n\n          moveEditorInDOM(editor) {\n            if (!editor.isAttachedToDOM) {\n              return;\n            }\n\n            const {\n              activeElement\n            } = document;\n\n            if (editor.div.contains(activeElement)) {\n              editor._focusEventsAllowed = false;\n              setTimeout(() => {\n                if (!editor.div.contains(document.activeElement)) {\n                  editor.div.addEventListener(\"focusin\", () => {\n                    editor._focusEventsAllowed = true;\n                  }, {\n                    once: true\n                  });\n                  activeElement.focus();\n                } else {\n                  editor._focusEventsAllowed = true;\n                }\n              }, 0);\n            }\n\n            editor._structTreeParentId = this.#accessibilityManager?.moveElementInDOM(this.div, editor.div, editor.contentDiv, true);\n          }\n\n          addOrRebuild(editor) {\n            if (editor.needsToBeRebuilt()) {\n              editor.rebuild();\n            } else {\n              this.add(editor);\n            }\n          }\n\n          addUndoableEditor(editor) {\n            const cmd = () => editor._uiManager.rebuild(editor);\n\n            const undo = () => {\n              editor.remove();\n            };\n\n            this.addCommands({\n              cmd,\n              undo,\n              mustExec: false\n            });\n          }\n\n          getNextId() {\n            return this.#uiManager.getId();\n          }\n\n          #createNewEditor(params) {\n            switch (this.#uiManager.getMode()) {\n              case _util.AnnotationEditorType.FREETEXT:\n                return new _freetext.FreeTextEditor(params);\n\n              case _util.AnnotationEditorType.INK:\n                return new _ink.InkEditor(params);\n\n              case _util.AnnotationEditorType.STAMP:\n                return new _stamp.StampEditor(params);\n            }\n\n            return null;\n          }\n\n          pasteEditor(mode, params) {\n            this.#uiManager.updateToolbar(mode);\n            this.#uiManager.updateMode(mode);\n            const {\n              offsetX,\n              offsetY\n            } = this.#getCenterPoint();\n            const id = this.getNextId();\n            const editor = this.#createNewEditor({\n              parent: this,\n              id,\n              x: offsetX,\n              y: offsetY,\n              uiManager: this.#uiManager,\n              isCentered: true,\n              ...params\n            });\n\n            if (editor) {\n              this.add(editor);\n            }\n          }\n\n          deserialize(data) {\n            switch (data.annotationType ?? data.annotationEditorType) {\n              case _util.AnnotationEditorType.FREETEXT:\n                return _freetext.FreeTextEditor.deserialize(data, this, this.#uiManager);\n\n              case _util.AnnotationEditorType.INK:\n                return _ink.InkEditor.deserialize(data, this, this.#uiManager);\n\n              case _util.AnnotationEditorType.STAMP:\n                return _stamp.StampEditor.deserialize(data, this, this.#uiManager);\n            }\n\n            return null;\n          }\n\n          #createAndAddNewEditor(event, isCentered) {\n            const id = this.getNextId();\n            const editor = this.#createNewEditor({\n              parent: this,\n              id,\n              x: event.offsetX,\n              y: event.offsetY,\n              uiManager: this.#uiManager,\n              isCentered\n            });\n\n            if (editor) {\n              this.add(editor);\n            }\n\n            return editor;\n          }\n\n          #getCenterPoint() {\n            const {\n              x,\n              y,\n              width,\n              height\n            } = this.div.getBoundingClientRect();\n            const tlX = Math.max(0, x);\n            const tlY = Math.max(0, y);\n            const brX = Math.min(window.innerWidth, x + width);\n            const brY = Math.min(window.innerHeight, y + height);\n            const centerX = (tlX + brX) / 2 - x;\n            const centerY = (tlY + brY) / 2 - y;\n            const [offsetX, offsetY] = this.viewport.rotation % 180 === 0 ? [centerX, centerY] : [centerY, centerX];\n            return {\n              offsetX,\n              offsetY\n            };\n          }\n\n          addNewEditor() {\n            this.#createAndAddNewEditor(this.#getCenterPoint(), true);\n          }\n\n          setSelected(editor) {\n            this.#uiManager.setSelected(editor);\n          }\n\n          toggleSelected(editor) {\n            this.#uiManager.toggleSelected(editor);\n          }\n\n          isSelected(editor) {\n            return this.#uiManager.isSelected(editor);\n          }\n\n          unselect(editor) {\n            this.#uiManager.unselect(editor);\n          }\n\n          pointerup(event) {\n            const {\n              isMac\n            } = _util.FeatureTest.platform;\n\n            if (event.button !== 0 || event.ctrlKey && isMac) {\n              return;\n            }\n\n            if (event.target !== this.div) {\n              return;\n            }\n\n            if (!this.#hadPointerDown) {\n              return;\n            }\n\n            this.#hadPointerDown = false;\n\n            if (!this.#allowClick) {\n              this.#allowClick = true;\n              return;\n            }\n\n            if (this.#uiManager.getMode() === _util.AnnotationEditorType.STAMP) {\n              this.#uiManager.unselectAll();\n              return;\n            }\n\n            this.#createAndAddNewEditor(event, false);\n          }\n\n          pointerdown(event) {\n            if (this.#hadPointerDown) {\n              this.#hadPointerDown = false;\n              return;\n            }\n\n            const {\n              isMac\n            } = _util.FeatureTest.platform;\n\n            if (event.button !== 0 || event.ctrlKey && isMac) {\n              return;\n            }\n\n            if (event.target !== this.div) {\n              return;\n            }\n\n            this.#hadPointerDown = true;\n            const editor = this.#uiManager.getActive();\n            this.#allowClick = !editor || editor.isEmpty();\n          }\n\n          findNewParent(editor, x, y) {\n            const layer = this.#uiManager.findParent(x, y);\n\n            if (layer === null || layer === this) {\n              return false;\n            }\n\n            layer.changeParent(editor);\n            return true;\n          }\n\n          destroy() {\n            if (this.#uiManager.getActive()?.parent === this) {\n              this.#uiManager.commitOrRemove();\n              this.#uiManager.setActiveEditor(null);\n            }\n\n            for (const editor of this.#editors.values()) {\n              this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n              editor.setParent(null);\n              editor.isAttachedToDOM = false;\n              editor.div.remove();\n            }\n\n            this.div = null;\n            this.#editors.clear();\n            this.#uiManager.removeLayer(this);\n          }\n\n          #cleanup() {\n            this.#isCleaningUp = true;\n\n            for (const editor of this.#editors.values()) {\n              if (editor.isEmpty()) {\n                editor.remove();\n              }\n            }\n\n            this.#isCleaningUp = false;\n          }\n\n          render(_ref42) {\n            let {\n              viewport\n            } = _ref42;\n            this.viewport = viewport;\n            (0, _display_utils.setLayerDimensions)(this.div, viewport);\n\n            for (const editor of this.#uiManager.getEditors(this.pageIndex)) {\n              this.add(editor);\n            }\n\n            this.updateMode();\n          }\n\n          update(_ref43) {\n            let {\n              viewport\n            } = _ref43;\n            this.#uiManager.commitOrRemove();\n            this.viewport = viewport;\n            (0, _display_utils.setLayerDimensions)(this.div, {\n              rotation: viewport.rotation\n            });\n            this.updateMode();\n          }\n\n          get pageDimensions() {\n            const {\n              pageWidth,\n              pageHeight\n            } = this.viewport.rawDims;\n            return [pageWidth, pageHeight];\n          }\n\n        }\n\n        exports.AnnotationEditorLayer = AnnotationEditorLayer;\n        /***/\n      },\n      /* 28 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.FreeTextEditor = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _tools = __w_pdfjs_require__(5);\n\n        var _editor = __w_pdfjs_require__(4);\n\n        var _annotation_layer = __w_pdfjs_require__(29);\n\n        class FreeTextEditor extends _editor.AnnotationEditor {\n          #boundEditorDivBlur = this.editorDivBlur.bind(this);\n          #boundEditorDivFocus = this.editorDivFocus.bind(this);\n          #boundEditorDivInput = this.editorDivInput.bind(this);\n          #boundEditorDivKeydown = this.editorDivKeydown.bind(this);\n          #color;\n          #content = \"\";\n          #editorDivId = `${this.id}-editor`;\n          #fontSize;\n          #initialData = null;\n          static _freeTextDefaultContent = \"\";\n          static _internalPadding = 0;\n          static _defaultColor = null;\n          static _defaultFontSize = 10;\n\n          static get _keyboardManager() {\n            const proto = FreeTextEditor.prototype;\n\n            const arrowChecker = self => self.isEmpty();\n\n            const small = _tools.AnnotationEditorUIManager.TRANSLATE_SMALL;\n            const big = _tools.AnnotationEditorUIManager.TRANSLATE_BIG;\n            return (0, _util.shadow)(this, \"_keyboardManager\", new _tools.KeyboardManager([[[\"ctrl+s\", \"mac+meta+s\", \"ctrl+p\", \"mac+meta+p\"], proto.commitOrRemove, {\n              bubbles: true\n            }], [[\"ctrl+Enter\", \"mac+meta+Enter\", \"Escape\", \"mac+Escape\"], proto.commitOrRemove], [[\"ArrowLeft\", \"mac+ArrowLeft\"], proto._translateEmpty, {\n              args: [-small, 0],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"], proto._translateEmpty, {\n              args: [-big, 0],\n              checker: arrowChecker\n            }], [[\"ArrowRight\", \"mac+ArrowRight\"], proto._translateEmpty, {\n              args: [small, 0],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"], proto._translateEmpty, {\n              args: [big, 0],\n              checker: arrowChecker\n            }], [[\"ArrowUp\", \"mac+ArrowUp\"], proto._translateEmpty, {\n              args: [0, -small],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"], proto._translateEmpty, {\n              args: [0, -big],\n              checker: arrowChecker\n            }], [[\"ArrowDown\", \"mac+ArrowDown\"], proto._translateEmpty, {\n              args: [0, small],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"], proto._translateEmpty, {\n              args: [0, big],\n              checker: arrowChecker\n            }]]));\n          }\n\n          static _type = \"freetext\";\n\n          constructor(params) {\n            super({ ...params,\n              name: \"freeTextEditor\"\n            });\n            this.#color = params.color || FreeTextEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor;\n            this.#fontSize = params.fontSize || FreeTextEditor._defaultFontSize;\n          }\n\n          static initialize(l10n) {\n            _editor.AnnotationEditor.initialize(l10n, {\n              strings: [\"free_text2_default_content\", \"editor_free_text2_aria_label\"]\n            });\n\n            const style = getComputedStyle(document.documentElement);\n            this._internalPadding = parseFloat(style.getPropertyValue(\"--freetext-padding\"));\n          }\n\n          static updateDefaultParams(type, value) {\n            switch (type) {\n              case _util.AnnotationEditorParamsType.FREETEXT_SIZE:\n                FreeTextEditor._defaultFontSize = value;\n                break;\n\n              case _util.AnnotationEditorParamsType.FREETEXT_COLOR:\n                FreeTextEditor._defaultColor = value;\n                break;\n            }\n          }\n\n          updateParams(type, value) {\n            switch (type) {\n              case _util.AnnotationEditorParamsType.FREETEXT_SIZE:\n                this.#updateFontSize(value);\n                break;\n\n              case _util.AnnotationEditorParamsType.FREETEXT_COLOR:\n                this.#updateColor(value);\n                break;\n            }\n          }\n\n          static get defaultPropertiesToUpdate() {\n            return [[_util.AnnotationEditorParamsType.FREETEXT_SIZE, FreeTextEditor._defaultFontSize], [_util.AnnotationEditorParamsType.FREETEXT_COLOR, FreeTextEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor]];\n          }\n\n          get propertiesToUpdate() {\n            return [[_util.AnnotationEditorParamsType.FREETEXT_SIZE, this.#fontSize], [_util.AnnotationEditorParamsType.FREETEXT_COLOR, this.#color]];\n          }\n\n          #updateFontSize(fontSize) {\n            const setFontsize = size => {\n              this.editorDiv.style.fontSize = `calc(${size}px * var(--scale-factor))`;\n              this.translate(0, -(size - this.#fontSize) * this.parentScale);\n              this.#fontSize = size;\n              this.#setEditorDimensions();\n            };\n\n            const savedFontsize = this.#fontSize;\n            this.addCommands({\n              cmd: () => {\n                setFontsize(fontSize);\n              },\n              undo: () => {\n                setFontsize(savedFontsize);\n              },\n              mustExec: true,\n              type: _util.AnnotationEditorParamsType.FREETEXT_SIZE,\n              overwriteIfSameType: true,\n              keepUndo: true\n            });\n          }\n\n          #updateColor(color) {\n            const savedColor = this.#color;\n            this.addCommands({\n              cmd: () => {\n                this.#color = this.editorDiv.style.color = color;\n              },\n              undo: () => {\n                this.#color = this.editorDiv.style.color = savedColor;\n              },\n              mustExec: true,\n              type: _util.AnnotationEditorParamsType.FREETEXT_COLOR,\n              overwriteIfSameType: true,\n              keepUndo: true\n            });\n          }\n\n          _translateEmpty(x, y) {\n            this._uiManager.translateSelectedEditors(x, y, true);\n          }\n\n          getInitialTranslation() {\n            const scale = this.parentScale;\n            return [-FreeTextEditor._internalPadding * scale, -(FreeTextEditor._internalPadding + this.#fontSize) * scale];\n          }\n\n          rebuild() {\n            if (!this.parent) {\n              return;\n            }\n\n            super.rebuild();\n\n            if (this.div === null) {\n              return;\n            }\n\n            if (!this.isAttachedToDOM) {\n              this.parent.add(this);\n            }\n          }\n\n          enableEditMode() {\n            if (this.isInEditMode()) {\n              return;\n            }\n\n            this.parent.setEditingState(false);\n            this.parent.updateToolbar(_util.AnnotationEditorType.FREETEXT);\n            super.enableEditMode();\n            this.overlayDiv.classList.remove(\"enabled\");\n            this.editorDiv.contentEditable = true;\n            this._isDraggable = false;\n            this.div.removeAttribute(\"aria-activedescendant\");\n            this.editorDiv.addEventListener(\"keydown\", this.#boundEditorDivKeydown);\n            this.editorDiv.addEventListener(\"focus\", this.#boundEditorDivFocus);\n            this.editorDiv.addEventListener(\"blur\", this.#boundEditorDivBlur);\n            this.editorDiv.addEventListener(\"input\", this.#boundEditorDivInput);\n          }\n\n          disableEditMode() {\n            if (!this.isInEditMode()) {\n              return;\n            }\n\n            this.parent.setEditingState(true);\n            super.disableEditMode();\n            this.overlayDiv.classList.add(\"enabled\");\n            this.editorDiv.contentEditable = false;\n            this.div.setAttribute(\"aria-activedescendant\", this.#editorDivId);\n            this._isDraggable = true;\n            this.editorDiv.removeEventListener(\"keydown\", this.#boundEditorDivKeydown);\n            this.editorDiv.removeEventListener(\"focus\", this.#boundEditorDivFocus);\n            this.editorDiv.removeEventListener(\"blur\", this.#boundEditorDivBlur);\n            this.editorDiv.removeEventListener(\"input\", this.#boundEditorDivInput);\n            this.div.focus({\n              preventScroll: true\n            });\n            this.isEditing = false;\n            this.parent.div.classList.add(\"freeTextEditing\");\n          }\n\n          focusin(event) {\n            if (!this._focusEventsAllowed) {\n              return;\n            }\n\n            super.focusin(event);\n\n            if (event.target !== this.editorDiv) {\n              this.editorDiv.focus();\n            }\n          }\n\n          onceAdded() {\n            if (this.width) {\n              this.#cheatInitialRect();\n              return;\n            }\n\n            this.enableEditMode();\n            this.editorDiv.focus();\n\n            if (this._initialOptions?.isCentered) {\n              this.center();\n            }\n\n            this._initialOptions = null;\n          }\n\n          isEmpty() {\n            return !this.editorDiv || this.editorDiv.innerText.trim() === \"\";\n          }\n\n          remove() {\n            this.isEditing = false;\n\n            if (this.parent) {\n              this.parent.setEditingState(true);\n              this.parent.div.classList.add(\"freeTextEditing\");\n            }\n\n            super.remove();\n          }\n\n          #extractText() {\n            const divs = this.editorDiv.getElementsByTagName(\"div\");\n\n            if (divs.length === 0) {\n              return this.editorDiv.innerText;\n            }\n\n            const buffer = [];\n\n            for (const div of divs) {\n              buffer.push(div.innerText.replace(/\\r\\n?|\\n/, \"\"));\n            }\n\n            return buffer.join(\"\\n\");\n          }\n\n          #setEditorDimensions() {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            let rect;\n\n            if (this.isAttachedToDOM) {\n              rect = this.div.getBoundingClientRect();\n            } else {\n              const {\n                currentLayer,\n                div\n              } = this;\n              const savedDisplay = div.style.display;\n              div.style.display = \"hidden\";\n              currentLayer.div.append(this.div);\n              rect = div.getBoundingClientRect();\n              div.remove();\n              div.style.display = savedDisplay;\n            }\n\n            if (this.rotation % 180 === this.parentRotation % 180) {\n              this.width = rect.width / parentWidth;\n              this.height = rect.height / parentHeight;\n            } else {\n              this.width = rect.height / parentWidth;\n              this.height = rect.width / parentHeight;\n            }\n\n            this.fixAndSetPosition();\n          }\n\n          commit() {\n            if (!this.isInEditMode()) {\n              return;\n            }\n\n            super.commit();\n            this.disableEditMode();\n            const savedText = this.#content;\n            const newText = this.#content = this.#extractText().trimEnd();\n\n            if (savedText === newText) {\n              return;\n            }\n\n            const setText = text => {\n              this.#content = text;\n\n              if (!text) {\n                this.remove();\n                return;\n              }\n\n              this.#setContent();\n\n              this._uiManager.rebuild(this);\n\n              this.#setEditorDimensions();\n            };\n\n            this.addCommands({\n              cmd: () => {\n                setText(newText);\n              },\n              undo: () => {\n                setText(savedText);\n              },\n              mustExec: false\n            });\n            this.#setEditorDimensions();\n          }\n\n          shouldGetKeyboardEvents() {\n            return this.isInEditMode();\n          }\n\n          enterInEditMode() {\n            this.enableEditMode();\n            this.editorDiv.focus();\n          }\n\n          dblclick(event) {\n            this.enterInEditMode();\n          }\n\n          keydown(event) {\n            if (event.target === this.div && event.key === \"Enter\") {\n              this.enterInEditMode();\n              event.preventDefault();\n            }\n          }\n\n          editorDivKeydown(event) {\n            FreeTextEditor._keyboardManager.exec(this, event);\n          }\n\n          editorDivFocus(event) {\n            this.isEditing = true;\n          }\n\n          editorDivBlur(event) {\n            this.isEditing = false;\n          }\n\n          editorDivInput(event) {\n            this.parent.div.classList.toggle(\"freeTextEditing\", this.isEmpty());\n          }\n\n          disableEditing() {\n            this.editorDiv.setAttribute(\"role\", \"comment\");\n            this.editorDiv.removeAttribute(\"aria-multiline\");\n          }\n\n          enableEditing() {\n            this.editorDiv.setAttribute(\"role\", \"textbox\");\n            this.editorDiv.setAttribute(\"aria-multiline\", true);\n          }\n\n          render() {\n            if (this.div) {\n              return this.div;\n            }\n\n            let baseX, baseY;\n\n            if (this.width) {\n              baseX = this.x;\n              baseY = this.y;\n            }\n\n            super.render();\n            this.editorDiv = document.createElement(\"div\");\n            this.editorDiv.className = \"internal\";\n            this.editorDiv.setAttribute(\"id\", this.#editorDivId);\n            this.enableEditing();\n\n            _editor.AnnotationEditor._l10nPromise.get(\"editor_free_text2_aria_label\").then(msg => this.editorDiv?.setAttribute(\"aria-label\", msg));\n\n            _editor.AnnotationEditor._l10nPromise.get(\"free_text2_default_content\").then(msg => this.editorDiv?.setAttribute(\"default-content\", msg));\n\n            this.editorDiv.contentEditable = true;\n            const {\n              style\n            } = this.editorDiv;\n            style.fontSize = `calc(${this.#fontSize}px * var(--scale-factor))`;\n            style.color = this.#color;\n            this.div.append(this.editorDiv);\n            this.overlayDiv = document.createElement(\"div\");\n            this.overlayDiv.classList.add(\"overlay\", \"enabled\");\n            this.div.append(this.overlayDiv);\n            (0, _tools.bindEvents)(this, this.div, [\"dblclick\", \"keydown\"]);\n\n            if (this.width) {\n              const [parentWidth, parentHeight] = this.parentDimensions;\n\n              if (this.annotationElementId) {\n                const {\n                  position\n                } = this.#initialData;\n                let [tx, ty] = this.getInitialTranslation();\n                [tx, ty] = this.pageTranslationToScreen(tx, ty);\n                const [pageWidth, pageHeight] = this.pageDimensions;\n                const [pageX, pageY] = this.pageTranslation;\n                let posX, posY;\n\n                switch (this.rotation) {\n                  case 0:\n                    posX = baseX + (position[0] - pageX) / pageWidth;\n                    posY = baseY + this.height - (position[1] - pageY) / pageHeight;\n                    break;\n\n                  case 90:\n                    posX = baseX + (position[0] - pageX) / pageWidth;\n                    posY = baseY - (position[1] - pageY) / pageHeight;\n                    [tx, ty] = [ty, -tx];\n                    break;\n\n                  case 180:\n                    posX = baseX - this.width + (position[0] - pageX) / pageWidth;\n                    posY = baseY - (position[1] - pageY) / pageHeight;\n                    [tx, ty] = [-tx, -ty];\n                    break;\n\n                  case 270:\n                    posX = baseX + (position[0] - pageX - this.height * pageHeight) / pageWidth;\n                    posY = baseY + (position[1] - pageY - this.width * pageWidth) / pageHeight;\n                    [tx, ty] = [-ty, tx];\n                    break;\n                }\n\n                this.setAt(posX * parentWidth, posY * parentHeight, tx, ty);\n              } else {\n                this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n              }\n\n              this.#setContent();\n              this._isDraggable = true;\n              this.editorDiv.contentEditable = false;\n            } else {\n              this._isDraggable = false;\n              this.editorDiv.contentEditable = true;\n            }\n\n            return this.div;\n          }\n\n          #setContent() {\n            this.editorDiv.replaceChildren();\n\n            if (!this.#content) {\n              return;\n            }\n\n            for (const line of this.#content.split(\"\\n\")) {\n              const div = document.createElement(\"div\");\n              div.append(line ? document.createTextNode(line) : document.createElement(\"br\"));\n              this.editorDiv.append(div);\n            }\n          }\n\n          get contentDiv() {\n            return this.editorDiv;\n          }\n\n          static deserialize(data, parent, uiManager) {\n            let initialData = null;\n\n            if (data instanceof _annotation_layer.FreeTextAnnotationElement) {\n              const {\n                data: {\n                  defaultAppearanceData: {\n                    fontSize,\n                    fontColor\n                  },\n                  rect,\n                  rotation,\n                  id\n                },\n                textContent,\n                textPosition,\n                parent: {\n                  page: {\n                    pageNumber\n                  }\n                }\n              } = data;\n\n              if (!textContent || textContent.length === 0) {\n                return null;\n              }\n\n              initialData = data = {\n                annotationType: _util.AnnotationEditorType.FREETEXT,\n                color: Array.from(fontColor),\n                fontSize,\n                value: textContent.join(\"\\n\"),\n                position: textPosition,\n                pageIndex: pageNumber - 1,\n                rect,\n                rotation,\n                id,\n                deleted: false\n              };\n            }\n\n            const editor = super.deserialize(data, parent, uiManager);\n            editor.#fontSize = data.fontSize;\n            editor.#color = _util.Util.makeHexColor(...data.color);\n            editor.#content = data.value;\n            editor.annotationElementId = data.id || null;\n            editor.#initialData = initialData;\n            return editor;\n          }\n\n          serialize() {\n            let isForCopying = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (this.isEmpty()) {\n              return null;\n            }\n\n            if (this.deleted) {\n              return {\n                pageIndex: this.pageIndex,\n                id: this.annotationElementId,\n                deleted: true\n              };\n            }\n\n            const padding = FreeTextEditor._internalPadding * this.parentScale;\n            const rect = this.getRect(padding, padding);\n\n            const color = _editor.AnnotationEditor._colorManager.convert(this.isAttachedToDOM ? getComputedStyle(this.editorDiv).color : this.#color);\n\n            const serialized = {\n              annotationType: _util.AnnotationEditorType.FREETEXT,\n              color,\n              fontSize: this.#fontSize,\n              value: this.#content,\n              pageIndex: this.pageIndex,\n              rect,\n              rotation: this.rotation,\n              structTreeParentId: this._structTreeParentId\n            };\n\n            if (isForCopying) {\n              return serialized;\n            }\n\n            if (this.annotationElementId && !this.#hasElementChanged(serialized)) {\n              return null;\n            }\n\n            serialized.id = this.annotationElementId;\n            return serialized;\n          }\n\n          #hasElementChanged(serialized) {\n            const {\n              value,\n              fontSize,\n              color,\n              rect,\n              pageIndex\n            } = this.#initialData;\n            return serialized.value !== value || serialized.fontSize !== fontSize || serialized.rect.some((x, i) => Math.abs(x - rect[i]) >= 1) || serialized.color.some((c, i) => c !== color[i]) || serialized.pageIndex !== pageIndex;\n          }\n\n          #cheatInitialRect() {\n            let delayed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (!this.annotationElementId) {\n              return;\n            }\n\n            this.#setEditorDimensions();\n\n            if (!delayed && (this.width === 0 || this.height === 0)) {\n              setTimeout(() => this.#cheatInitialRect(true), 0);\n              return;\n            }\n\n            const padding = FreeTextEditor._internalPadding * this.parentScale;\n            this.#initialData.rect = this.getRect(padding, padding);\n          }\n\n        }\n\n        exports.FreeTextEditor = FreeTextEditor;\n        /***/\n      },\n      /* 29 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.StampAnnotationElement = exports.InkAnnotationElement = exports.FreeTextAnnotationElement = exports.AnnotationLayer = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _display_utils = __w_pdfjs_require__(6);\n\n        var _annotation_storage = __w_pdfjs_require__(3);\n\n        var _scripting_utils = __w_pdfjs_require__(30);\n\n        var _displayL10n_utils = __w_pdfjs_require__(31);\n\n        var _xfa_layer = __w_pdfjs_require__(32);\n\n        const DEFAULT_TAB_INDEX = 1000;\n        const DEFAULT_FONT_SIZE = 9;\n        const GetElementsByNameSet = new WeakSet();\n\n        function getRectDims(rect) {\n          return {\n            width: rect[2] - rect[0],\n            height: rect[3] - rect[1]\n          };\n        }\n\n        class AnnotationElementFactory {\n          static create(parameters) {\n            const subtype = parameters.data.annotationType;\n\n            switch (subtype) {\n              case _util.AnnotationType.LINK:\n                return new LinkAnnotationElement(parameters);\n\n              case _util.AnnotationType.TEXT:\n                return new TextAnnotationElement(parameters);\n\n              case _util.AnnotationType.WIDGET:\n                const fieldType = parameters.data.fieldType;\n\n                switch (fieldType) {\n                  case \"Tx\":\n                    return new TextWidgetAnnotationElement(parameters);\n\n                  case \"Btn\":\n                    if (parameters.data.radioButton) {\n                      return new RadioButtonWidgetAnnotationElement(parameters);\n                    } else if (parameters.data.checkBox) {\n                      return new CheckboxWidgetAnnotationElement(parameters);\n                    }\n\n                    return new PushButtonWidgetAnnotationElement(parameters);\n\n                  case \"Ch\":\n                    return new ChoiceWidgetAnnotationElement(parameters);\n\n                  case \"Sig\":\n                    return new SignatureWidgetAnnotationElement(parameters);\n                }\n\n                return new WidgetAnnotationElement(parameters);\n\n              case _util.AnnotationType.POPUP:\n                return new PopupAnnotationElement(parameters);\n\n              case _util.AnnotationType.FREETEXT:\n                return new FreeTextAnnotationElement(parameters);\n\n              case _util.AnnotationType.LINE:\n                return new LineAnnotationElement(parameters);\n\n              case _util.AnnotationType.SQUARE:\n                return new SquareAnnotationElement(parameters);\n\n              case _util.AnnotationType.CIRCLE:\n                return new CircleAnnotationElement(parameters);\n\n              case _util.AnnotationType.POLYLINE:\n                return new PolylineAnnotationElement(parameters);\n\n              case _util.AnnotationType.CARET:\n                return new CaretAnnotationElement(parameters);\n\n              case _util.AnnotationType.INK:\n                return new InkAnnotationElement(parameters);\n\n              case _util.AnnotationType.POLYGON:\n                return new PolygonAnnotationElement(parameters);\n\n              case _util.AnnotationType.HIGHLIGHT:\n                return new HighlightAnnotationElement(parameters);\n\n              case _util.AnnotationType.UNDERLINE:\n                return new UnderlineAnnotationElement(parameters);\n\n              case _util.AnnotationType.SQUIGGLY:\n                return new SquigglyAnnotationElement(parameters);\n\n              case _util.AnnotationType.STRIKEOUT:\n                return new StrikeOutAnnotationElement(parameters);\n\n              case _util.AnnotationType.STAMP:\n                return new StampAnnotationElement(parameters);\n\n              case _util.AnnotationType.FILEATTACHMENT:\n                return new FileAttachmentAnnotationElement(parameters);\n\n              default:\n                return new AnnotationElement(parameters);\n            }\n          }\n\n        }\n\n        class AnnotationElement {\n          #hasBorder = false;\n\n          constructor(parameters) {\n            let {\n              isRenderable = false,\n              ignoreBorder = false,\n              createQuadrilaterals = false\n            } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            this.isRenderable = isRenderable;\n            this.data = parameters.data;\n            this.layer = parameters.layer;\n            this.linkService = parameters.linkService;\n            this.downloadManager = parameters.downloadManager;\n            this.imageResourcesPath = parameters.imageResourcesPath;\n            this.renderForms = parameters.renderForms;\n            this.svgFactory = parameters.svgFactory;\n            this.annotationStorage = parameters.annotationStorage;\n            this.enableScripting = parameters.enableScripting;\n            this.hasJSActions = parameters.hasJSActions;\n            this._fieldObjects = parameters.fieldObjects;\n            this.parent = parameters.parent;\n\n            if (isRenderable) {\n              this.container = this._createContainer(ignoreBorder);\n            }\n\n            if (createQuadrilaterals) {\n              this._createQuadrilaterals();\n            }\n          }\n\n          static _hasPopupData(_ref44) {\n            let {\n              titleObj,\n              contentsObj,\n              richText\n            } = _ref44;\n            return !!(titleObj?.str || contentsObj?.str || richText?.str);\n          }\n\n          get hasPopupData() {\n            return AnnotationElement._hasPopupData(this.data);\n          }\n\n          _createContainer(ignoreBorder) {\n            const {\n              data,\n              parent: {\n                page,\n                viewport\n              }\n            } = this;\n            const container = document.createElement(\"section\");\n            container.setAttribute(\"data-annotation-id\", data.id);\n\n            if (!(this instanceof WidgetAnnotationElement)) {\n              container.tabIndex = DEFAULT_TAB_INDEX;\n            }\n\n            container.style.zIndex = this.parent.zIndex++;\n\n            if (this.data.popupRef) {\n              container.setAttribute(\"aria-haspopup\", \"dialog\");\n            }\n\n            if (data.noRotate) {\n              container.classList.add(\"norotate\");\n            }\n\n            const {\n              pageWidth,\n              pageHeight,\n              pageX,\n              pageY\n            } = viewport.rawDims;\n\n            if (!data.rect || this instanceof PopupAnnotationElement) {\n              const {\n                rotation\n              } = data;\n\n              if (!data.hasOwnCanvas && rotation !== 0) {\n                this.setRotation(rotation, container);\n              }\n\n              return container;\n            }\n\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n\n            const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n\n            if (!ignoreBorder && data.borderStyle.width > 0) {\n              container.style.borderWidth = `${data.borderStyle.width}px`;\n              const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n              const verticalRadius = data.borderStyle.verticalCornerRadius;\n\n              if (horizontalRadius > 0 || verticalRadius > 0) {\n                const radius = `calc(${horizontalRadius}px * var(--scale-factor)) / calc(${verticalRadius}px * var(--scale-factor))`;\n                container.style.borderRadius = radius;\n              } else if (this instanceof RadioButtonWidgetAnnotationElement) {\n                const radius = `calc(${width}px * var(--scale-factor)) / calc(${height}px * var(--scale-factor))`;\n                container.style.borderRadius = radius;\n              }\n\n              switch (data.borderStyle.style) {\n                case _util.AnnotationBorderStyleType.SOLID:\n                  container.style.borderStyle = \"solid\";\n                  break;\n\n                case _util.AnnotationBorderStyleType.DASHED:\n                  container.style.borderStyle = \"dashed\";\n                  break;\n\n                case _util.AnnotationBorderStyleType.BEVELED:\n                  (0, _util.warn)(\"Unimplemented border style: beveled\");\n                  break;\n\n                case _util.AnnotationBorderStyleType.INSET:\n                  (0, _util.warn)(\"Unimplemented border style: inset\");\n                  break;\n\n                case _util.AnnotationBorderStyleType.UNDERLINE:\n                  container.style.borderBottomStyle = \"solid\";\n                  break;\n\n                default:\n                  break;\n              }\n\n              const borderColor = data.borderColor || null;\n\n              if (borderColor) {\n                this.#hasBorder = true;\n                container.style.borderColor = _util.Util.makeHexColor(borderColor[0] | 0, borderColor[1] | 0, borderColor[2] | 0);\n              } else {\n                container.style.borderWidth = 0;\n              }\n            }\n\n            container.style.left = `${100 * (rect[0] - pageX) / pageWidth}%`;\n            container.style.top = `${100 * (rect[1] - pageY) / pageHeight}%`;\n            const {\n              rotation\n            } = data;\n\n            if (data.hasOwnCanvas || rotation === 0) {\n              container.style.width = `${100 * width / pageWidth}%`;\n              container.style.height = `${100 * height / pageHeight}%`;\n            } else {\n              this.setRotation(rotation, container);\n            }\n\n            return container;\n          }\n\n          setRotation(angle) {\n            let container = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.container;\n\n            if (!this.data.rect) {\n              return;\n            }\n\n            const {\n              pageWidth,\n              pageHeight\n            } = this.parent.viewport.rawDims;\n            const {\n              width,\n              height\n            } = getRectDims(this.data.rect);\n            let elementWidth, elementHeight;\n\n            if (angle % 180 === 0) {\n              elementWidth = 100 * width / pageWidth;\n              elementHeight = 100 * height / pageHeight;\n            } else {\n              elementWidth = 100 * height / pageWidth;\n              elementHeight = 100 * width / pageHeight;\n            }\n\n            container.style.width = `${elementWidth}%`;\n            container.style.height = `${elementHeight}%`;\n            container.setAttribute(\"data-main-rotation\", (360 - angle) % 360);\n          }\n\n          get _commonActions() {\n            const setColor = (jsName, styleName, event) => {\n              const color = event.detail[jsName];\n              const colorType = color[0];\n              const colorArray = color.slice(1);\n              event.target.style[styleName] = _scripting_utils.ColorConverters[`${colorType}_HTML`](colorArray);\n              this.annotationStorage.setValue(this.data.id, {\n                [styleName]: _scripting_utils.ColorConverters[`${colorType}_rgb`](colorArray)\n              });\n            };\n\n            return (0, _util.shadow)(this, \"_commonActions\", {\n              display: event => {\n                const {\n                  display\n                } = event.detail;\n                const hidden = display % 2 === 1;\n                this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n                this.annotationStorage.setValue(this.data.id, {\n                  noView: hidden,\n                  noPrint: display === 1 || display === 2\n                });\n              },\n              print: event => {\n                this.annotationStorage.setValue(this.data.id, {\n                  noPrint: !event.detail.print\n                });\n              },\n              hidden: event => {\n                const {\n                  hidden\n                } = event.detail;\n                this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n                this.annotationStorage.setValue(this.data.id, {\n                  noPrint: hidden,\n                  noView: hidden\n                });\n              },\n              focus: event => {\n                setTimeout(() => event.target.focus({\n                  preventScroll: false\n                }), 0);\n              },\n              userName: event => {\n                event.target.title = event.detail.userName;\n              },\n              readonly: event => {\n                event.target.disabled = event.detail.readonly;\n              },\n              required: event => {\n                this._setRequired(event.target, event.detail.required);\n              },\n              bgColor: event => {\n                setColor(\"bgColor\", \"backgroundColor\", event);\n              },\n              fillColor: event => {\n                setColor(\"fillColor\", \"backgroundColor\", event);\n              },\n              fgColor: event => {\n                setColor(\"fgColor\", \"color\", event);\n              },\n              textColor: event => {\n                setColor(\"textColor\", \"color\", event);\n              },\n              borderColor: event => {\n                setColor(\"borderColor\", \"borderColor\", event);\n              },\n              strokeColor: event => {\n                setColor(\"strokeColor\", \"borderColor\", event);\n              },\n              rotation: event => {\n                const angle = event.detail.rotation;\n                this.setRotation(angle);\n                this.annotationStorage.setValue(this.data.id, {\n                  rotation: angle\n                });\n              }\n            });\n          }\n\n          _dispatchEventFromSandbox(actions, jsEvent) {\n            const commonActions = this._commonActions;\n\n            for (const name of Object.keys(jsEvent.detail)) {\n              const action = actions[name] || commonActions[name];\n              action?.(jsEvent);\n            }\n          }\n\n          _setDefaultPropertiesFromJS(element) {\n            if (!this.enableScripting) {\n              return;\n            }\n\n            const storedData = this.annotationStorage.getRawValue(this.data.id);\n\n            if (!storedData) {\n              return;\n            }\n\n            const commonActions = this._commonActions;\n\n            for (const [actionName, detail] of Object.entries(storedData)) {\n              const action = commonActions[actionName];\n\n              if (action) {\n                const eventProxy = {\n                  detail: {\n                    [actionName]: detail\n                  },\n                  target: element\n                };\n                action(eventProxy);\n                delete storedData[actionName];\n              }\n            }\n          }\n\n          _createQuadrilaterals() {\n            if (!this.container) {\n              return;\n            }\n\n            const {\n              quadPoints\n            } = this.data;\n\n            if (!quadPoints) {\n              return;\n            }\n\n            const [rectBlX, rectBlY, rectTrX, rectTrY] = this.data.rect;\n\n            if (quadPoints.length === 1) {\n              const [, {\n                x: trX,\n                y: trY\n              }, {\n                x: blX,\n                y: blY\n              }] = quadPoints[0];\n\n              if (rectTrX === trX && rectTrY === trY && rectBlX === blX && rectBlY === blY) {\n                return;\n              }\n            }\n\n            const {\n              style\n            } = this.container;\n            let svgBuffer;\n\n            if (this.#hasBorder) {\n              const {\n                borderColor,\n                borderWidth\n              } = style;\n              style.borderWidth = 0;\n              svgBuffer = [\"url('data:image/svg+xml;utf8,\", `<svg xmlns=\"http://www.w3.org/2000/svg\"`, ` preserveAspectRatio=\"none\" viewBox=\"0 0 1 1\">`, `<g fill=\"transparent\" stroke=\"${borderColor}\" stroke-width=\"${borderWidth}\">`];\n              this.container.classList.add(\"hasBorder\");\n            }\n\n            const width = rectTrX - rectBlX;\n            const height = rectTrY - rectBlY;\n            const {\n              svgFactory\n            } = this;\n            const svg = svgFactory.createElement(\"svg\");\n            svg.classList.add(\"quadrilateralsContainer\");\n            svg.setAttribute(\"width\", 0);\n            svg.setAttribute(\"height\", 0);\n            const defs = svgFactory.createElement(\"defs\");\n            svg.append(defs);\n            const clipPath = svgFactory.createElement(\"clipPath\");\n            const id = `clippath_${this.data.id}`;\n            clipPath.setAttribute(\"id\", id);\n            clipPath.setAttribute(\"clipPathUnits\", \"objectBoundingBox\");\n            defs.append(clipPath);\n\n            for (const [, {\n              x: trX,\n              y: trY\n            }, {\n              x: blX,\n              y: blY\n            }] of quadPoints) {\n              const rect = svgFactory.createElement(\"rect\");\n              const x = (blX - rectBlX) / width;\n              const y = (rectTrY - trY) / height;\n              const rectWidth = (trX - blX) / width;\n              const rectHeight = (trY - blY) / height;\n              rect.setAttribute(\"x\", x);\n              rect.setAttribute(\"y\", y);\n              rect.setAttribute(\"width\", rectWidth);\n              rect.setAttribute(\"height\", rectHeight);\n              clipPath.append(rect);\n              svgBuffer?.push(`<rect vector-effect=\"non-scaling-stroke\" x=\"${x}\" y=\"${y}\" width=\"${rectWidth}\" height=\"${rectHeight}\"/>`);\n            }\n\n            if (this.#hasBorder) {\n              svgBuffer.push(`</g></svg>')`);\n              style.backgroundImage = svgBuffer.join(\"\");\n            }\n\n            this.container.append(svg);\n            this.container.style.clipPath = `url(#${id})`;\n          }\n\n          _createPopup() {\n            const {\n              container,\n              data\n            } = this;\n            container.setAttribute(\"aria-haspopup\", \"dialog\");\n            const popup = new PopupAnnotationElement({\n              data: {\n                color: data.color,\n                titleObj: data.titleObj,\n                modificationDate: data.modificationDate,\n                contentsObj: data.contentsObj,\n                richText: data.richText,\n                parentRect: data.rect,\n                borderStyle: 0,\n                id: `popup_${data.id}`,\n                rotation: data.rotation\n              },\n              parent: this.parent,\n              elements: [this]\n            });\n            this.parent.div.append(popup.render());\n          }\n\n          render() {\n            (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n          }\n\n          _getElementsByName(name) {\n            let skipId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const fields = [];\n\n            if (this._fieldObjects) {\n              const fieldObj = this._fieldObjects[name];\n\n              if (fieldObj) {\n                for (const {\n                  page,\n                  id,\n                  exportValues\n                } of fieldObj) {\n                  if (page === -1) {\n                    continue;\n                  }\n\n                  if (id === skipId) {\n                    continue;\n                  }\n\n                  const exportValue = typeof exportValues === \"string\" ? exportValues : null;\n                  const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n\n                  if (domElement && !GetElementsByNameSet.has(domElement)) {\n                    (0, _util.warn)(`_getElementsByName - element not allowed: ${id}`);\n                    continue;\n                  }\n\n                  fields.push({\n                    id,\n                    exportValue,\n                    domElement\n                  });\n                }\n              }\n\n              return fields;\n            }\n\n            for (const domElement of document.getElementsByName(name)) {\n              const {\n                exportValue\n              } = domElement;\n              const id = domElement.getAttribute(\"data-element-id\");\n\n              if (id === skipId) {\n                continue;\n              }\n\n              if (!GetElementsByNameSet.has(domElement)) {\n                continue;\n              }\n\n              fields.push({\n                id,\n                exportValue,\n                domElement\n              });\n            }\n\n            return fields;\n          }\n\n          show() {\n            if (this.container) {\n              this.container.hidden = false;\n            }\n\n            this.popup?.maybeShow();\n          }\n\n          hide() {\n            if (this.container) {\n              this.container.hidden = true;\n            }\n\n            this.popup?.forceHide();\n          }\n\n          getElementsToTriggerPopup() {\n            return this.container;\n          }\n\n          addHighlightArea() {\n            const triggers = this.getElementsToTriggerPopup();\n\n            if (Array.isArray(triggers)) {\n              for (const element of triggers) {\n                element.classList.add(\"highlightArea\");\n              }\n            } else {\n              triggers.classList.add(\"highlightArea\");\n            }\n          }\n\n          _editOnDoubleClick() {\n            const {\n              annotationEditorType: mode,\n              data: {\n                id: editId\n              }\n            } = this;\n            this.container.addEventListener(\"dblclick\", () => {\n              this.linkService.eventBus?.dispatch(\"switchannotationeditormode\", {\n                source: this,\n                mode,\n                editId\n              });\n            });\n          }\n\n        }\n\n        class LinkAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: !!options?.ignoreBorder,\n              createQuadrilaterals: true\n            });\n            this.isTooltipOnly = parameters.data.isTooltipOnly;\n          }\n\n          render() {\n            const {\n              data,\n              linkService\n            } = this;\n            const link = document.createElement(\"a\");\n            link.setAttribute(\"data-element-id\", data.id);\n            let isBound = false;\n\n            if (data.url) {\n              linkService.addLinkAttributes(link, data.url, data.newWindow);\n              isBound = true;\n            } else if (data.action) {\n              this._bindNamedAction(link, data.action);\n\n              isBound = true;\n            } else if (data.attachment) {\n              this._bindAttachment(link, data.attachment);\n\n              isBound = true;\n            } else if (data.setOCGState) {\n              this.#bindSetOCGState(link, data.setOCGState);\n              isBound = true;\n            } else if (data.dest) {\n              this._bindLink(link, data.dest);\n\n              isBound = true;\n            } else {\n              if (data.actions && (data.actions.Action || data.actions[\"Mouse Up\"] || data.actions[\"Mouse Down\"]) && this.enableScripting && this.hasJSActions) {\n                this._bindJSAction(link, data);\n\n                isBound = true;\n              }\n\n              if (data.resetForm) {\n                this._bindResetFormAction(link, data.resetForm);\n\n                isBound = true;\n              } else if (this.isTooltipOnly && !isBound) {\n                this._bindLink(link, \"\");\n\n                isBound = true;\n              }\n            }\n\n            this.container.classList.add(\"linkAnnotation\");\n\n            if (isBound) {\n              this.container.append(link);\n            }\n\n            return this.container;\n          }\n\n          #setInternalLink() {\n            this.container.setAttribute(\"data-internal-link\", \"\");\n          }\n\n          _bindLink(link, destination) {\n            link.href = this.linkService.getDestinationHash(destination);\n\n            link.onclick = () => {\n              if (destination) {\n                this.linkService.goToDestination(destination);\n              }\n\n              return false;\n            };\n\n            if (destination || destination === \"\") {\n              this.#setInternalLink();\n            }\n          }\n\n          _bindNamedAction(link, action) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n\n            link.onclick = () => {\n              this.linkService.executeNamedAction(action);\n              return false;\n            };\n\n            this.#setInternalLink();\n          }\n\n          _bindAttachment(link, attachment) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n\n            link.onclick = () => {\n              this.downloadManager?.openOrDownloadData(this.container, attachment.content, attachment.filename);\n              return false;\n            };\n\n            this.#setInternalLink();\n          }\n\n          #bindSetOCGState(link, action) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n\n            link.onclick = () => {\n              this.linkService.executeSetOCGState(action);\n              return false;\n            };\n\n            this.#setInternalLink();\n          }\n\n          _bindJSAction(link, data) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n            const map = new Map([[\"Action\", \"onclick\"], [\"Mouse Up\", \"onmouseup\"], [\"Mouse Down\", \"onmousedown\"]]);\n\n            for (const name of Object.keys(data.actions)) {\n              const jsName = map.get(name);\n\n              if (!jsName) {\n                continue;\n              }\n\n              link[jsName] = () => {\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: data.id,\n                    name\n                  }\n                });\n                return false;\n              };\n            }\n\n            if (!link.onclick) {\n              link.onclick = () => false;\n            }\n\n            this.#setInternalLink();\n          }\n\n          _bindResetFormAction(link, resetForm) {\n            const otherClickAction = link.onclick;\n\n            if (!otherClickAction) {\n              link.href = this.linkService.getAnchorUrl(\"\");\n            }\n\n            this.#setInternalLink();\n\n            if (!this._fieldObjects) {\n              (0, _util.warn)(`_bindResetFormAction - \"resetForm\" action not supported, ` + \"ensure that the `fieldObjects` parameter is provided.\");\n\n              if (!otherClickAction) {\n                link.onclick = () => false;\n              }\n\n              return;\n            }\n\n            link.onclick = () => {\n              otherClickAction?.();\n              const {\n                fields: resetFormFields,\n                refs: resetFormRefs,\n                include\n              } = resetForm;\n              const allFields = [];\n\n              if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n                const fieldIds = new Set(resetFormRefs);\n\n                for (const fieldName of resetFormFields) {\n                  const fields = this._fieldObjects[fieldName] || [];\n\n                  for (const {\n                    id\n                  } of fields) {\n                    fieldIds.add(id);\n                  }\n                }\n\n                for (const fields of Object.values(this._fieldObjects)) {\n                  for (const field of fields) {\n                    if (fieldIds.has(field.id) === include) {\n                      allFields.push(field);\n                    }\n                  }\n                }\n              } else {\n                for (const fields of Object.values(this._fieldObjects)) {\n                  allFields.push(...fields);\n                }\n              }\n\n              const storage = this.annotationStorage;\n              const allIds = [];\n\n              for (const field of allFields) {\n                const {\n                  id\n                } = field;\n                allIds.push(id);\n\n                switch (field.type) {\n                  case \"text\":\n                    {\n                      const value = field.defaultValue || \"\";\n                      storage.setValue(id, {\n                        value\n                      });\n                      break;\n                    }\n\n                  case \"checkbox\":\n                  case \"radiobutton\":\n                    {\n                      const value = field.defaultValue === field.exportValues;\n                      storage.setValue(id, {\n                        value\n                      });\n                      break;\n                    }\n\n                  case \"combobox\":\n                  case \"listbox\":\n                    {\n                      const value = field.defaultValue || \"\";\n                      storage.setValue(id, {\n                        value\n                      });\n                      break;\n                    }\n\n                  default:\n                    continue;\n                }\n\n                const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n\n                if (!domElement) {\n                  continue;\n                } else if (!GetElementsByNameSet.has(domElement)) {\n                  (0, _util.warn)(`_bindResetFormAction - element not allowed: ${id}`);\n                  continue;\n                }\n\n                domElement.dispatchEvent(new Event(\"resetform\"));\n              }\n\n              if (this.enableScripting) {\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: \"app\",\n                    ids: allIds,\n                    name: \"ResetForm\"\n                  }\n                });\n              }\n\n              return false;\n            };\n          }\n\n        }\n\n        class TextAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true\n            });\n          }\n\n          render() {\n            this.container.classList.add(\"textAnnotation\");\n            const image = document.createElement(\"img\");\n            image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n            image.alt = \"[{{type}} Annotation]\";\n            image.dataset.l10nId = \"text_annotation_type\";\n            image.dataset.l10nArgs = JSON.stringify({\n              type: this.data.name\n            });\n\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n\n            this.container.append(image);\n            return this.container;\n          }\n\n        }\n\n        class WidgetAnnotationElement extends AnnotationElement {\n          render() {\n            if (this.data.alternativeText) {\n              this.container.title = this.data.alternativeText;\n            }\n\n            return this.container;\n          }\n\n          showElementAndHideCanvas(element) {\n            if (this.data.hasOwnCanvas) {\n              if (element.previousSibling?.nodeName === \"CANVAS\") {\n                element.previousSibling.hidden = true;\n              }\n\n              element.hidden = false;\n            }\n          }\n\n          _getKeyModifier(event) {\n            const {\n              isWin,\n              isMac\n            } = _util.FeatureTest.platform;\n            return isWin && event.ctrlKey || isMac && event.metaKey;\n          }\n\n          _setEventListener(element, elementData, baseName, eventName, valueGetter) {\n            if (baseName.includes(\"mouse\")) {\n              element.addEventListener(baseName, event => {\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: this.data.id,\n                    name: eventName,\n                    value: valueGetter(event),\n                    shift: event.shiftKey,\n                    modifier: this._getKeyModifier(event)\n                  }\n                });\n              });\n            } else {\n              element.addEventListener(baseName, event => {\n                if (baseName === \"blur\") {\n                  if (!elementData.focused || !event.relatedTarget) {\n                    return;\n                  }\n\n                  elementData.focused = false;\n                } else if (baseName === \"focus\") {\n                  if (elementData.focused) {\n                    return;\n                  }\n\n                  elementData.focused = true;\n                }\n\n                if (!valueGetter) {\n                  return;\n                }\n\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: this.data.id,\n                    name: eventName,\n                    value: valueGetter(event)\n                  }\n                });\n              });\n            }\n          }\n\n          _setEventListeners(element, elementData, names, getter) {\n            for (const [baseName, eventName] of names) {\n              if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n                if (eventName === \"Focus\" || eventName === \"Blur\") {\n                  elementData ||= {\n                    focused: false\n                  };\n                }\n\n                this._setEventListener(element, elementData, baseName, eventName, getter);\n\n                if (eventName === \"Focus\" && !this.data.actions?.Blur) {\n                  this._setEventListener(element, elementData, \"blur\", \"Blur\", null);\n                } else if (eventName === \"Blur\" && !this.data.actions?.Focus) {\n                  this._setEventListener(element, elementData, \"focus\", \"Focus\", null);\n                }\n              }\n            }\n          }\n\n          _setBackgroundColor(element) {\n            const color = this.data.backgroundColor || null;\n            element.style.backgroundColor = color === null ? \"transparent\" : _util.Util.makeHexColor(color[0], color[1], color[2]);\n          }\n\n          _setTextStyle(element) {\n            const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n            const {\n              fontColor\n            } = this.data.defaultAppearanceData;\n            const fontSize = this.data.defaultAppearanceData.fontSize || DEFAULT_FONT_SIZE;\n            const style = element.style;\n            let computedFontSize;\n            const BORDER_SIZE = 2;\n\n            const roundToOneDecimal = x => Math.round(10 * x) / 10;\n\n            if (this.data.multiLine) {\n              const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);\n              const numberOfLines = Math.round(height / (_util.LINE_FACTOR * fontSize)) || 1;\n              const lineHeight = height / numberOfLines;\n              computedFontSize = Math.min(fontSize, roundToOneDecimal(lineHeight / _util.LINE_FACTOR));\n            } else {\n              const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);\n              computedFontSize = Math.min(fontSize, roundToOneDecimal(height / _util.LINE_FACTOR));\n            }\n\n            style.fontSize = `calc(${computedFontSize}px * var(--scale-factor))`;\n            style.color = _util.Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n            if (this.data.textAlignment !== null) {\n              style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n            }\n          }\n\n          _setRequired(element, isRequired) {\n            if (isRequired) {\n              element.setAttribute(\"required\", true);\n            } else {\n              element.removeAttribute(\"required\");\n            }\n\n            element.setAttribute(\"aria-required\", isRequired);\n          }\n\n        }\n\n        class TextWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            const isRenderable = parameters.renderForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n            super(parameters, {\n              isRenderable\n            });\n          }\n\n          setPropertyOnSiblings(base, key, value, keyInStorage) {\n            const storage = this.annotationStorage;\n\n            for (const element of this._getElementsByName(base.name, base.id)) {\n              if (element.domElement) {\n                element.domElement[key] = value;\n              }\n\n              storage.setValue(element.id, {\n                [keyInStorage]: value\n              });\n            }\n          }\n\n          render() {\n            const storage = this.annotationStorage;\n            const id = this.data.id;\n            this.container.classList.add(\"textWidgetAnnotation\");\n            let element = null;\n\n            if (this.renderForms) {\n              const storedData = storage.getValue(id, {\n                value: this.data.fieldValue\n              });\n              let textContent = storedData.value || \"\";\n              const maxLen = storage.getValue(id, {\n                charLimit: this.data.maxLen\n              }).charLimit;\n\n              if (maxLen && textContent.length > maxLen) {\n                textContent = textContent.slice(0, maxLen);\n              }\n\n              let fieldFormattedValues = storedData.formattedValue || this.data.textContent?.join(\"\\n\") || null;\n\n              if (fieldFormattedValues && this.data.comb) {\n                fieldFormattedValues = fieldFormattedValues.replaceAll(/\\s+/g, \"\");\n              }\n\n              const elementData = {\n                userValue: textContent,\n                formattedValue: fieldFormattedValues,\n                lastCommittedValue: null,\n                commitKey: 1,\n                focused: false\n              };\n\n              if (this.data.multiLine) {\n                element = document.createElement(\"textarea\");\n                element.textContent = fieldFormattedValues ?? textContent;\n\n                if (this.data.doNotScroll) {\n                  element.style.overflowY = \"hidden\";\n                }\n              } else {\n                element = document.createElement(\"input\");\n                element.type = \"text\";\n                element.setAttribute(\"value\", fieldFormattedValues ?? textContent);\n\n                if (this.data.doNotScroll) {\n                  element.style.overflowX = \"hidden\";\n                }\n              }\n\n              if (this.data.hasOwnCanvas) {\n                element.hidden = true;\n              }\n\n              GetElementsByNameSet.add(element);\n              element.setAttribute(\"data-element-id\", id);\n              element.disabled = this.data.readOnly;\n              element.name = this.data.fieldName;\n              element.tabIndex = DEFAULT_TAB_INDEX;\n\n              this._setRequired(element, this.data.required);\n\n              if (maxLen) {\n                element.maxLength = maxLen;\n              }\n\n              element.addEventListener(\"input\", event => {\n                storage.setValue(id, {\n                  value: event.target.value\n                });\n                this.setPropertyOnSiblings(element, \"value\", event.target.value, \"value\");\n                elementData.formattedValue = null;\n              });\n              element.addEventListener(\"resetform\", event => {\n                const defaultValue = this.data.defaultFieldValue ?? \"\";\n                element.value = elementData.userValue = defaultValue;\n                elementData.formattedValue = null;\n              });\n\n              let blurListener = event => {\n                const {\n                  formattedValue\n                } = elementData;\n\n                if (formattedValue !== null && formattedValue !== undefined) {\n                  event.target.value = formattedValue;\n                }\n\n                event.target.scrollLeft = 0;\n              };\n\n              if (this.enableScripting && this.hasJSActions) {\n                element.addEventListener(\"focus\", event => {\n                  if (elementData.focused) {\n                    return;\n                  }\n\n                  const {\n                    target\n                  } = event;\n\n                  if (elementData.userValue) {\n                    target.value = elementData.userValue;\n                  }\n\n                  elementData.lastCommittedValue = target.value;\n                  elementData.commitKey = 1;\n                  elementData.focused = true;\n                });\n                element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                  this.showElementAndHideCanvas(jsEvent.target);\n                  const actions = {\n                    value(event) {\n                      elementData.userValue = event.detail.value ?? \"\";\n                      storage.setValue(id, {\n                        value: elementData.userValue.toString()\n                      });\n                      event.target.value = elementData.userValue;\n                    },\n\n                    formattedValue(event) {\n                      const {\n                        formattedValue\n                      } = event.detail;\n                      elementData.formattedValue = formattedValue;\n\n                      if (formattedValue !== null && formattedValue !== undefined && event.target !== document.activeElement) {\n                        event.target.value = formattedValue;\n                      }\n\n                      storage.setValue(id, {\n                        formattedValue\n                      });\n                    },\n\n                    selRange(event) {\n                      event.target.setSelectionRange(...event.detail.selRange);\n                    },\n\n                    charLimit: event => {\n                      const {\n                        charLimit\n                      } = event.detail;\n                      const {\n                        target\n                      } = event;\n\n                      if (charLimit === 0) {\n                        target.removeAttribute(\"maxLength\");\n                        return;\n                      }\n\n                      target.setAttribute(\"maxLength\", charLimit);\n                      let value = elementData.userValue;\n\n                      if (!value || value.length <= charLimit) {\n                        return;\n                      }\n\n                      value = value.slice(0, charLimit);\n                      target.value = elementData.userValue = value;\n                      storage.setValue(id, {\n                        value\n                      });\n                      this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                        source: this,\n                        detail: {\n                          id,\n                          name: \"Keystroke\",\n                          value,\n                          willCommit: true,\n                          commitKey: 1,\n                          selStart: target.selectionStart,\n                          selEnd: target.selectionEnd\n                        }\n                      });\n                    }\n                  };\n\n                  this._dispatchEventFromSandbox(actions, jsEvent);\n                });\n                element.addEventListener(\"keydown\", event => {\n                  elementData.commitKey = 1;\n                  let commitKey = -1;\n\n                  if (event.key === \"Escape\") {\n                    commitKey = 0;\n                  } else if (event.key === \"Enter\" && !this.data.multiLine) {\n                    commitKey = 2;\n                  } else if (event.key === \"Tab\") {\n                    elementData.commitKey = 3;\n                  }\n\n                  if (commitKey === -1) {\n                    return;\n                  }\n\n                  const {\n                    value\n                  } = event.target;\n\n                  if (elementData.lastCommittedValue === value) {\n                    return;\n                  }\n\n                  elementData.lastCommittedValue = value;\n                  elementData.userValue = value;\n                  this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                    source: this,\n                    detail: {\n                      id,\n                      name: \"Keystroke\",\n                      value,\n                      willCommit: true,\n                      commitKey,\n                      selStart: event.target.selectionStart,\n                      selEnd: event.target.selectionEnd\n                    }\n                  });\n                });\n                const _blurListener = blurListener;\n                blurListener = null;\n                element.addEventListener(\"blur\", event => {\n                  if (!elementData.focused || !event.relatedTarget) {\n                    return;\n                  }\n\n                  elementData.focused = false;\n                  const {\n                    value\n                  } = event.target;\n                  elementData.userValue = value;\n\n                  if (elementData.lastCommittedValue !== value) {\n                    this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                      source: this,\n                      detail: {\n                        id,\n                        name: \"Keystroke\",\n                        value,\n                        willCommit: true,\n                        commitKey: elementData.commitKey,\n                        selStart: event.target.selectionStart,\n                        selEnd: event.target.selectionEnd\n                      }\n                    });\n                  }\n\n                  _blurListener(event);\n                });\n\n                if (this.data.actions?.Keystroke) {\n                  element.addEventListener(\"beforeinput\", event => {\n                    elementData.lastCommittedValue = null;\n                    const {\n                      data,\n                      target\n                    } = event;\n                    const {\n                      value,\n                      selectionStart,\n                      selectionEnd\n                    } = target;\n                    let selStart = selectionStart,\n                        selEnd = selectionEnd;\n\n                    switch (event.inputType) {\n                      case \"deleteWordBackward\":\n                        {\n                          const match = value.substring(0, selectionStart).match(/\\w*[^\\w]*$/);\n\n                          if (match) {\n                            selStart -= match[0].length;\n                          }\n\n                          break;\n                        }\n\n                      case \"deleteWordForward\":\n                        {\n                          const match = value.substring(selectionStart).match(/^[^\\w]*\\w*/);\n\n                          if (match) {\n                            selEnd += match[0].length;\n                          }\n\n                          break;\n                        }\n\n                      case \"deleteContentBackward\":\n                        if (selectionStart === selectionEnd) {\n                          selStart -= 1;\n                        }\n\n                        break;\n\n                      case \"deleteContentForward\":\n                        if (selectionStart === selectionEnd) {\n                          selEnd += 1;\n                        }\n\n                        break;\n                    }\n\n                    event.preventDefault();\n                    this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                      source: this,\n                      detail: {\n                        id,\n                        name: \"Keystroke\",\n                        value,\n                        change: data || \"\",\n                        willCommit: false,\n                        selStart,\n                        selEnd\n                      }\n                    });\n                  });\n                }\n\n                this._setEventListeners(element, elementData, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.value);\n              }\n\n              if (blurListener) {\n                element.addEventListener(\"blur\", blurListener);\n              }\n\n              if (this.data.comb) {\n                const fieldWidth = this.data.rect[2] - this.data.rect[0];\n                const combWidth = fieldWidth / maxLen;\n                element.classList.add(\"comb\");\n                element.style.letterSpacing = `calc(${combWidth}px * var(--scale-factor) - 1ch)`;\n              }\n            } else {\n              element = document.createElement(\"div\");\n              element.textContent = this.data.fieldValue;\n              element.style.verticalAlign = \"middle\";\n              element.style.display = \"table-cell\";\n            }\n\n            this._setTextStyle(element);\n\n            this._setBackgroundColor(element);\n\n            this._setDefaultPropertiesFromJS(element);\n\n            this.container.append(element);\n            return this.container;\n          }\n\n        }\n\n        class SignatureWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: !!parameters.data.hasOwnCanvas\n            });\n          }\n\n        }\n\n        class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: parameters.renderForms\n            });\n          }\n\n          render() {\n            const storage = this.annotationStorage;\n            const data = this.data;\n            const id = data.id;\n            let value = storage.getValue(id, {\n              value: data.exportValue === data.fieldValue\n            }).value;\n\n            if (typeof value === \"string\") {\n              value = value !== \"Off\";\n              storage.setValue(id, {\n                value\n              });\n            }\n\n            this.container.classList.add(\"buttonWidgetAnnotation\", \"checkBox\");\n            const element = document.createElement(\"input\");\n            GetElementsByNameSet.add(element);\n            element.setAttribute(\"data-element-id\", id);\n            element.disabled = data.readOnly;\n\n            this._setRequired(element, this.data.required);\n\n            element.type = \"checkbox\";\n            element.name = data.fieldName;\n\n            if (value) {\n              element.setAttribute(\"checked\", true);\n            }\n\n            element.setAttribute(\"exportValue\", data.exportValue);\n            element.tabIndex = DEFAULT_TAB_INDEX;\n            element.addEventListener(\"change\", event => {\n              const {\n                name,\n                checked\n              } = event.target;\n\n              for (const checkbox of this._getElementsByName(name, id)) {\n                const curChecked = checked && checkbox.exportValue === data.exportValue;\n\n                if (checkbox.domElement) {\n                  checkbox.domElement.checked = curChecked;\n                }\n\n                storage.setValue(checkbox.id, {\n                  value: curChecked\n                });\n              }\n\n              storage.setValue(id, {\n                value: checked\n              });\n            });\n            element.addEventListener(\"resetform\", event => {\n              const defaultValue = data.defaultFieldValue || \"Off\";\n              event.target.checked = defaultValue === data.exportValue;\n            });\n\n            if (this.enableScripting && this.hasJSActions) {\n              element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                const actions = {\n                  value(event) {\n                    event.target.checked = event.detail.value !== \"Off\";\n                    storage.setValue(id, {\n                      value: event.target.checked\n                    });\n                  }\n\n                };\n\n                this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n\n              this._setEventListeners(element, null, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n            }\n\n            this._setBackgroundColor(element);\n\n            this._setDefaultPropertiesFromJS(element);\n\n            this.container.append(element);\n            return this.container;\n          }\n\n        }\n\n        class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: parameters.renderForms\n            });\n          }\n\n          render() {\n            this.container.classList.add(\"buttonWidgetAnnotation\", \"radioButton\");\n            const storage = this.annotationStorage;\n            const data = this.data;\n            const id = data.id;\n            let value = storage.getValue(id, {\n              value: data.fieldValue === data.buttonValue\n            }).value;\n\n            if (typeof value === \"string\") {\n              value = value !== data.buttonValue;\n              storage.setValue(id, {\n                value\n              });\n            }\n\n            const element = document.createElement(\"input\");\n            GetElementsByNameSet.add(element);\n            element.setAttribute(\"data-element-id\", id);\n            element.disabled = data.readOnly;\n\n            this._setRequired(element, this.data.required);\n\n            element.type = \"radio\";\n            element.name = data.fieldName;\n\n            if (value) {\n              element.setAttribute(\"checked\", true);\n            }\n\n            element.tabIndex = DEFAULT_TAB_INDEX;\n            element.addEventListener(\"change\", event => {\n              const {\n                name,\n                checked\n              } = event.target;\n\n              for (const radio of this._getElementsByName(name, id)) {\n                storage.setValue(radio.id, {\n                  value: false\n                });\n              }\n\n              storage.setValue(id, {\n                value: checked\n              });\n            });\n            element.addEventListener(\"resetform\", event => {\n              const defaultValue = data.defaultFieldValue;\n              event.target.checked = defaultValue !== null && defaultValue !== undefined && defaultValue === data.buttonValue;\n            });\n\n            if (this.enableScripting && this.hasJSActions) {\n              const pdfButtonValue = data.buttonValue;\n              element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                const actions = {\n                  value: event => {\n                    const checked = pdfButtonValue === event.detail.value;\n\n                    for (const radio of this._getElementsByName(event.target.name)) {\n                      const curChecked = checked && radio.id === id;\n\n                      if (radio.domElement) {\n                        radio.domElement.checked = curChecked;\n                      }\n\n                      storage.setValue(radio.id, {\n                        value: curChecked\n                      });\n                    }\n                  }\n                };\n\n                this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n\n              this._setEventListeners(element, null, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n            }\n\n            this._setBackgroundColor(element);\n\n            this._setDefaultPropertiesFromJS(element);\n\n            this.container.append(element);\n            return this.container;\n          }\n\n        }\n\n        class PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              ignoreBorder: parameters.data.hasAppearance\n            });\n          }\n\n          render() {\n            const container = super.render();\n            container.classList.add(\"buttonWidgetAnnotation\", \"pushButton\");\n\n            if (this.data.alternativeText) {\n              container.title = this.data.alternativeText;\n            }\n\n            const linkElement = container.lastChild;\n\n            if (this.enableScripting && this.hasJSActions && linkElement) {\n              this._setDefaultPropertiesFromJS(linkElement);\n\n              linkElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n                this._dispatchEventFromSandbox({}, jsEvent);\n              });\n            }\n\n            return container;\n          }\n\n        }\n\n        class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: parameters.renderForms\n            });\n          }\n\n          render() {\n            this.container.classList.add(\"choiceWidgetAnnotation\");\n            const storage = this.annotationStorage;\n            const id = this.data.id;\n            const storedData = storage.getValue(id, {\n              value: this.data.fieldValue\n            });\n            const selectElement = document.createElement(\"select\");\n            GetElementsByNameSet.add(selectElement);\n            selectElement.setAttribute(\"data-element-id\", id);\n            selectElement.disabled = this.data.readOnly;\n\n            this._setRequired(selectElement, this.data.required);\n\n            selectElement.name = this.data.fieldName;\n            selectElement.tabIndex = DEFAULT_TAB_INDEX;\n            let addAnEmptyEntry = this.data.combo && this.data.options.length > 0;\n\n            if (!this.data.combo) {\n              selectElement.size = this.data.options.length;\n\n              if (this.data.multiSelect) {\n                selectElement.multiple = true;\n              }\n            }\n\n            selectElement.addEventListener(\"resetform\", event => {\n              const defaultValue = this.data.defaultFieldValue;\n\n              for (const option of selectElement.options) {\n                option.selected = option.value === defaultValue;\n              }\n            });\n\n            for (const option of this.data.options) {\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = option.displayValue;\n              optionElement.value = option.exportValue;\n\n              if (storedData.value.includes(option.exportValue)) {\n                optionElement.setAttribute(\"selected\", true);\n                addAnEmptyEntry = false;\n              }\n\n              selectElement.append(optionElement);\n            }\n\n            let removeEmptyEntry = null;\n\n            if (addAnEmptyEntry) {\n              const noneOptionElement = document.createElement(\"option\");\n              noneOptionElement.value = \" \";\n              noneOptionElement.setAttribute(\"hidden\", true);\n              noneOptionElement.setAttribute(\"selected\", true);\n              selectElement.prepend(noneOptionElement);\n\n              removeEmptyEntry = () => {\n                noneOptionElement.remove();\n                selectElement.removeEventListener(\"input\", removeEmptyEntry);\n                removeEmptyEntry = null;\n              };\n\n              selectElement.addEventListener(\"input\", removeEmptyEntry);\n            }\n\n            const getValue = isExport => {\n              const name = isExport ? \"value\" : \"textContent\";\n              const {\n                options,\n                multiple\n              } = selectElement;\n\n              if (!multiple) {\n                return options.selectedIndex === -1 ? null : options[options.selectedIndex][name];\n              }\n\n              return Array.prototype.filter.call(options, option => option.selected).map(option => option[name]);\n            };\n\n            let selectedValues = getValue(false);\n\n            const getItems = event => {\n              const options = event.target.options;\n              return Array.prototype.map.call(options, option => {\n                return {\n                  displayValue: option.textContent,\n                  exportValue: option.value\n                };\n              });\n            };\n\n            if (this.enableScripting && this.hasJSActions) {\n              selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n                const actions = {\n                  value(event) {\n                    removeEmptyEntry?.();\n                    const value = event.detail.value;\n                    const values = new Set(Array.isArray(value) ? value : [value]);\n\n                    for (const option of selectElement.options) {\n                      option.selected = values.has(option.value);\n                    }\n\n                    storage.setValue(id, {\n                      value: getValue(true)\n                    });\n                    selectedValues = getValue(false);\n                  },\n\n                  multipleSelection(event) {\n                    selectElement.multiple = true;\n                  },\n\n                  remove(event) {\n                    const options = selectElement.options;\n                    const index = event.detail.remove;\n                    options[index].selected = false;\n                    selectElement.remove(index);\n\n                    if (options.length > 0) {\n                      const i = Array.prototype.findIndex.call(options, option => option.selected);\n\n                      if (i === -1) {\n                        options[0].selected = true;\n                      }\n                    }\n\n                    storage.setValue(id, {\n                      value: getValue(true),\n                      items: getItems(event)\n                    });\n                    selectedValues = getValue(false);\n                  },\n\n                  clear(event) {\n                    while (selectElement.length !== 0) {\n                      selectElement.remove(0);\n                    }\n\n                    storage.setValue(id, {\n                      value: null,\n                      items: []\n                    });\n                    selectedValues = getValue(false);\n                  },\n\n                  insert(event) {\n                    const {\n                      index,\n                      displayValue,\n                      exportValue\n                    } = event.detail.insert;\n                    const selectChild = selectElement.children[index];\n                    const optionElement = document.createElement(\"option\");\n                    optionElement.textContent = displayValue;\n                    optionElement.value = exportValue;\n\n                    if (selectChild) {\n                      selectChild.before(optionElement);\n                    } else {\n                      selectElement.append(optionElement);\n                    }\n\n                    storage.setValue(id, {\n                      value: getValue(true),\n                      items: getItems(event)\n                    });\n                    selectedValues = getValue(false);\n                  },\n\n                  items(event) {\n                    const {\n                      items\n                    } = event.detail;\n\n                    while (selectElement.length !== 0) {\n                      selectElement.remove(0);\n                    }\n\n                    for (const item of items) {\n                      const {\n                        displayValue,\n                        exportValue\n                      } = item;\n                      const optionElement = document.createElement(\"option\");\n                      optionElement.textContent = displayValue;\n                      optionElement.value = exportValue;\n                      selectElement.append(optionElement);\n                    }\n\n                    if (selectElement.options.length > 0) {\n                      selectElement.options[0].selected = true;\n                    }\n\n                    storage.setValue(id, {\n                      value: getValue(true),\n                      items: getItems(event)\n                    });\n                    selectedValues = getValue(false);\n                  },\n\n                  indices(event) {\n                    const indices = new Set(event.detail.indices);\n\n                    for (const option of event.target.options) {\n                      option.selected = indices.has(option.index);\n                    }\n\n                    storage.setValue(id, {\n                      value: getValue(true)\n                    });\n                    selectedValues = getValue(false);\n                  },\n\n                  editable(event) {\n                    event.target.disabled = !event.detail.editable;\n                  }\n\n                };\n\n                this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n              selectElement.addEventListener(\"input\", event => {\n                const exportValue = getValue(true);\n                storage.setValue(id, {\n                  value: exportValue\n                });\n                event.preventDefault();\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id,\n                    name: \"Keystroke\",\n                    value: selectedValues,\n                    changeEx: exportValue,\n                    willCommit: false,\n                    commitKey: 1,\n                    keyDown: false\n                  }\n                });\n              });\n\n              this._setEventListeners(selectElement, null, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"], [\"input\", \"Action\"], [\"input\", \"Validate\"]], event => event.target.value);\n            } else {\n              selectElement.addEventListener(\"input\", function (event) {\n                storage.setValue(id, {\n                  value: getValue(true)\n                });\n              });\n            }\n\n            if (this.data.combo) {\n              this._setTextStyle(selectElement);\n            } else {}\n\n            this._setBackgroundColor(selectElement);\n\n            this._setDefaultPropertiesFromJS(selectElement);\n\n            this.container.append(selectElement);\n            return this.container;\n          }\n\n        }\n\n        class PopupAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const {\n              data,\n              elements\n            } = parameters;\n            super(parameters, {\n              isRenderable: AnnotationElement._hasPopupData(data)\n            });\n            this.elements = elements;\n          }\n\n          render() {\n            this.container.classList.add(\"popupAnnotation\");\n            const popup = new PopupElement({\n              container: this.container,\n              color: this.data.color,\n              titleObj: this.data.titleObj,\n              modificationDate: this.data.modificationDate,\n              contentsObj: this.data.contentsObj,\n              richText: this.data.richText,\n              rect: this.data.rect,\n              parentRect: this.data.parentRect || null,\n              parent: this.parent,\n              elements: this.elements,\n              open: this.data.open\n            });\n            const elementIds = [];\n\n            for (const element of this.elements) {\n              element.popup = popup;\n              elementIds.push(element.data.id);\n              element.addHighlightArea();\n            }\n\n            this.container.setAttribute(\"aria-controls\", elementIds.map(id => `${_util.AnnotationPrefix}${id}`).join(\",\"));\n            return this.container;\n          }\n\n        }\n\n        class PopupElement {\n          #dateTimePromise = null;\n          #boundKeyDown = this.#keyDown.bind(this);\n          #boundHide = this.#hide.bind(this);\n          #boundShow = this.#show.bind(this);\n          #boundToggle = this.#toggle.bind(this);\n          #color = null;\n          #container = null;\n          #contentsObj = null;\n          #elements = null;\n          #parent = null;\n          #parentRect = null;\n          #pinned = false;\n          #popup = null;\n          #rect = null;\n          #richText = null;\n          #titleObj = null;\n          #wasVisible = false;\n\n          constructor(_ref45) {\n            let {\n              container,\n              color,\n              elements,\n              titleObj,\n              modificationDate,\n              contentsObj,\n              richText,\n              parent,\n              rect,\n              parentRect,\n              open\n            } = _ref45;\n            this.#container = container;\n            this.#titleObj = titleObj;\n            this.#contentsObj = contentsObj;\n            this.#richText = richText;\n            this.#parent = parent;\n            this.#color = color;\n            this.#rect = rect;\n            this.#parentRect = parentRect;\n            this.#elements = elements;\n\n            const dateObject = _display_utils.PDFDateString.toDateObject(modificationDate);\n\n            if (dateObject) {\n              this.#dateTimePromise = parent.l10n.get(\"annotation_date_string\", {\n                date: dateObject.toLocaleDateString(),\n                time: dateObject.toLocaleTimeString()\n              });\n            }\n\n            this.trigger = elements.flatMap(e => e.getElementsToTriggerPopup());\n\n            for (const element of this.trigger) {\n              element.addEventListener(\"click\", this.#boundToggle);\n              element.addEventListener(\"mouseenter\", this.#boundShow);\n              element.addEventListener(\"mouseleave\", this.#boundHide);\n              element.classList.add(\"popupTriggerArea\");\n            }\n\n            for (const element of elements) {\n              element.container?.addEventListener(\"keydown\", this.#boundKeyDown);\n            }\n\n            this.#container.hidden = true;\n\n            if (open) {\n              this.#toggle();\n            }\n          }\n\n          render() {\n            if (this.#popup) {\n              return;\n            }\n\n            const {\n              page: {\n                view\n              },\n              viewport: {\n                rawDims: {\n                  pageWidth,\n                  pageHeight,\n                  pageX,\n                  pageY\n                }\n              }\n            } = this.#parent;\n            const popup = this.#popup = document.createElement(\"div\");\n            popup.className = \"popup\";\n\n            if (this.#color) {\n              const baseColor = popup.style.outlineColor = _util.Util.makeHexColor(...this.#color);\n\n              if (CSS.supports(\"background-color\", \"color-mix(in srgb, red 30%, white)\")) {\n                popup.style.backgroundColor = `color-mix(in srgb, ${baseColor} 30%, white)`;\n              } else {\n                const BACKGROUND_ENLIGHT = 0.7;\n                popup.style.backgroundColor = _util.Util.makeHexColor(...this.#color.map(c => Math.floor(BACKGROUND_ENLIGHT * (255 - c) + c)));\n              }\n            }\n\n            const header = document.createElement(\"span\");\n            header.className = \"header\";\n            const title = document.createElement(\"h1\");\n            header.append(title);\n            ({\n              dir: title.dir,\n              str: title.textContent\n            } = this.#titleObj);\n            popup.append(header);\n\n            if (this.#dateTimePromise) {\n              const modificationDate = document.createElement(\"span\");\n              modificationDate.classList.add(\"popupDate\");\n              this.#dateTimePromise.then(localized => {\n                modificationDate.textContent = localized;\n              });\n              header.append(modificationDate);\n            }\n\n            const contentsObj = this.#contentsObj;\n            const richText = this.#richText;\n\n            if (richText?.str && (!contentsObj?.str || contentsObj.str === richText.str)) {\n              _xfa_layer.XfaLayer.render({\n                xfaHtml: richText.html,\n                intent: \"richText\",\n                div: popup\n              });\n\n              popup.lastChild.classList.add(\"richText\", \"popupContent\");\n            } else {\n              const contents = this._formatContents(contentsObj);\n\n              popup.append(contents);\n            }\n\n            let useParentRect = !!this.#parentRect;\n            let rect = useParentRect ? this.#parentRect : this.#rect;\n\n            for (const element of this.#elements) {\n              if (!rect || _util.Util.intersect(element.data.rect, rect) !== null) {\n                rect = element.data.rect;\n                useParentRect = true;\n                break;\n              }\n            }\n\n            const normalizedRect = _util.Util.normalizeRect([rect[0], view[3] - rect[1] + view[1], rect[2], view[3] - rect[3] + view[1]]);\n\n            const HORIZONTAL_SPACE_AFTER_ANNOTATION = 5;\n            const parentWidth = useParentRect ? rect[2] - rect[0] + HORIZONTAL_SPACE_AFTER_ANNOTATION : 0;\n            const popupLeft = normalizedRect[0] + parentWidth;\n            const popupTop = normalizedRect[1];\n            const {\n              style\n            } = this.#container;\n            style.left = `${100 * (popupLeft - pageX) / pageWidth}%`;\n            style.top = `${100 * (popupTop - pageY) / pageHeight}%`;\n            this.#container.append(popup);\n          }\n\n          _formatContents(_ref46) {\n            let {\n              str,\n              dir\n            } = _ref46;\n            const p = document.createElement(\"p\");\n            p.classList.add(\"popupContent\");\n            p.dir = dir;\n            const lines = str.split(/(?:\\r\\n?|\\n)/);\n\n            for (let i = 0, ii = lines.length; i < ii; ++i) {\n              const line = lines[i];\n              p.append(document.createTextNode(line));\n\n              if (i < ii - 1) {\n                p.append(document.createElement(\"br\"));\n              }\n            }\n\n            return p;\n          }\n\n          #keyDown(event) {\n            if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey) {\n              return;\n            }\n\n            if (event.key === \"Enter\" || event.key === \"Escape\" && this.#pinned) {\n              this.#toggle();\n            }\n          }\n\n          #toggle() {\n            this.#pinned = !this.#pinned;\n\n            if (this.#pinned) {\n              this.#show();\n              this.#container.addEventListener(\"click\", this.#boundToggle);\n              this.#container.addEventListener(\"keydown\", this.#boundKeyDown);\n            } else {\n              this.#hide();\n              this.#container.removeEventListener(\"click\", this.#boundToggle);\n              this.#container.removeEventListener(\"keydown\", this.#boundKeyDown);\n            }\n          }\n\n          #show() {\n            if (!this.#popup) {\n              this.render();\n            }\n\n            if (!this.isVisible) {\n              this.#container.hidden = false;\n              this.#container.style.zIndex = parseInt(this.#container.style.zIndex) + 1000;\n            } else if (this.#pinned) {\n              this.#container.classList.add(\"focused\");\n            }\n          }\n\n          #hide() {\n            this.#container.classList.remove(\"focused\");\n\n            if (this.#pinned || !this.isVisible) {\n              return;\n            }\n\n            this.#container.hidden = true;\n            this.#container.style.zIndex = parseInt(this.#container.style.zIndex) - 1000;\n          }\n\n          forceHide() {\n            this.#wasVisible = this.isVisible;\n\n            if (!this.#wasVisible) {\n              return;\n            }\n\n            this.#container.hidden = true;\n          }\n\n          maybeShow() {\n            if (!this.#wasVisible) {\n              return;\n            }\n\n            this.#wasVisible = false;\n            this.#container.hidden = false;\n          }\n\n          get isVisible() {\n            return this.#container.hidden === false;\n          }\n\n        }\n\n        class FreeTextAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n            this.textContent = parameters.data.textContent;\n            this.textPosition = parameters.data.textPosition;\n            this.annotationEditorType = _util.AnnotationEditorType.FREETEXT;\n          }\n\n          render() {\n            this.container.classList.add(\"freeTextAnnotation\");\n\n            if (this.textContent) {\n              const content = document.createElement(\"div\");\n              content.classList.add(\"annotationTextContent\");\n              content.setAttribute(\"role\", \"comment\");\n\n              for (const line of this.textContent) {\n                const lineSpan = document.createElement(\"span\");\n                lineSpan.textContent = line;\n                content.append(lineSpan);\n              }\n\n              this.container.append(content);\n            }\n\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n\n            this._editOnDoubleClick();\n\n            return this.container;\n          }\n\n        }\n\n        exports.FreeTextAnnotationElement = FreeTextAnnotationElement;\n\n        class LineAnnotationElement extends AnnotationElement {\n          #line = null;\n\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n          }\n\n          render() {\n            this.container.classList.add(\"lineAnnotation\");\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height, true);\n            const line = this.#line = this.svgFactory.createElement(\"svg:line\");\n            line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n            line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n            line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n            line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n            line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            line.setAttribute(\"stroke\", \"transparent\");\n            line.setAttribute(\"fill\", \"transparent\");\n            svg.append(line);\n            this.container.append(svg);\n\n            if (!data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n\n            return this.container;\n          }\n\n          getElementsToTriggerPopup() {\n            return this.#line;\n          }\n\n          addHighlightArea() {\n            this.container.classList.add(\"highlightArea\");\n          }\n\n        }\n\n        class SquareAnnotationElement extends AnnotationElement {\n          #square = null;\n\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n          }\n\n          render() {\n            this.container.classList.add(\"squareAnnotation\");\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height, true);\n            const borderWidth = data.borderStyle.width;\n            const square = this.#square = this.svgFactory.createElement(\"svg:rect\");\n            square.setAttribute(\"x\", borderWidth / 2);\n            square.setAttribute(\"y\", borderWidth / 2);\n            square.setAttribute(\"width\", width - borderWidth);\n            square.setAttribute(\"height\", height - borderWidth);\n            square.setAttribute(\"stroke-width\", borderWidth || 1);\n            square.setAttribute(\"stroke\", \"transparent\");\n            square.setAttribute(\"fill\", \"transparent\");\n            svg.append(square);\n            this.container.append(svg);\n\n            if (!data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n\n            return this.container;\n          }\n\n          getElementsToTriggerPopup() {\n            return this.#square;\n          }\n\n          addHighlightArea() {\n            this.container.classList.add(\"highlightArea\");\n          }\n\n        }\n\n        class CircleAnnotationElement extends AnnotationElement {\n          #circle = null;\n\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n          }\n\n          render() {\n            this.container.classList.add(\"circleAnnotation\");\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height, true);\n            const borderWidth = data.borderStyle.width;\n            const circle = this.#circle = this.svgFactory.createElement(\"svg:ellipse\");\n            circle.setAttribute(\"cx\", width / 2);\n            circle.setAttribute(\"cy\", height / 2);\n            circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n            circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n            circle.setAttribute(\"stroke-width\", borderWidth || 1);\n            circle.setAttribute(\"stroke\", \"transparent\");\n            circle.setAttribute(\"fill\", \"transparent\");\n            svg.append(circle);\n            this.container.append(svg);\n\n            if (!data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n\n            return this.container;\n          }\n\n          getElementsToTriggerPopup() {\n            return this.#circle;\n          }\n\n          addHighlightArea() {\n            this.container.classList.add(\"highlightArea\");\n          }\n\n        }\n\n        class PolylineAnnotationElement extends AnnotationElement {\n          #polyline = null;\n\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n            this.containerClassName = \"polylineAnnotation\";\n            this.svgElementName = \"svg:polyline\";\n          }\n\n          render() {\n            this.container.classList.add(this.containerClassName);\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height, true);\n            let points = [];\n\n            for (const coordinate of data.vertices) {\n              const x = coordinate.x - data.rect[0];\n              const y = data.rect[3] - coordinate.y;\n              points.push(x + \",\" + y);\n            }\n\n            points = points.join(\" \");\n            const polyline = this.#polyline = this.svgFactory.createElement(this.svgElementName);\n            polyline.setAttribute(\"points\", points);\n            polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            polyline.setAttribute(\"stroke\", \"transparent\");\n            polyline.setAttribute(\"fill\", \"transparent\");\n            svg.append(polyline);\n            this.container.append(svg);\n\n            if (!data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n\n            return this.container;\n          }\n\n          getElementsToTriggerPopup() {\n            return this.#polyline;\n          }\n\n          addHighlightArea() {\n            this.container.classList.add(\"highlightArea\");\n          }\n\n        }\n\n        class PolygonAnnotationElement extends PolylineAnnotationElement {\n          constructor(parameters) {\n            super(parameters);\n            this.containerClassName = \"polygonAnnotation\";\n            this.svgElementName = \"svg:polygon\";\n          }\n\n        }\n\n        class CaretAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n          }\n\n          render() {\n            this.container.classList.add(\"caretAnnotation\");\n\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n\n            return this.container;\n          }\n\n        }\n\n        class InkAnnotationElement extends AnnotationElement {\n          #polylines = [];\n\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n            this.containerClassName = \"inkAnnotation\";\n            this.svgElementName = \"svg:polyline\";\n            this.annotationEditorType = _util.AnnotationEditorType.INK;\n          }\n\n          render() {\n            this.container.classList.add(this.containerClassName);\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height, true);\n\n            for (const inkList of data.inkLists) {\n              let points = [];\n\n              for (const coordinate of inkList) {\n                const x = coordinate.x - data.rect[0];\n                const y = data.rect[3] - coordinate.y;\n                points.push(`${x},${y}`);\n              }\n\n              points = points.join(\" \");\n              const polyline = this.svgFactory.createElement(this.svgElementName);\n              this.#polylines.push(polyline);\n              polyline.setAttribute(\"points\", points);\n              polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n              polyline.setAttribute(\"stroke\", \"transparent\");\n              polyline.setAttribute(\"fill\", \"transparent\");\n\n              if (!data.popupRef && this.hasPopupData) {\n                this._createPopup();\n              }\n\n              svg.append(polyline);\n            }\n\n            this.container.append(svg);\n            return this.container;\n          }\n\n          getElementsToTriggerPopup() {\n            return this.#polylines;\n          }\n\n          addHighlightArea() {\n            this.container.classList.add(\"highlightArea\");\n          }\n\n        }\n\n        exports.InkAnnotationElement = InkAnnotationElement;\n\n        class HighlightAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n\n          render() {\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n\n            this.container.classList.add(\"highlightAnnotation\");\n            return this.container;\n          }\n\n        }\n\n        class UnderlineAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n\n          render() {\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n\n            this.container.classList.add(\"underlineAnnotation\");\n            return this.container;\n          }\n\n        }\n\n        class SquigglyAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n\n          render() {\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n\n            this.container.classList.add(\"squigglyAnnotation\");\n            return this.container;\n          }\n\n        }\n\n        class StrikeOutAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n\n          render() {\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n\n            this.container.classList.add(\"strikeoutAnnotation\");\n            return this.container;\n          }\n\n        }\n\n        class StampAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n          }\n\n          render() {\n            this.container.classList.add(\"stampAnnotation\");\n\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n\n            return this.container;\n          }\n\n        }\n\n        exports.StampAnnotationElement = StampAnnotationElement;\n\n        class FileAttachmentAnnotationElement extends AnnotationElement {\n          #trigger = null;\n\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true\n            });\n            const {\n              filename,\n              content\n            } = this.data.file;\n            this.filename = (0, _display_utils.getFilenameFromUrl)(filename, true);\n            this.content = content;\n            this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n              source: this,\n              filename,\n              content\n            });\n          }\n\n          render() {\n            this.container.classList.add(\"fileAttachmentAnnotation\");\n            const {\n              container,\n              data\n            } = this;\n            let trigger;\n\n            if (data.hasAppearance || data.fillAlpha === 0) {\n              trigger = document.createElement(\"div\");\n            } else {\n              trigger = document.createElement(\"img\");\n              trigger.src = `${this.imageResourcesPath}annotation-${/paperclip/i.test(data.name) ? \"paperclip\" : \"pushpin\"}.svg`;\n\n              if (data.fillAlpha && data.fillAlpha < 1) {\n                trigger.style = `filter: opacity(${Math.round(data.fillAlpha * 100)}%);`;\n              }\n            }\n\n            trigger.addEventListener(\"dblclick\", this.#download.bind(this));\n            this.#trigger = trigger;\n            const {\n              isMac\n            } = _util.FeatureTest.platform;\n            container.addEventListener(\"keydown\", evt => {\n              if (evt.key === \"Enter\" && (isMac ? evt.metaKey : evt.ctrlKey)) {\n                this.#download();\n              }\n            });\n\n            if (!data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            } else {\n              trigger.classList.add(\"popupTriggerArea\");\n            }\n\n            container.append(trigger);\n            return container;\n          }\n\n          getElementsToTriggerPopup() {\n            return this.#trigger;\n          }\n\n          addHighlightArea() {\n            this.container.classList.add(\"highlightArea\");\n          }\n\n          #download() {\n            this.downloadManager?.openOrDownloadData(this.container, this.content, this.filename);\n          }\n\n        }\n\n        class AnnotationLayer {\n          #accessibilityManager = null;\n          #annotationCanvasMap = null;\n          #editableAnnotations = new Map();\n\n          constructor(_ref47) {\n            let {\n              div,\n              accessibilityManager,\n              annotationCanvasMap,\n              l10n,\n              page,\n              viewport\n            } = _ref47;\n            this.div = div;\n            this.#accessibilityManager = accessibilityManager;\n            this.#annotationCanvasMap = annotationCanvasMap;\n            this.l10n = l10n;\n            this.page = page;\n            this.viewport = viewport;\n            this.zIndex = 0;\n            this.l10n ||= _displayL10n_utils.NullL10n;\n          }\n\n          #appendElement(element, id) {\n            const contentElement = element.firstChild || element;\n            contentElement.id = `${_util.AnnotationPrefix}${id}`;\n            this.div.append(element);\n            this.#accessibilityManager?.moveElementInDOM(this.div, element, contentElement, false);\n          }\n\n          async render(params) {\n            const {\n              annotations\n            } = params;\n            const layer = this.div;\n            (0, _display_utils.setLayerDimensions)(layer, this.viewport);\n            const popupToElements = new Map();\n            const elementParams = {\n              data: null,\n              layer,\n              linkService: params.linkService,\n              downloadManager: params.downloadManager,\n              imageResourcesPath: params.imageResourcesPath || \"\",\n              renderForms: params.renderForms !== false,\n              svgFactory: new _display_utils.DOMSVGFactory(),\n              annotationStorage: params.annotationStorage || new _annotation_storage.AnnotationStorage(),\n              enableScripting: params.enableScripting === true,\n              hasJSActions: params.hasJSActions,\n              fieldObjects: params.fieldObjects,\n              parent: this,\n              elements: null\n            };\n\n            for (const data of annotations) {\n              if (data.noHTML) {\n                continue;\n              }\n\n              const isPopupAnnotation = data.annotationType === _util.AnnotationType.POPUP;\n\n              if (!isPopupAnnotation) {\n                const {\n                  width,\n                  height\n                } = getRectDims(data.rect);\n\n                if (width <= 0 || height <= 0) {\n                  continue;\n                }\n              } else {\n                const elements = popupToElements.get(data.id);\n\n                if (!elements) {\n                  continue;\n                }\n\n                elementParams.elements = elements;\n              }\n\n              elementParams.data = data;\n              const element = AnnotationElementFactory.create(elementParams);\n\n              if (!element.isRenderable) {\n                continue;\n              }\n\n              if (!isPopupAnnotation && data.popupRef) {\n                const elements = popupToElements.get(data.popupRef);\n\n                if (!elements) {\n                  popupToElements.set(data.popupRef, [element]);\n                } else {\n                  elements.push(element);\n                }\n              }\n\n              if (element.annotationEditorType > 0) {\n                this.#editableAnnotations.set(element.data.id, element);\n              }\n\n              const rendered = element.render();\n\n              if (data.hidden) {\n                rendered.style.visibility = \"hidden\";\n              }\n\n              this.#appendElement(rendered, data.id);\n            }\n\n            this.#setAnnotationCanvasMap();\n            await this.l10n.translate(layer);\n          }\n\n          update(_ref48) {\n            let {\n              viewport\n            } = _ref48;\n            const layer = this.div;\n            this.viewport = viewport;\n            (0, _display_utils.setLayerDimensions)(layer, {\n              rotation: viewport.rotation\n            });\n            this.#setAnnotationCanvasMap();\n            layer.hidden = false;\n          }\n\n          #setAnnotationCanvasMap() {\n            if (!this.#annotationCanvasMap) {\n              return;\n            }\n\n            const layer = this.div;\n\n            for (const [id, canvas] of this.#annotationCanvasMap) {\n              const element = layer.querySelector(`[data-annotation-id=\"${id}\"]`);\n\n              if (!element) {\n                continue;\n              }\n\n              const {\n                firstChild\n              } = element;\n\n              if (!firstChild) {\n                element.append(canvas);\n              } else if (firstChild.nodeName === \"CANVAS\") {\n                firstChild.replaceWith(canvas);\n              } else {\n                firstChild.before(canvas);\n              }\n            }\n\n            this.#annotationCanvasMap.clear();\n          }\n\n          getEditableAnnotations() {\n            return Array.from(this.#editableAnnotations.values());\n          }\n\n          getEditableAnnotation(id) {\n            return this.#editableAnnotations.get(id);\n          }\n\n        }\n\n        exports.AnnotationLayer = AnnotationLayer;\n        /***/\n      },\n      /* 30 */\n\n      /***/\n      (__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.ColorConverters = void 0;\n\n        function makeColorComp(n) {\n          return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, \"0\");\n        }\n\n        function scaleAndClamp(x) {\n          return Math.max(0, Math.min(255, 255 * x));\n        }\n\n        class ColorConverters {\n          static CMYK_G(_ref49) {\n            let [c, y, m, k] = _ref49;\n            return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n          }\n\n          static G_CMYK(_ref50) {\n            let [g] = _ref50;\n            return [\"CMYK\", 0, 0, 0, 1 - g];\n          }\n\n          static G_RGB(_ref51) {\n            let [g] = _ref51;\n            return [\"RGB\", g, g, g];\n          }\n\n          static G_rgb(_ref52) {\n            let [g] = _ref52;\n            g = scaleAndClamp(g);\n            return [g, g, g];\n          }\n\n          static G_HTML(_ref53) {\n            let [g] = _ref53;\n            const G = makeColorComp(g);\n            return `#${G}${G}${G}`;\n          }\n\n          static RGB_G(_ref54) {\n            let [r, g, b] = _ref54;\n            return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n          }\n\n          static RGB_rgb(color) {\n            return color.map(scaleAndClamp);\n          }\n\n          static RGB_HTML(color) {\n            return `#${color.map(makeColorComp).join(\"\")}`;\n          }\n\n          static T_HTML() {\n            return \"#00000000\";\n          }\n\n          static T_rgb() {\n            return [null];\n          }\n\n          static CMYK_RGB(_ref55) {\n            let [c, y, m, k] = _ref55;\n            return [\"RGB\", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)];\n          }\n\n          static CMYK_rgb(_ref56) {\n            let [c, y, m, k] = _ref56;\n            return [scaleAndClamp(1 - Math.min(1, c + k)), scaleAndClamp(1 - Math.min(1, m + k)), scaleAndClamp(1 - Math.min(1, y + k))];\n          }\n\n          static CMYK_HTML(components) {\n            const rgb = this.CMYK_RGB(components).slice(1);\n            return this.RGB_HTML(rgb);\n          }\n\n          static RGB_CMYK(_ref57) {\n            let [r, g, b] = _ref57;\n            const c = 1 - r;\n            const m = 1 - g;\n            const y = 1 - b;\n            const k = Math.min(c, m, y);\n            return [\"CMYK\", c, m, y, k];\n          }\n\n        }\n\n        exports.ColorConverters = ColorConverters;\n        /***/\n      },\n      /* 31 */\n\n      /***/\n      (__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.NullL10n = void 0;\n        exports.getL10nFallback = getL10nFallback;\n        const DEFAULT_L10N_STRINGS = {\n          of_pages: \"of {{pagesCount}}\",\n          page_of_pages: \"({{pageNumber}} of {{pagesCount}})\",\n          document_properties_kb: \"{{size_kb}} KB ({{size_b}} bytes)\",\n          document_properties_mb: \"{{size_mb}} MB ({{size_b}} bytes)\",\n          document_properties_date_string: \"{{date}}, {{time}}\",\n          document_properties_page_size_unit_inches: \"in\",\n          document_properties_page_size_unit_millimeters: \"mm\",\n          document_properties_page_size_orientation_portrait: \"portrait\",\n          document_properties_page_size_orientation_landscape: \"landscape\",\n          document_properties_page_size_name_a3: \"A3\",\n          document_properties_page_size_name_a4: \"A4\",\n          document_properties_page_size_name_letter: \"Letter\",\n          document_properties_page_size_name_legal: \"Legal\",\n          document_properties_page_size_dimension_string: \"{{width}} × {{height}} {{unit}} ({{orientation}})\",\n          document_properties_page_size_dimension_name_string: \"{{width}} × {{height}} {{unit}} ({{name}}, {{orientation}})\",\n          document_properties_linearized_yes: \"Yes\",\n          document_properties_linearized_no: \"No\",\n          additional_layers: \"Additional Layers\",\n          page_landmark: \"Page {{page}}\",\n          thumb_page_title: \"Page {{page}}\",\n          thumb_page_canvas: \"Thumbnail of Page {{page}}\",\n          find_reached_top: \"Reached top of document, continued from bottom\",\n          find_reached_bottom: \"Reached end of document, continued from top\",\n          \"find_match_count[one]\": \"{{current}} of {{total}} match\",\n          \"find_match_count[other]\": \"{{current}} of {{total}} matches\",\n          \"find_match_count_limit[one]\": \"More than {{limit}} match\",\n          \"find_match_count_limit[other]\": \"More than {{limit}} matches\",\n          find_not_found: \"Phrase not found\",\n          page_scale_width: \"Page Width\",\n          page_scale_fit: \"Page Fit\",\n          page_scale_auto: \"Automatic Zoom\",\n          page_scale_actual: \"Actual Size\",\n          page_scale_percent: \"{{scale}}%\",\n          loading_error: \"An error occurred while loading the PDF.\",\n          invalid_file_error: \"Invalid or corrupted PDF file.\",\n          missing_file_error: \"Missing PDF file.\",\n          unexpected_response_error: \"Unexpected server response.\",\n          rendering_error: \"An error occurred while rendering the page.\",\n          annotation_date_string: \"{{date}}, {{time}}\",\n          printing_not_supported: \"Warning: Printing is not fully supported by this browser.\",\n          printing_not_ready: \"Warning: The PDF is not fully loaded for printing.\",\n          web_fonts_disabled: \"Web fonts are disabled: unable to use embedded PDF fonts.\",\n          free_text2_default_content: \"Start typing…\",\n          editor_free_text2_aria_label: \"Text Editor\",\n          editor_ink2_aria_label: \"Draw Editor\",\n          editor_ink_canvas_aria_label: \"User-created image\",\n          editor_alt_text_button_label: \"Alt text\",\n          editor_alt_text_edit_button_label: \"Edit alt text\",\n          editor_alt_text_decorative_tooltip: \"Marked as decorative\"\n        };\n        {\n          DEFAULT_L10N_STRINGS.print_progress_percent = \"{{progress}}%\";\n        }\n\n        function getL10nFallback(key, args) {\n          switch (key) {\n            case \"find_match_count\":\n              key = `find_match_count[${args.total === 1 ? \"one\" : \"other\"}]`;\n              break;\n\n            case \"find_match_count_limit\":\n              key = `find_match_count_limit[${args.limit === 1 ? \"one\" : \"other\"}]`;\n              break;\n          }\n\n          return DEFAULT_L10N_STRINGS[key] || \"\";\n        }\n\n        function formatL10nValue(text, args) {\n          if (!args) {\n            return text;\n          }\n\n          return text.replaceAll(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n            return name in args ? args[name] : \"{{\" + name + \"}}\";\n          });\n        }\n\n        const NullL10n = {\n          async getLanguage() {\n            return \"en-us\";\n          },\n\n          async getDirection() {\n            return \"ltr\";\n          },\n\n          async get(key) {\n            let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            let fallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getL10nFallback(key, args);\n            return formatL10nValue(fallback, args);\n          },\n\n          async translate(element) {}\n\n        };\n        exports.NullL10n = NullL10n;\n        /***/\n      },\n      /* 32 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.XfaLayer = void 0;\n\n        var _xfa_text = __w_pdfjs_require__(25);\n\n        class XfaLayer {\n          static setupStorage(html, id, element, storage, intent) {\n            const storedData = storage.getValue(id, {\n              value: null\n            });\n\n            switch (element.name) {\n              case \"textarea\":\n                if (storedData.value !== null) {\n                  html.textContent = storedData.value;\n                }\n\n                if (intent === \"print\") {\n                  break;\n                }\n\n                html.addEventListener(\"input\", event => {\n                  storage.setValue(id, {\n                    value: event.target.value\n                  });\n                });\n                break;\n\n              case \"input\":\n                if (element.attributes.type === \"radio\" || element.attributes.type === \"checkbox\") {\n                  if (storedData.value === element.attributes.xfaOn) {\n                    html.setAttribute(\"checked\", true);\n                  } else if (storedData.value === element.attributes.xfaOff) {\n                    html.removeAttribute(\"checked\");\n                  }\n\n                  if (intent === \"print\") {\n                    break;\n                  }\n\n                  html.addEventListener(\"change\", event => {\n                    storage.setValue(id, {\n                      value: event.target.checked ? event.target.getAttribute(\"xfaOn\") : event.target.getAttribute(\"xfaOff\")\n                    });\n                  });\n                } else {\n                  if (storedData.value !== null) {\n                    html.setAttribute(\"value\", storedData.value);\n                  }\n\n                  if (intent === \"print\") {\n                    break;\n                  }\n\n                  html.addEventListener(\"input\", event => {\n                    storage.setValue(id, {\n                      value: event.target.value\n                    });\n                  });\n                }\n\n                break;\n\n              case \"select\":\n                if (storedData.value !== null) {\n                  html.setAttribute(\"value\", storedData.value);\n\n                  for (const option of element.children) {\n                    if (option.attributes.value === storedData.value) {\n                      option.attributes.selected = true;\n                    } else if (option.attributes.hasOwnProperty(\"selected\")) {\n                      delete option.attributes.selected;\n                    }\n                  }\n                }\n\n                html.addEventListener(\"input\", event => {\n                  const options = event.target.options;\n                  const value = options.selectedIndex === -1 ? \"\" : options[options.selectedIndex].value;\n                  storage.setValue(id, {\n                    value\n                  });\n                });\n                break;\n            }\n          }\n\n          static setAttributes(_ref58) {\n            let {\n              html,\n              element,\n              storage = null,\n              intent,\n              linkService\n            } = _ref58;\n            const {\n              attributes\n            } = element;\n            const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n\n            if (attributes.type === \"radio\") {\n              attributes.name = `${attributes.name}-${intent}`;\n            }\n\n            for (const [key, value] of Object.entries(attributes)) {\n              if (value === null || value === undefined) {\n                continue;\n              }\n\n              switch (key) {\n                case \"class\":\n                  if (value.length) {\n                    html.setAttribute(key, value.join(\" \"));\n                  }\n\n                  break;\n\n                case \"dataId\":\n                  break;\n\n                case \"id\":\n                  html.setAttribute(\"data-element-id\", value);\n                  break;\n\n                case \"style\":\n                  Object.assign(html.style, value);\n                  break;\n\n                case \"textContent\":\n                  html.textContent = value;\n                  break;\n\n                default:\n                  if (!isHTMLAnchorElement || key !== \"href\" && key !== \"newWindow\") {\n                    html.setAttribute(key, value);\n                  }\n\n              }\n            }\n\n            if (isHTMLAnchorElement) {\n              linkService.addLinkAttributes(html, attributes.href, attributes.newWindow);\n            }\n\n            if (storage && attributes.dataId) {\n              this.setupStorage(html, attributes.dataId, element, storage);\n            }\n          }\n\n          static render(parameters) {\n            const storage = parameters.annotationStorage;\n            const linkService = parameters.linkService;\n            const root = parameters.xfaHtml;\n            const intent = parameters.intent || \"display\";\n            const rootHtml = document.createElement(root.name);\n\n            if (root.attributes) {\n              this.setAttributes({\n                html: rootHtml,\n                element: root,\n                intent,\n                linkService\n              });\n            }\n\n            const stack = [[root, -1, rootHtml]];\n            const rootDiv = parameters.div;\n            rootDiv.append(rootHtml);\n\n            if (parameters.viewport) {\n              const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n              rootDiv.style.transform = transform;\n            }\n\n            if (intent !== \"richText\") {\n              rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n            }\n\n            const textDivs = [];\n\n            while (stack.length > 0) {\n              const [parent, i, html] = stack.at(-1);\n\n              if (i + 1 === parent.children.length) {\n                stack.pop();\n                continue;\n              }\n\n              const child = parent.children[++stack.at(-1)[1]];\n\n              if (child === null) {\n                continue;\n              }\n\n              const {\n                name\n              } = child;\n\n              if (name === \"#text\") {\n                const node = document.createTextNode(child.value);\n                textDivs.push(node);\n                html.append(node);\n                continue;\n              }\n\n              const childHtml = child?.attributes?.xmlns ? document.createElementNS(child.attributes.xmlns, name) : document.createElement(name);\n              html.append(childHtml);\n\n              if (child.attributes) {\n                this.setAttributes({\n                  html: childHtml,\n                  element: child,\n                  storage,\n                  intent,\n                  linkService\n                });\n              }\n\n              if (child.children && child.children.length > 0) {\n                stack.push([child, -1, childHtml]);\n              } else if (child.value) {\n                const node = document.createTextNode(child.value);\n\n                if (_xfa_text.XfaText.shouldBuildText(name)) {\n                  textDivs.push(node);\n                }\n\n                childHtml.append(node);\n              }\n            }\n\n            for (const el of rootDiv.querySelectorAll(\".xfaNonInteractive input, .xfaNonInteractive textarea\")) {\n              el.setAttribute(\"readOnly\", true);\n            }\n\n            return {\n              textDivs\n            };\n          }\n\n          static update(parameters) {\n            const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n            parameters.div.style.transform = transform;\n            parameters.div.hidden = false;\n          }\n\n        }\n\n        exports.XfaLayer = XfaLayer;\n        /***/\n      },\n      /* 33 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.InkEditor = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _editor = __w_pdfjs_require__(4);\n\n        var _annotation_layer = __w_pdfjs_require__(29);\n\n        var _display_utils = __w_pdfjs_require__(6);\n\n        var _tools = __w_pdfjs_require__(5);\n\n        class InkEditor extends _editor.AnnotationEditor {\n          #baseHeight = 0;\n          #baseWidth = 0;\n          #boundCanvasPointermove = this.canvasPointermove.bind(this);\n          #boundCanvasPointerleave = this.canvasPointerleave.bind(this);\n          #boundCanvasPointerup = this.canvasPointerup.bind(this);\n          #boundCanvasPointerdown = this.canvasPointerdown.bind(this);\n          #currentPath2D = new Path2D();\n          #disableEditing = false;\n          #hasSomethingToDraw = false;\n          #isCanvasInitialized = false;\n          #observer = null;\n          #realWidth = 0;\n          #realHeight = 0;\n          #requestFrameCallback = null;\n          static _defaultColor = null;\n          static _defaultOpacity = 1;\n          static _defaultThickness = 1;\n          static _type = \"ink\";\n\n          constructor(params) {\n            super({ ...params,\n              name: \"inkEditor\"\n            });\n            this.color = params.color || null;\n            this.thickness = params.thickness || null;\n            this.opacity = params.opacity || null;\n            this.paths = [];\n            this.bezierPath2D = [];\n            this.allRawPaths = [];\n            this.currentPath = [];\n            this.scaleFactor = 1;\n            this.translationX = this.translationY = 0;\n            this.x = 0;\n            this.y = 0;\n            this._willKeepAspectRatio = true;\n          }\n\n          static initialize(l10n) {\n            _editor.AnnotationEditor.initialize(l10n, {\n              strings: [\"editor_ink_canvas_aria_label\", \"editor_ink2_aria_label\"]\n            });\n          }\n\n          static updateDefaultParams(type, value) {\n            switch (type) {\n              case _util.AnnotationEditorParamsType.INK_THICKNESS:\n                InkEditor._defaultThickness = value;\n                break;\n\n              case _util.AnnotationEditorParamsType.INK_COLOR:\n                InkEditor._defaultColor = value;\n                break;\n\n              case _util.AnnotationEditorParamsType.INK_OPACITY:\n                InkEditor._defaultOpacity = value / 100;\n                break;\n            }\n          }\n\n          updateParams(type, value) {\n            switch (type) {\n              case _util.AnnotationEditorParamsType.INK_THICKNESS:\n                this.#updateThickness(value);\n                break;\n\n              case _util.AnnotationEditorParamsType.INK_COLOR:\n                this.#updateColor(value);\n                break;\n\n              case _util.AnnotationEditorParamsType.INK_OPACITY:\n                this.#updateOpacity(value);\n                break;\n            }\n          }\n\n          static get defaultPropertiesToUpdate() {\n            return [[_util.AnnotationEditorParamsType.INK_THICKNESS, InkEditor._defaultThickness], [_util.AnnotationEditorParamsType.INK_COLOR, InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor], [_util.AnnotationEditorParamsType.INK_OPACITY, Math.round(InkEditor._defaultOpacity * 100)]];\n          }\n\n          get propertiesToUpdate() {\n            return [[_util.AnnotationEditorParamsType.INK_THICKNESS, this.thickness || InkEditor._defaultThickness], [_util.AnnotationEditorParamsType.INK_COLOR, this.color || InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor], [_util.AnnotationEditorParamsType.INK_OPACITY, Math.round(100 * (this.opacity ?? InkEditor._defaultOpacity))]];\n          }\n\n          #updateThickness(thickness) {\n            const savedThickness = this.thickness;\n            this.addCommands({\n              cmd: () => {\n                this.thickness = thickness;\n                this.#fitToContent();\n              },\n              undo: () => {\n                this.thickness = savedThickness;\n                this.#fitToContent();\n              },\n              mustExec: true,\n              type: _util.AnnotationEditorParamsType.INK_THICKNESS,\n              overwriteIfSameType: true,\n              keepUndo: true\n            });\n          }\n\n          #updateColor(color) {\n            const savedColor = this.color;\n            this.addCommands({\n              cmd: () => {\n                this.color = color;\n                this.#redraw();\n              },\n              undo: () => {\n                this.color = savedColor;\n                this.#redraw();\n              },\n              mustExec: true,\n              type: _util.AnnotationEditorParamsType.INK_COLOR,\n              overwriteIfSameType: true,\n              keepUndo: true\n            });\n          }\n\n          #updateOpacity(opacity) {\n            opacity /= 100;\n            const savedOpacity = this.opacity;\n            this.addCommands({\n              cmd: () => {\n                this.opacity = opacity;\n                this.#redraw();\n              },\n              undo: () => {\n                this.opacity = savedOpacity;\n                this.#redraw();\n              },\n              mustExec: true,\n              type: _util.AnnotationEditorParamsType.INK_OPACITY,\n              overwriteIfSameType: true,\n              keepUndo: true\n            });\n          }\n\n          rebuild() {\n            if (!this.parent) {\n              return;\n            }\n\n            super.rebuild();\n\n            if (this.div === null) {\n              return;\n            }\n\n            if (!this.canvas) {\n              this.#createCanvas();\n              this.#createObserver();\n            }\n\n            if (!this.isAttachedToDOM) {\n              this.parent.add(this);\n              this.#setCanvasDims();\n            }\n\n            this.#fitToContent();\n          }\n\n          remove() {\n            if (this.canvas === null) {\n              return;\n            }\n\n            if (!this.isEmpty()) {\n              this.commit();\n            }\n\n            this.canvas.width = this.canvas.height = 0;\n            this.canvas.remove();\n            this.canvas = null;\n            this.#observer.disconnect();\n            this.#observer = null;\n            super.remove();\n          }\n\n          setParent(parent) {\n            if (!this.parent && parent) {\n              this._uiManager.removeShouldRescale(this);\n            } else if (this.parent && parent === null) {\n              this._uiManager.addShouldRescale(this);\n            }\n\n            super.setParent(parent);\n          }\n\n          onScaleChanging() {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            const width = this.width * parentWidth;\n            const height = this.height * parentHeight;\n            this.setDimensions(width, height);\n          }\n\n          enableEditMode() {\n            if (this.#disableEditing || this.canvas === null) {\n              return;\n            }\n\n            super.enableEditMode();\n            this._isDraggable = false;\n            this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n          }\n\n          disableEditMode() {\n            if (!this.isInEditMode() || this.canvas === null) {\n              return;\n            }\n\n            super.disableEditMode();\n            this._isDraggable = !this.isEmpty();\n            this.div.classList.remove(\"editing\");\n            this.canvas.removeEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n          }\n\n          onceAdded() {\n            this._isDraggable = !this.isEmpty();\n          }\n\n          isEmpty() {\n            return this.paths.length === 0 || this.paths.length === 1 && this.paths[0].length === 0;\n          }\n\n          #getInitialBBox() {\n            const {\n              parentRotation,\n              parentDimensions: [width, height]\n            } = this;\n\n            switch (parentRotation) {\n              case 90:\n                return [0, height, height, width];\n\n              case 180:\n                return [width, height, width, height];\n\n              case 270:\n                return [width, 0, height, width];\n\n              default:\n                return [0, 0, width, height];\n            }\n          }\n\n          #setStroke() {\n            const {\n              ctx,\n              color,\n              opacity,\n              thickness,\n              parentScale,\n              scaleFactor\n            } = this;\n            ctx.lineWidth = thickness * parentScale / scaleFactor;\n            ctx.lineCap = \"round\";\n            ctx.lineJoin = \"round\";\n            ctx.miterLimit = 10;\n            ctx.strokeStyle = `${color}${(0, _tools.opacityToHex)(opacity)}`;\n          }\n\n          #startDrawing(x, y) {\n            this.canvas.addEventListener(\"contextmenu\", _display_utils.noContextMenu);\n            this.canvas.addEventListener(\"pointerleave\", this.#boundCanvasPointerleave);\n            this.canvas.addEventListener(\"pointermove\", this.#boundCanvasPointermove);\n            this.canvas.addEventListener(\"pointerup\", this.#boundCanvasPointerup);\n            this.canvas.removeEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n            this.isEditing = true;\n\n            if (!this.#isCanvasInitialized) {\n              this.#isCanvasInitialized = true;\n              this.#setCanvasDims();\n              this.thickness ||= InkEditor._defaultThickness;\n              this.color ||= InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor;\n              this.opacity ??= InkEditor._defaultOpacity;\n            }\n\n            this.currentPath.push([x, y]);\n            this.#hasSomethingToDraw = false;\n            this.#setStroke();\n\n            this.#requestFrameCallback = () => {\n              this.#drawPoints();\n\n              if (this.#requestFrameCallback) {\n                window.requestAnimationFrame(this.#requestFrameCallback);\n              }\n            };\n\n            window.requestAnimationFrame(this.#requestFrameCallback);\n          }\n\n          #draw(x, y) {\n            const [lastX, lastY] = this.currentPath.at(-1);\n\n            if (this.currentPath.length > 1 && x === lastX && y === lastY) {\n              return;\n            }\n\n            const currentPath = this.currentPath;\n            let path2D = this.#currentPath2D;\n            currentPath.push([x, y]);\n            this.#hasSomethingToDraw = true;\n\n            if (currentPath.length <= 2) {\n              path2D.moveTo(...currentPath[0]);\n              path2D.lineTo(x, y);\n              return;\n            }\n\n            if (currentPath.length === 3) {\n              this.#currentPath2D = path2D = new Path2D();\n              path2D.moveTo(...currentPath[0]);\n            }\n\n            this.#makeBezierCurve(path2D, ...currentPath.at(-3), ...currentPath.at(-2), x, y);\n          }\n\n          #endPath() {\n            if (this.currentPath.length === 0) {\n              return;\n            }\n\n            const lastPoint = this.currentPath.at(-1);\n            this.#currentPath2D.lineTo(...lastPoint);\n          }\n\n          #stopDrawing(x, y) {\n            this.#requestFrameCallback = null;\n            x = Math.min(Math.max(x, 0), this.canvas.width);\n            y = Math.min(Math.max(y, 0), this.canvas.height);\n            this.#draw(x, y);\n            this.#endPath();\n            let bezier;\n\n            if (this.currentPath.length !== 1) {\n              bezier = this.#generateBezierPoints();\n            } else {\n              const xy = [x, y];\n              bezier = [[xy, xy.slice(), xy.slice(), xy]];\n            }\n\n            const path2D = this.#currentPath2D;\n            const currentPath = this.currentPath;\n            this.currentPath = [];\n            this.#currentPath2D = new Path2D();\n\n            const cmd = () => {\n              this.allRawPaths.push(currentPath);\n              this.paths.push(bezier);\n              this.bezierPath2D.push(path2D);\n              this.rebuild();\n            };\n\n            const undo = () => {\n              this.allRawPaths.pop();\n              this.paths.pop();\n              this.bezierPath2D.pop();\n\n              if (this.paths.length === 0) {\n                this.remove();\n              } else {\n                if (!this.canvas) {\n                  this.#createCanvas();\n                  this.#createObserver();\n                }\n\n                this.#fitToContent();\n              }\n            };\n\n            this.addCommands({\n              cmd,\n              undo,\n              mustExec: true\n            });\n          }\n\n          #drawPoints() {\n            if (!this.#hasSomethingToDraw) {\n              return;\n            }\n\n            this.#hasSomethingToDraw = false;\n            const thickness = Math.ceil(this.thickness * this.parentScale);\n            const lastPoints = this.currentPath.slice(-3);\n            const x = lastPoints.map(xy => xy[0]);\n            const y = lastPoints.map(xy => xy[1]);\n            const xMin = Math.min(...x) - thickness;\n            const xMax = Math.max(...x) + thickness;\n            const yMin = Math.min(...y) - thickness;\n            const yMax = Math.max(...y) + thickness;\n            const {\n              ctx\n            } = this;\n            ctx.save();\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n            for (const path of this.bezierPath2D) {\n              ctx.stroke(path);\n            }\n\n            ctx.stroke(this.#currentPath2D);\n            ctx.restore();\n          }\n\n          #makeBezierCurve(path2D, x0, y0, x1, y1, x2, y2) {\n            const prevX = (x0 + x1) / 2;\n            const prevY = (y0 + y1) / 2;\n            const x3 = (x1 + x2) / 2;\n            const y3 = (y1 + y2) / 2;\n            path2D.bezierCurveTo(prevX + 2 * (x1 - prevX) / 3, prevY + 2 * (y1 - prevY) / 3, x3 + 2 * (x1 - x3) / 3, y3 + 2 * (y1 - y3) / 3, x3, y3);\n          }\n\n          #generateBezierPoints() {\n            const path = this.currentPath;\n\n            if (path.length <= 2) {\n              return [[path[0], path[0], path.at(-1), path.at(-1)]];\n            }\n\n            const bezierPoints = [];\n            let i;\n            let [x0, y0] = path[0];\n\n            for (i = 1; i < path.length - 2; i++) {\n              const [x1, y1] = path[i];\n              const [x2, y2] = path[i + 1];\n              const x3 = (x1 + x2) / 2;\n              const y3 = (y1 + y2) / 2;\n              const control1 = [x0 + 2 * (x1 - x0) / 3, y0 + 2 * (y1 - y0) / 3];\n              const control2 = [x3 + 2 * (x1 - x3) / 3, y3 + 2 * (y1 - y3) / 3];\n              bezierPoints.push([[x0, y0], control1, control2, [x3, y3]]);\n              [x0, y0] = [x3, y3];\n            }\n\n            const [x1, y1] = path[i];\n            const [x2, y2] = path[i + 1];\n            const control1 = [x0 + 2 * (x1 - x0) / 3, y0 + 2 * (y1 - y0) / 3];\n            const control2 = [x2 + 2 * (x1 - x2) / 3, y2 + 2 * (y1 - y2) / 3];\n            bezierPoints.push([[x0, y0], control1, control2, [x2, y2]]);\n            return bezierPoints;\n          }\n\n          #redraw() {\n            if (this.isEmpty()) {\n              this.#updateTransform();\n              return;\n            }\n\n            this.#setStroke();\n            const {\n              canvas,\n              ctx\n            } = this;\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            this.#updateTransform();\n\n            for (const path of this.bezierPath2D) {\n              ctx.stroke(path);\n            }\n          }\n\n          commit() {\n            if (this.#disableEditing) {\n              return;\n            }\n\n            super.commit();\n            this.isEditing = false;\n            this.disableEditMode();\n            this.setInForeground();\n            this.#disableEditing = true;\n            this.div.classList.add(\"disabled\");\n            this.#fitToContent(true);\n            this.makeResizable();\n            this.parent.addInkEditorIfNeeded(true);\n            this.moveInDOM();\n            this.div.focus({\n              preventScroll: true\n            });\n          }\n\n          focusin(event) {\n            if (!this._focusEventsAllowed) {\n              return;\n            }\n\n            super.focusin(event);\n            this.enableEditMode();\n          }\n\n          canvasPointerdown(event) {\n            if (event.button !== 0 || !this.isInEditMode() || this.#disableEditing) {\n              return;\n            }\n\n            this.setInForeground();\n            event.preventDefault();\n\n            if (event.type !== \"mouse\") {\n              this.div.focus();\n            }\n\n            this.#startDrawing(event.offsetX, event.offsetY);\n          }\n\n          canvasPointermove(event) {\n            event.preventDefault();\n            this.#draw(event.offsetX, event.offsetY);\n          }\n\n          canvasPointerup(event) {\n            event.preventDefault();\n            this.#endDrawing(event);\n          }\n\n          canvasPointerleave(event) {\n            this.#endDrawing(event);\n          }\n\n          #endDrawing(event) {\n            this.canvas.removeEventListener(\"pointerleave\", this.#boundCanvasPointerleave);\n            this.canvas.removeEventListener(\"pointermove\", this.#boundCanvasPointermove);\n            this.canvas.removeEventListener(\"pointerup\", this.#boundCanvasPointerup);\n            this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n            setTimeout(() => {\n              this.canvas.removeEventListener(\"contextmenu\", _display_utils.noContextMenu);\n            }, 10);\n            this.#stopDrawing(event.offsetX, event.offsetY);\n            this.addToAnnotationStorage();\n            this.setInBackground();\n          }\n\n          #createCanvas() {\n            this.canvas = document.createElement(\"canvas\");\n            this.canvas.width = this.canvas.height = 0;\n            this.canvas.className = \"inkEditorCanvas\";\n\n            _editor.AnnotationEditor._l10nPromise.get(\"editor_ink_canvas_aria_label\").then(msg => this.canvas?.setAttribute(\"aria-label\", msg));\n\n            this.div.append(this.canvas);\n            this.ctx = this.canvas.getContext(\"2d\");\n          }\n\n          #createObserver() {\n            this.#observer = new ResizeObserver(entries => {\n              const rect = entries[0].contentRect;\n\n              if (rect.width && rect.height) {\n                this.setDimensions(rect.width, rect.height);\n              }\n            });\n            this.#observer.observe(this.div);\n          }\n\n          get isResizable() {\n            return !this.isEmpty() && this.#disableEditing;\n          }\n\n          render() {\n            if (this.div) {\n              return this.div;\n            }\n\n            let baseX, baseY;\n\n            if (this.width) {\n              baseX = this.x;\n              baseY = this.y;\n            }\n\n            super.render();\n\n            _editor.AnnotationEditor._l10nPromise.get(\"editor_ink2_aria_label\").then(msg => this.div?.setAttribute(\"aria-label\", msg));\n\n            const [x, y, w, h] = this.#getInitialBBox();\n            this.setAt(x, y, 0, 0);\n            this.setDims(w, h);\n            this.#createCanvas();\n\n            if (this.width) {\n              const [parentWidth, parentHeight] = this.parentDimensions;\n              this.setAspectRatio(this.width * parentWidth, this.height * parentHeight);\n              this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n              this.#isCanvasInitialized = true;\n              this.#setCanvasDims();\n              this.setDims(this.width * parentWidth, this.height * parentHeight);\n              this.#redraw();\n              this.div.classList.add(\"disabled\");\n            } else {\n              this.div.classList.add(\"editing\");\n              this.enableEditMode();\n            }\n\n            this.#createObserver();\n            return this.div;\n          }\n\n          #setCanvasDims() {\n            if (!this.#isCanvasInitialized) {\n              return;\n            }\n\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.canvas.width = Math.ceil(this.width * parentWidth);\n            this.canvas.height = Math.ceil(this.height * parentHeight);\n            this.#updateTransform();\n          }\n\n          setDimensions(width, height) {\n            const roundedWidth = Math.round(width);\n            const roundedHeight = Math.round(height);\n\n            if (this.#realWidth === roundedWidth && this.#realHeight === roundedHeight) {\n              return;\n            }\n\n            this.#realWidth = roundedWidth;\n            this.#realHeight = roundedHeight;\n            this.canvas.style.visibility = \"hidden\";\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.width = width / parentWidth;\n            this.height = height / parentHeight;\n            this.fixAndSetPosition();\n\n            if (this.#disableEditing) {\n              this.#setScaleFactor(width, height);\n            }\n\n            this.#setCanvasDims();\n            this.#redraw();\n            this.canvas.style.visibility = \"visible\";\n            this.fixDims();\n          }\n\n          #setScaleFactor(width, height) {\n            const padding = this.#getPadding();\n            const scaleFactorW = (width - padding) / this.#baseWidth;\n            const scaleFactorH = (height - padding) / this.#baseHeight;\n            this.scaleFactor = Math.min(scaleFactorW, scaleFactorH);\n          }\n\n          #updateTransform() {\n            const padding = this.#getPadding() / 2;\n            this.ctx.setTransform(this.scaleFactor, 0, 0, this.scaleFactor, this.translationX * this.scaleFactor + padding, this.translationY * this.scaleFactor + padding);\n          }\n\n          static #buildPath2D(bezier) {\n            const path2D = new Path2D();\n\n            for (let i = 0, ii = bezier.length; i < ii; i++) {\n              const [first, control1, control2, second] = bezier[i];\n\n              if (i === 0) {\n                path2D.moveTo(...first);\n              }\n\n              path2D.bezierCurveTo(control1[0], control1[1], control2[0], control2[1], second[0], second[1]);\n            }\n\n            return path2D;\n          }\n\n          static #toPDFCoordinates(points, rect, rotation) {\n            const [blX, blY, trX, trY] = rect;\n\n            switch (rotation) {\n              case 0:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  points[i] += blX;\n                  points[i + 1] = trY - points[i + 1];\n                }\n\n                break;\n\n              case 90:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  const x = points[i];\n                  points[i] = points[i + 1] + blX;\n                  points[i + 1] = x + blY;\n                }\n\n                break;\n\n              case 180:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  points[i] = trX - points[i];\n                  points[i + 1] += blY;\n                }\n\n                break;\n\n              case 270:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  const x = points[i];\n                  points[i] = trX - points[i + 1];\n                  points[i + 1] = trY - x;\n                }\n\n                break;\n\n              default:\n                throw new Error(\"Invalid rotation\");\n            }\n\n            return points;\n          }\n\n          static #fromPDFCoordinates(points, rect, rotation) {\n            const [blX, blY, trX, trY] = rect;\n\n            switch (rotation) {\n              case 0:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  points[i] -= blX;\n                  points[i + 1] = trY - points[i + 1];\n                }\n\n                break;\n\n              case 90:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  const x = points[i];\n                  points[i] = points[i + 1] - blY;\n                  points[i + 1] = x - blX;\n                }\n\n                break;\n\n              case 180:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  points[i] = trX - points[i];\n                  points[i + 1] -= blY;\n                }\n\n                break;\n\n              case 270:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  const x = points[i];\n                  points[i] = trY - points[i + 1];\n                  points[i + 1] = trX - x;\n                }\n\n                break;\n\n              default:\n                throw new Error(\"Invalid rotation\");\n            }\n\n            return points;\n          }\n\n          #serializePaths(s, tx, ty, rect) {\n            const paths = [];\n            const padding = this.thickness / 2;\n            const shiftX = s * tx + padding;\n            const shiftY = s * ty + padding;\n\n            for (const bezier of this.paths) {\n              const buffer = [];\n              const points = [];\n\n              for (let j = 0, jj = bezier.length; j < jj; j++) {\n                const [first, control1, control2, second] = bezier[j];\n                const p10 = s * first[0] + shiftX;\n                const p11 = s * first[1] + shiftY;\n                const p20 = s * control1[0] + shiftX;\n                const p21 = s * control1[1] + shiftY;\n                const p30 = s * control2[0] + shiftX;\n                const p31 = s * control2[1] + shiftY;\n                const p40 = s * second[0] + shiftX;\n                const p41 = s * second[1] + shiftY;\n\n                if (j === 0) {\n                  buffer.push(p10, p11);\n                  points.push(p10, p11);\n                }\n\n                buffer.push(p20, p21, p30, p31, p40, p41);\n                points.push(p20, p21);\n\n                if (j === jj - 1) {\n                  points.push(p40, p41);\n                }\n              }\n\n              paths.push({\n                bezier: InkEditor.#toPDFCoordinates(buffer, rect, this.rotation),\n                points: InkEditor.#toPDFCoordinates(points, rect, this.rotation)\n              });\n            }\n\n            return paths;\n          }\n\n          #getBbox() {\n            let xMin = Infinity;\n            let xMax = -Infinity;\n            let yMin = Infinity;\n            let yMax = -Infinity;\n\n            for (const path of this.paths) {\n              for (const [first, control1, control2, second] of path) {\n                const bbox = _util.Util.bezierBoundingBox(...first, ...control1, ...control2, ...second);\n\n                xMin = Math.min(xMin, bbox[0]);\n                yMin = Math.min(yMin, bbox[1]);\n                xMax = Math.max(xMax, bbox[2]);\n                yMax = Math.max(yMax, bbox[3]);\n              }\n            }\n\n            return [xMin, yMin, xMax, yMax];\n          }\n\n          #getPadding() {\n            return this.#disableEditing ? Math.ceil(this.thickness * this.parentScale) : 0;\n          }\n\n          #fitToContent() {\n            let firstTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (this.isEmpty()) {\n              return;\n            }\n\n            if (!this.#disableEditing) {\n              this.#redraw();\n              return;\n            }\n\n            const bbox = this.#getBbox();\n            const padding = this.#getPadding();\n            this.#baseWidth = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n            this.#baseHeight = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n            const width = Math.ceil(padding + this.#baseWidth * this.scaleFactor);\n            const height = Math.ceil(padding + this.#baseHeight * this.scaleFactor);\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.width = width / parentWidth;\n            this.height = height / parentHeight;\n            this.setAspectRatio(width, height);\n            const prevTranslationX = this.translationX;\n            const prevTranslationY = this.translationY;\n            this.translationX = -bbox[0];\n            this.translationY = -bbox[1];\n            this.#setCanvasDims();\n            this.#redraw();\n            this.#realWidth = width;\n            this.#realHeight = height;\n            this.setDims(width, height);\n            const unscaledPadding = firstTime ? padding / this.scaleFactor / 2 : 0;\n            this.translate(prevTranslationX - this.translationX - unscaledPadding, prevTranslationY - this.translationY - unscaledPadding);\n          }\n\n          static deserialize(data, parent, uiManager) {\n            if (data instanceof _annotation_layer.InkAnnotationElement) {\n              return null;\n            }\n\n            const editor = super.deserialize(data, parent, uiManager);\n            editor.thickness = data.thickness;\n            editor.color = _util.Util.makeHexColor(...data.color);\n            editor.opacity = data.opacity;\n            const [pageWidth, pageHeight] = editor.pageDimensions;\n            const width = editor.width * pageWidth;\n            const height = editor.height * pageHeight;\n            const scaleFactor = editor.parentScale;\n            const padding = data.thickness / 2;\n            editor.#disableEditing = true;\n            editor.#realWidth = Math.round(width);\n            editor.#realHeight = Math.round(height);\n            const {\n              paths,\n              rect,\n              rotation\n            } = data;\n\n            for (let {\n              bezier\n            } of paths) {\n              bezier = InkEditor.#fromPDFCoordinates(bezier, rect, rotation);\n              const path = [];\n              editor.paths.push(path);\n              let p0 = scaleFactor * (bezier[0] - padding);\n              let p1 = scaleFactor * (bezier[1] - padding);\n\n              for (let i = 2, ii = bezier.length; i < ii; i += 6) {\n                const p10 = scaleFactor * (bezier[i] - padding);\n                const p11 = scaleFactor * (bezier[i + 1] - padding);\n                const p20 = scaleFactor * (bezier[i + 2] - padding);\n                const p21 = scaleFactor * (bezier[i + 3] - padding);\n                const p30 = scaleFactor * (bezier[i + 4] - padding);\n                const p31 = scaleFactor * (bezier[i + 5] - padding);\n                path.push([[p0, p1], [p10, p11], [p20, p21], [p30, p31]]);\n                p0 = p30;\n                p1 = p31;\n              }\n\n              const path2D = this.#buildPath2D(path);\n              editor.bezierPath2D.push(path2D);\n            }\n\n            const bbox = editor.#getBbox();\n            editor.#baseWidth = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n            editor.#baseHeight = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n            editor.#setScaleFactor(width, height);\n            return editor;\n          }\n\n          serialize() {\n            if (this.isEmpty()) {\n              return null;\n            }\n\n            const rect = this.getRect(0, 0);\n\n            const color = _editor.AnnotationEditor._colorManager.convert(this.ctx.strokeStyle);\n\n            return {\n              annotationType: _util.AnnotationEditorType.INK,\n              color,\n              thickness: this.thickness,\n              opacity: this.opacity,\n              paths: this.#serializePaths(this.scaleFactor / this.parentScale, this.translationX, this.translationY, rect),\n              pageIndex: this.pageIndex,\n              rect,\n              rotation: this.rotation,\n              structTreeParentId: this._structTreeParentId\n            };\n          }\n\n        }\n\n        exports.InkEditor = InkEditor;\n        /***/\n      },\n      /* 34 */\n\n      /***/\n      (__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.StampEditor = void 0;\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _editor = __w_pdfjs_require__(4);\n\n        var _display_utils = __w_pdfjs_require__(6);\n\n        var _annotation_layer = __w_pdfjs_require__(29);\n\n        class StampEditor extends _editor.AnnotationEditor {\n          #bitmap = null;\n          #bitmapId = null;\n          #bitmapPromise = null;\n          #bitmapUrl = null;\n          #bitmapFile = null;\n          #canvas = null;\n          #observer = null;\n          #resizeTimeoutId = null;\n          #isSvg = false;\n          #hasBeenAddedInUndoStack = false;\n          static _type = \"stamp\";\n\n          constructor(params) {\n            super({ ...params,\n              name: \"stampEditor\"\n            });\n            this.#bitmapUrl = params.bitmapUrl;\n            this.#bitmapFile = params.bitmapFile;\n          }\n\n          static initialize(l10n) {\n            _editor.AnnotationEditor.initialize(l10n);\n          }\n\n          static get supportedTypes() {\n            const types = [\"apng\", \"avif\", \"bmp\", \"gif\", \"jpeg\", \"png\", \"svg+xml\", \"webp\", \"x-icon\"];\n            return (0, _util.shadow)(this, \"supportedTypes\", types.map(type => `image/${type}`));\n          }\n\n          static get supportedTypesStr() {\n            return (0, _util.shadow)(this, \"supportedTypesStr\", this.supportedTypes.join(\",\"));\n          }\n\n          static isHandlingMimeForPasting(mime) {\n            return this.supportedTypes.includes(mime);\n          }\n\n          static paste(item, parent) {\n            parent.pasteEditor(_util.AnnotationEditorType.STAMP, {\n              bitmapFile: item.getAsFile()\n            });\n          }\n\n          #getBitmapFetched(data) {\n            let fromId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n            if (!data) {\n              this.remove();\n              return;\n            }\n\n            this.#bitmap = data.bitmap;\n\n            if (!fromId) {\n              this.#bitmapId = data.id;\n              this.#isSvg = data.isSvg;\n            }\n\n            this.#createCanvas();\n          }\n\n          #getBitmapDone() {\n            this.#bitmapPromise = null;\n\n            this._uiManager.enableWaiting(false);\n\n            if (this.#canvas) {\n              this.div.focus();\n            }\n          }\n\n          #getBitmap() {\n            if (this.#bitmapId) {\n              this._uiManager.enableWaiting(true);\n\n              this._uiManager.imageManager.getFromId(this.#bitmapId).then(data => this.#getBitmapFetched(data, true)).finally(() => this.#getBitmapDone());\n\n              return;\n            }\n\n            if (this.#bitmapUrl) {\n              const url = this.#bitmapUrl;\n              this.#bitmapUrl = null;\n\n              this._uiManager.enableWaiting(true);\n\n              this.#bitmapPromise = this._uiManager.imageManager.getFromUrl(url).then(data => this.#getBitmapFetched(data)).finally(() => this.#getBitmapDone());\n              return;\n            }\n\n            if (this.#bitmapFile) {\n              const file = this.#bitmapFile;\n              this.#bitmapFile = null;\n\n              this._uiManager.enableWaiting(true);\n\n              this.#bitmapPromise = this._uiManager.imageManager.getFromFile(file).then(data => this.#getBitmapFetched(data)).finally(() => this.#getBitmapDone());\n              return;\n            }\n\n            const input = document.createElement(\"input\");\n            input.type = \"file\";\n            input.accept = StampEditor.supportedTypesStr;\n            this.#bitmapPromise = new Promise(resolve => {\n              input.addEventListener(\"change\", async () => {\n                if (!input.files || input.files.length === 0) {\n                  this.remove();\n                } else {\n                  this._uiManager.enableWaiting(true);\n\n                  const data = await this._uiManager.imageManager.getFromFile(input.files[0]);\n                  this.#getBitmapFetched(data);\n                }\n\n                resolve();\n              });\n              input.addEventListener(\"cancel\", () => {\n                this.remove();\n                resolve();\n              });\n            }).finally(() => this.#getBitmapDone());\n            input.click();\n          }\n\n          remove() {\n            if (this.#bitmapId) {\n              this.#bitmap = null;\n\n              this._uiManager.imageManager.deleteId(this.#bitmapId);\n\n              this.#canvas?.remove();\n              this.#canvas = null;\n              this.#observer?.disconnect();\n              this.#observer = null;\n            }\n\n            super.remove();\n          }\n\n          rebuild() {\n            if (!this.parent) {\n              if (this.#bitmapId) {\n                this.#getBitmap();\n              }\n\n              return;\n            }\n\n            super.rebuild();\n\n            if (this.div === null) {\n              return;\n            }\n\n            if (this.#bitmapId) {\n              this.#getBitmap();\n            }\n\n            if (!this.isAttachedToDOM) {\n              this.parent.add(this);\n            }\n          }\n\n          onceAdded() {\n            this._isDraggable = true;\n            this.div.focus();\n          }\n\n          isEmpty() {\n            return !(this.#bitmapPromise || this.#bitmap || this.#bitmapUrl || this.#bitmapFile);\n          }\n\n          get isResizable() {\n            return true;\n          }\n\n          render() {\n            if (this.div) {\n              return this.div;\n            }\n\n            let baseX, baseY;\n\n            if (this.width) {\n              baseX = this.x;\n              baseY = this.y;\n            }\n\n            super.render();\n            this.div.hidden = true;\n\n            if (this.#bitmap) {\n              this.#createCanvas();\n            } else {\n              this.#getBitmap();\n            }\n\n            if (this.width) {\n              const [parentWidth, parentHeight] = this.parentDimensions;\n              this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n            }\n\n            return this.div;\n          }\n\n          #createCanvas() {\n            const {\n              div\n            } = this;\n            let {\n              width,\n              height\n            } = this.#bitmap;\n            const [pageWidth, pageHeight] = this.pageDimensions;\n            const MAX_RATIO = 0.75;\n\n            if (this.width) {\n              width = this.width * pageWidth;\n              height = this.height * pageHeight;\n            } else if (width > MAX_RATIO * pageWidth || height > MAX_RATIO * pageHeight) {\n              const factor = Math.min(MAX_RATIO * pageWidth / width, MAX_RATIO * pageHeight / height);\n              width *= factor;\n              height *= factor;\n            }\n\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.setDims(width * parentWidth / pageWidth, height * parentHeight / pageHeight);\n\n            this._uiManager.enableWaiting(false);\n\n            const canvas = this.#canvas = document.createElement(\"canvas\");\n            div.append(canvas);\n            div.hidden = false;\n            this.#drawBitmap(width, height);\n            this.#createObserver();\n\n            if (!this.#hasBeenAddedInUndoStack) {\n              this.parent.addUndoableEditor(this);\n              this.#hasBeenAddedInUndoStack = true;\n            }\n\n            this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n              source: this,\n              details: {\n                type: \"editing\",\n                subtype: this.editorType,\n                data: {\n                  action: \"inserted_image\"\n                }\n              }\n            });\n\n            this.addAltTextButton();\n          }\n\n          #setDimensions(width, height) {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.width = width / parentWidth;\n            this.height = height / parentHeight;\n            this.setDims(width, height);\n\n            if (this._initialOptions?.isCentered) {\n              this.center();\n            } else {\n              this.fixAndSetPosition();\n            }\n\n            this._initialOptions = null;\n\n            if (this.#resizeTimeoutId !== null) {\n              clearTimeout(this.#resizeTimeoutId);\n            }\n\n            const TIME_TO_WAIT = 200;\n            this.#resizeTimeoutId = setTimeout(() => {\n              this.#resizeTimeoutId = null;\n              this.#drawBitmap(width, height);\n            }, TIME_TO_WAIT);\n          }\n\n          #scaleBitmap(width, height) {\n            const {\n              width: bitmapWidth,\n              height: bitmapHeight\n            } = this.#bitmap;\n            let newWidth = bitmapWidth;\n            let newHeight = bitmapHeight;\n            let bitmap = this.#bitmap;\n\n            while (newWidth > 2 * width || newHeight > 2 * height) {\n              const prevWidth = newWidth;\n              const prevHeight = newHeight;\n\n              if (newWidth > 2 * width) {\n                newWidth = newWidth >= 16384 ? Math.floor(newWidth / 2) - 1 : Math.ceil(newWidth / 2);\n              }\n\n              if (newHeight > 2 * height) {\n                newHeight = newHeight >= 16384 ? Math.floor(newHeight / 2) - 1 : Math.ceil(newHeight / 2);\n              }\n\n              const offscreen = new OffscreenCanvas(newWidth, newHeight);\n              const ctx = offscreen.getContext(\"2d\");\n              ctx.drawImage(bitmap, 0, 0, prevWidth, prevHeight, 0, 0, newWidth, newHeight);\n              bitmap = offscreen.transferToImageBitmap();\n            }\n\n            return bitmap;\n          }\n\n          #drawBitmap(width, height) {\n            width = Math.ceil(width);\n            height = Math.ceil(height);\n            const canvas = this.#canvas;\n\n            if (!canvas || canvas.width === width && canvas.height === height) {\n              return;\n            }\n\n            canvas.width = width;\n            canvas.height = height;\n            const bitmap = this.#isSvg ? this.#bitmap : this.#scaleBitmap(width, height);\n            const ctx = canvas.getContext(\"2d\");\n            ctx.filter = this._uiManager.hcmFilter;\n            ctx.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height, 0, 0, width, height);\n          }\n\n          #serializeBitmap(toUrl) {\n            if (toUrl) {\n              if (this.#isSvg) {\n                const url = this._uiManager.imageManager.getSvgUrl(this.#bitmapId);\n\n                if (url) {\n                  return url;\n                }\n              }\n\n              const canvas = document.createElement(\"canvas\");\n              ({\n                width: canvas.width,\n                height: canvas.height\n              } = this.#bitmap);\n              const ctx = canvas.getContext(\"2d\");\n              ctx.drawImage(this.#bitmap, 0, 0);\n              return canvas.toDataURL();\n            }\n\n            if (this.#isSvg) {\n              const [pageWidth, pageHeight] = this.pageDimensions;\n              const width = Math.round(this.width * pageWidth * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n              const height = Math.round(this.height * pageHeight * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n              const offscreen = new OffscreenCanvas(width, height);\n              const ctx = offscreen.getContext(\"2d\");\n              ctx.drawImage(this.#bitmap, 0, 0, this.#bitmap.width, this.#bitmap.height, 0, 0, width, height);\n              return offscreen.transferToImageBitmap();\n            }\n\n            return structuredClone(this.#bitmap);\n          }\n\n          #createObserver() {\n            this.#observer = new ResizeObserver(entries => {\n              const rect = entries[0].contentRect;\n\n              if (rect.width && rect.height) {\n                this.#setDimensions(rect.width, rect.height);\n              }\n            });\n            this.#observer.observe(this.div);\n          }\n\n          static deserialize(data, parent, uiManager) {\n            if (data instanceof _annotation_layer.StampAnnotationElement) {\n              return null;\n            }\n\n            const editor = super.deserialize(data, parent, uiManager);\n            const {\n              rect,\n              bitmapUrl,\n              bitmapId,\n              isSvg,\n              accessibilityData\n            } = data;\n\n            if (bitmapId && uiManager.imageManager.isValidId(bitmapId)) {\n              editor.#bitmapId = bitmapId;\n            } else {\n              editor.#bitmapUrl = bitmapUrl;\n            }\n\n            editor.#isSvg = isSvg;\n            const [parentWidth, parentHeight] = editor.pageDimensions;\n            editor.width = (rect[2] - rect[0]) / parentWidth;\n            editor.height = (rect[3] - rect[1]) / parentHeight;\n\n            if (accessibilityData) {\n              editor.altTextData = accessibilityData;\n            }\n\n            return editor;\n          }\n\n          serialize() {\n            let isForCopying = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            if (this.isEmpty()) {\n              return null;\n            }\n\n            const serialized = {\n              annotationType: _util.AnnotationEditorType.STAMP,\n              bitmapId: this.#bitmapId,\n              pageIndex: this.pageIndex,\n              rect: this.getRect(0, 0),\n              rotation: this.rotation,\n              isSvg: this.#isSvg,\n              structTreeParentId: this._structTreeParentId\n            };\n\n            if (isForCopying) {\n              serialized.bitmapUrl = this.#serializeBitmap(true);\n              serialized.accessibilityData = this.altTextData;\n              return serialized;\n            }\n\n            const {\n              decorative,\n              altText\n            } = this.altTextData;\n\n            if (!decorative && altText) {\n              serialized.accessibilityData = {\n                type: \"Figure\",\n                alt: altText\n              };\n            }\n\n            if (context === null) {\n              return serialized;\n            }\n\n            context.stamps ||= new Map();\n            const area = this.#isSvg ? (serialized.rect[2] - serialized.rect[0]) * (serialized.rect[3] - serialized.rect[1]) : null;\n\n            if (!context.stamps.has(this.#bitmapId)) {\n              context.stamps.set(this.#bitmapId, {\n                area,\n                serialized\n              });\n              serialized.bitmap = this.#serializeBitmap(false);\n            } else if (this.#isSvg) {\n              const prevData = context.stamps.get(this.#bitmapId);\n\n              if (area > prevData.area) {\n                prevData.area = area;\n                prevData.serialized.bitmap.close();\n                prevData.serialized.bitmap = this.#serializeBitmap(false);\n              }\n            }\n\n            return serialized;\n          }\n\n        }\n\n        exports.StampEditor = StampEditor;\n        /***/\n      }\n      /******/\n      ];\n      /************************************************************************/\n\n      /******/\n      // The module cache\n\n      /******/\n\n      var __webpack_module_cache__ = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __w_pdfjs_require__(moduleId) {\n        /******/\n        // Check if module is in cache\n\n        /******/\n        var cachedModule = __webpack_module_cache__[moduleId];\n        /******/\n\n        if (cachedModule !== undefined) {\n          /******/\n          return cachedModule.exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = __webpack_module_cache__[moduleId] = {\n          /******/\n          // no module.id needed\n\n          /******/\n          // no module.loaded needed\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        __webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /************************************************************************/\n\n\n      var __webpack_exports__ = {}; // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n\n      (() => {\n        var exports = __webpack_exports__;\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        Object.defineProperty(exports, \"AbortException\", {\n          enumerable: true,\n          get: function () {\n            return _util.AbortException;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationEditorLayer\", {\n          enumerable: true,\n          get: function () {\n            return _annotation_editor_layer.AnnotationEditorLayer;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationEditorParamsType\", {\n          enumerable: true,\n          get: function () {\n            return _util.AnnotationEditorParamsType;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationEditorType\", {\n          enumerable: true,\n          get: function () {\n            return _util.AnnotationEditorType;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationEditorUIManager\", {\n          enumerable: true,\n          get: function () {\n            return _tools.AnnotationEditorUIManager;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationLayer\", {\n          enumerable: true,\n          get: function () {\n            return _annotation_layer.AnnotationLayer;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationMode\", {\n          enumerable: true,\n          get: function () {\n            return _util.AnnotationMode;\n          }\n        });\n        Object.defineProperty(exports, \"CMapCompressionType\", {\n          enumerable: true,\n          get: function () {\n            return _util.CMapCompressionType;\n          }\n        });\n        Object.defineProperty(exports, \"DOMSVGFactory\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.DOMSVGFactory;\n          }\n        });\n        Object.defineProperty(exports, \"FeatureTest\", {\n          enumerable: true,\n          get: function () {\n            return _util.FeatureTest;\n          }\n        });\n        Object.defineProperty(exports, \"GlobalWorkerOptions\", {\n          enumerable: true,\n          get: function () {\n            return _worker_options.GlobalWorkerOptions;\n          }\n        });\n        Object.defineProperty(exports, \"ImageKind\", {\n          enumerable: true,\n          get: function () {\n            return _util.ImageKind;\n          }\n        });\n        Object.defineProperty(exports, \"InvalidPDFException\", {\n          enumerable: true,\n          get: function () {\n            return _util.InvalidPDFException;\n          }\n        });\n        Object.defineProperty(exports, \"MissingPDFException\", {\n          enumerable: true,\n          get: function () {\n            return _util.MissingPDFException;\n          }\n        });\n        Object.defineProperty(exports, \"OPS\", {\n          enumerable: true,\n          get: function () {\n            return _util.OPS;\n          }\n        });\n        Object.defineProperty(exports, \"PDFDataRangeTransport\", {\n          enumerable: true,\n          get: function () {\n            return _api.PDFDataRangeTransport;\n          }\n        });\n        Object.defineProperty(exports, \"PDFDateString\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.PDFDateString;\n          }\n        });\n        Object.defineProperty(exports, \"PDFWorker\", {\n          enumerable: true,\n          get: function () {\n            return _api.PDFWorker;\n          }\n        });\n        Object.defineProperty(exports, \"PasswordResponses\", {\n          enumerable: true,\n          get: function () {\n            return _util.PasswordResponses;\n          }\n        });\n        Object.defineProperty(exports, \"PermissionFlag\", {\n          enumerable: true,\n          get: function () {\n            return _util.PermissionFlag;\n          }\n        });\n        Object.defineProperty(exports, \"PixelsPerInch\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.PixelsPerInch;\n          }\n        });\n        Object.defineProperty(exports, \"PromiseCapability\", {\n          enumerable: true,\n          get: function () {\n            return _util.PromiseCapability;\n          }\n        });\n        Object.defineProperty(exports, \"RenderingCancelledException\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.RenderingCancelledException;\n          }\n        });\n        Object.defineProperty(exports, \"SVGGraphics\", {\n          enumerable: true,\n          get: function () {\n            return _api.SVGGraphics;\n          }\n        });\n        Object.defineProperty(exports, \"UnexpectedResponseException\", {\n          enumerable: true,\n          get: function () {\n            return _util.UnexpectedResponseException;\n          }\n        });\n        Object.defineProperty(exports, \"Util\", {\n          enumerable: true,\n          get: function () {\n            return _util.Util;\n          }\n        });\n        Object.defineProperty(exports, \"VerbosityLevel\", {\n          enumerable: true,\n          get: function () {\n            return _util.VerbosityLevel;\n          }\n        });\n        Object.defineProperty(exports, \"XfaLayer\", {\n          enumerable: true,\n          get: function () {\n            return _xfa_layer.XfaLayer;\n          }\n        });\n        Object.defineProperty(exports, \"build\", {\n          enumerable: true,\n          get: function () {\n            return _api.build;\n          }\n        });\n        Object.defineProperty(exports, \"createValidAbsoluteUrl\", {\n          enumerable: true,\n          get: function () {\n            return _util.createValidAbsoluteUrl;\n          }\n        });\n        Object.defineProperty(exports, \"getDocument\", {\n          enumerable: true,\n          get: function () {\n            return _api.getDocument;\n          }\n        });\n        Object.defineProperty(exports, \"getFilenameFromUrl\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.getFilenameFromUrl;\n          }\n        });\n        Object.defineProperty(exports, \"getPdfFilenameFromUrl\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.getPdfFilenameFromUrl;\n          }\n        });\n        Object.defineProperty(exports, \"getXfaPageViewport\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.getXfaPageViewport;\n          }\n        });\n        Object.defineProperty(exports, \"isDataScheme\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.isDataScheme;\n          }\n        });\n        Object.defineProperty(exports, \"isPdfFile\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.isPdfFile;\n          }\n        });\n        Object.defineProperty(exports, \"loadScript\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.loadScript;\n          }\n        });\n        Object.defineProperty(exports, \"noContextMenu\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.noContextMenu;\n          }\n        });\n        Object.defineProperty(exports, \"normalizeUnicode\", {\n          enumerable: true,\n          get: function () {\n            return _util.normalizeUnicode;\n          }\n        });\n        Object.defineProperty(exports, \"renderTextLayer\", {\n          enumerable: true,\n          get: function () {\n            return _text_layer.renderTextLayer;\n          }\n        });\n        Object.defineProperty(exports, \"setLayerDimensions\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.setLayerDimensions;\n          }\n        });\n        Object.defineProperty(exports, \"shadow\", {\n          enumerable: true,\n          get: function () {\n            return _util.shadow;\n          }\n        });\n        Object.defineProperty(exports, \"updateTextLayer\", {\n          enumerable: true,\n          get: function () {\n            return _text_layer.updateTextLayer;\n          }\n        });\n        Object.defineProperty(exports, \"version\", {\n          enumerable: true,\n          get: function () {\n            return _api.version;\n          }\n        });\n\n        var _util = __w_pdfjs_require__(1);\n\n        var _api = __w_pdfjs_require__(2);\n\n        var _display_utils = __w_pdfjs_require__(6);\n\n        var _text_layer = __w_pdfjs_require__(26);\n\n        var _annotation_editor_layer = __w_pdfjs_require__(27);\n\n        var _tools = __w_pdfjs_require__(5);\n\n        var _annotation_layer = __w_pdfjs_require__(29);\n\n        var _worker_options = __w_pdfjs_require__(14);\n\n        var _xfa_layer = __w_pdfjs_require__(32);\n\n        const pdfjsVersion = '3.11.174';\n        const pdfjsBuild = 'ce8716743';\n      })();\n      /******/\n\n\n      return __webpack_exports__;\n      /******/\n    })()\n  );\n});","map":{"version":3,"mappings":"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","names":["module","define","exports","root","globalThis","isNodeJS","process","versions","nw","electron","type","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","MAX_IMAGE_SIZE_TO_CACHE","LINE_FACTOR","LINE_DESCENT_FACTOR","BASELINE_FACTOR","RenderingIntentFlag","ANY","DISPLAY","PRINT","SAVE","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","AnnotationMode","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","AnnotationEditorPrefix","AnnotationEditorType","NONE","FREETEXT","STAMP","INK","AnnotationEditorParamsType","RESIZE","CREATE","FREETEXT_SIZE","FREETEXT_COLOR","FREETEXT_OPACITY","INK_COLOR","INK_THICKNESS","INK_OPACITY","PermissionFlag","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","CARET","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","AnnotationActionEventType","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","DocumentActionEventType","WC","WS","DS","WP","DP","PageActionEventType","O","VerbosityLevel","ERRORS","WARNINGS","INFOS","CMapCompressionType","BINARY","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotation","endAnnotation","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","setVerbosityLevel","level","Number","isInteger","getVerbosityLevel","info","msg","console","log","warn","unreachable","Error","assert","cond","_isValidProtocol","url","protocol","createValidAbsoluteUrl","baseUrl","options","addDefaultProtocol","startsWith","dots","match","length","tryConvertEncoding","stringToUTF8String","absoluteUrl","URL","shadow","obj","prop","value","nonSerializable","Object","defineProperty","enumerable","configurable","writable","BaseException","BaseExceptionClosure","message","name","constructor","prototype","PasswordException","code","UnknownErrorException","details","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","bytesToString","bytes","undefined","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","i","chunkEnd","Math","min","chunk","subarray","push","join","stringToBytes","str","Uint8Array","charCodeAt","string32","objectSize","keys","objectFromMap","map","create","key","isLittleEndian","buffer8","view32","Uint32Array","buffer","isEvalSupported","Function","FeatureTest","isOffscreenCanvasSupported","OffscreenCanvas","platform","navigator","isWin","isMac","includes","isCSSRoundSupported","CSS","supports","hexNumbers","Array","n","toString","padStart","Util","makeHexColor","r","g","b","scaleMinMax","minMax","temp","m1","m2","applyTransform","p","m","xt","yt","applyInverseTransform","d","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","max","inverseTransform","singularValueDecompose2dScale","transpose","a","c","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","xLow","xHigh","yLow","yHigh","bezierBoundingBox","x0","y0","x1","y1","x2","y2","x3","y3","tvalues","bounds","t","t1","t2","b2ac","sqrtb2ac","abs","j","mt","jlen","PDFStringTranslateTable","stringToPDFString","encoding","decoder","TextDecoder","fatal","decode","ex","ii","charAt","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isArrayBuffer","v","byteLength","isArrayEqual","arr1","arr2","getModificationDate","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","PromiseCapability","promise","Promise","resolve","reject","data","reason","settled","NormalizeRegex","NormalizationMap","normalizeUnicode","Map","replaceAll","_","normalize","get","getUuid","crypto","randomUUID","buf","getRandomValues","floor","random","AnnotationPrefix","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","DELAYED_CLEANUP_TIMEOUT","DefaultCanvasFactory","NodeCanvasFactory","DOMCanvasFactory","DefaultCMapReaderFactory","NodeCMapReaderFactory","DOMCMapReaderFactory","DefaultFilterFactory","NodeFilterFactory","DOMFilterFactory","DefaultStandardFontDataFactory","NodeStandardFontDataFactory","DOMStandardFontDataFactory","getDocument","src","range","task","PDFDocumentLoadingTask","docId","getUrlProp","getDataProp","httpHeaders","withCredentials","password","rangeTransport","PDFDataRangeTransport","rangeChunkSize","worker","PDFWorker","docBaseUrl","cMapUrl","cMapPacked","CMapReaderFactory","standardFontDataUrl","StandardFontDataFactory","ignoreErrors","stopAtErrors","maxImageSize","canvasMaxAreaInBytes","disableFontFace","fontExtraProperties","enableXfa","ownerDocument","document","disableRange","disableStream","disableAutoFetch","pdfBug","NaN","useSystemFonts","useWorkerFetch","baseURI","canvasFactory","filterFactory","styleElement","transportFactory","cMapReaderFactory","isCompressed","standardFontDataFactory","workerParams","port","GlobalWorkerOptions","workerPort","fromPort","_worker","fetchDocParams","apiVersion","evaluatorOptions","transportParams","then","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","contentDispositionFilename","createPDFNetworkStream","params","PDFNodeStream","PDFFetchStream","PDFNetworkStream","all","workerId","messageHandler","MessageHandler","transport","WorkerTransport","_transport","send","catch","_capability","source","sendWithPromise","val","href","window","location","Buffer","isNaN","onPassword","onProgress","destroy","_pendingDestroy","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","begin","onDataProgress","loaded","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","end","abort","PDFDocumentProxy","pdfInfo","_pdfInfo","getJSActions","js","jsArr","annotationStorage","numPages","fingerprints","isPureXfa","_htmlForXfa","allXfaHtml","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","saveDocument","getDownloadInfo","downloadInfoCapability","cleanup","keepLoadedFonts","startCleanup","loadingTask","loadingParams","getFieldObjects","hasJSActions","getCalculationOrderIds","PDFPageProxy","pageIndex","pageInfo","_pageIndex","_pageInfo","_stats","StatTimer","_pdfBug","commonObjs","objs","PDFObjects","_maybeCleanupAfterRender","_intentStates","rotate","userUnit","view","getViewport","scale","rotation","offsetX","offsetY","dontFlip","PageViewport","viewBox","getAnnotations","intent","intentArgs","getRenderingIntent","renderingIntent","getPageJSActions","getXfa","children","render","canvasContext","viewport","annotationMode","background","optionalContentConfigPromise","annotationCanvasMap","pageColors","printAnnotationStorage","time","intentState","cacheKey","set","streamReaderCancelTimeout","clearTimeout","intentPrint","displayReadyCapability","operatorList","fnArray","argsArray","lastChunk","separateAnnots","_pumpOperatorList","complete","error","renderTasks","delete","internalRenderTask","capability","_abortOperatorList","timeEnd","InternalRenderTask","callback","useRequestAnimationFrame","Set","add","renderTask","transparency","optionalContentConfig","initializeGraphics","operatorListChanged","getOperatorList","opListReadCapability","opListTask","streamTextContent","includeMarkedContent","disableNormalization","TEXT_CONTENT_CHUNK_SIZE","sendWithStream","highWaterMark","size","textContent","items","getTextContent","xfa","XfaText","readableStream","pump","reader","read","done","assign","styles","getReader","getStructTree","_destroy","waitOn","values","force","completed","cancel","clear","resetStats","success","delayed","setTimeout","_startRenderPage","_renderPageChunk","operatorListChunk","annotationStorageSerializable","transfers","streamReader","RenderingCancelledException","delay","extraDelay","curCacheKey","curIntentState","stats","LoopbackPort","postMessage","transfer","event","structuredClone","call","addEventListener","removeEventListener","terminate","PDFWorkerUtil","isWorkerDisabled","fallbackWorkerSrc","fakeWorkerId","__non_webpack_require__","pdfjsFilePath","currentScript","replace","isSameOrigin","otherUrl","base","origin","other","createCDNWrapper","wrapper","createObjectURL","Blob","_port","_webWorker","_messageHandler","has","WeakMap","_initializeFromPort","_initialize","on","_mainThreadWorkerMessageHandler","workerSrc","Worker","terminateEarly","onWorkerError","_setupFakeWorker","sendTest","testObj","_setupFakeWorkerGlobal","WorkerMessageHandler","workerHandler","setup","cachedPort","pdfjsWorker","loader","mainWorkerMessageHandler","eval","factory","fontLoader","FontLoader","_params","destroyCapability","_networkStream","_fullReader","_lastProgress","setupMessageHandler","cacheSimpleMethod","cachedPromise","AnnotationStorage","isOpList","SerializableEmpty","PrintAnnotationStorage","serializable","hash","page","hasOwnProperty","resetModified","terminated","cancelAllRequests","sink","getFullReader","evt","onPull","close","ArrayBuffer","enqueue","onCancel","ready","readyReason","headersCapability","fullReader","headersReady","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","_numPages","htmlForXfa","exception","updatePassword","exportedData","exportedError","inspectFont","FontInspector","enabled","font","fontAdded","FontFaceObject","bind","finally","imageData","pageProxy","bitmap","width","height","fetch","filename","num","gen","results","OptionalContentConfig","metadata","Metadata","cleanupSuccessful","objId","ensureObj","RenderTask","onContinue","form","canvas","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_cancelBound","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","_canvas","StepperManager","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","requestAnimationFrame","executeOperatorList","version","build","freeze","onSetModified","onResetModified","onAnnotationEditor","getValue","defaultValue","getRawValue","remove","AnnotationEditor","setValue","modified","entry","entries","_type","getAll","setAll","print","MurmurHash3_64","context","hasBitmap","serialized","serialize","update","JSON","stringify","hexdigest","parent","clone","focusin","focusout","_initialOptions","_uiManager","_focusEventsAllowed","_l10nPromise","_zIndex","_borderLineWidth","_colorManager","ColorManager","SMALL_EDITOR_SIZE","parameters","div","uiManager","annotationElementId","_willKeepAspectRatio","isCentered","_structTreeParentId","rawDims","pageWidth","pageHeight","pageX","pageY","pageRotation","viewParameters","pageDimensions","pageTranslation","parentDimensions","x","y","isAttachedToDOM","deleted","editorType","getPrototypeOf","_defaultLineColor","getHexCode","deleteAnnotationElement","editor","fakeEditor","FakeEditor","getNextId","addToAnnotationStorage","initialize","l10n","strings","style","getComputedStyle","documentElement","parseFloat","getPropertyValue","updateDefaultParams","_value","defaultPropertiesToUpdate","isHandlingMimeForPasting","mime","paste","item","propertiesToUpdate","_isDraggable","classList","toggle","center","parentRotation","fixAndSetPosition","addCommands","currentLayer","setInBackground","zIndex","setInForeground","setParent","setSelected","target","relatedTarget","closest","preventDefault","isMultipleSelection","commitOrRemove","isEmpty","commit","setAt","tx","ty","screenToPageTranslation","translate","translateInPage","scrollIntoView","block","drag","parentWidth","parentHeight","getBoundingClientRect","findNewParent","bx","by","left","toFixed","top","moveInDOM","rotatePoint","angle","pageTranslationToScreen","getRotationMatrix","parentScale","realScale","scaledWidth","scaledHeight","round","setDims","fixDims","widthPercent","endsWith","heightPercent","getInitialTranslation","createElement","classes","append","noContextMenu","prepend","resizerPointerdown","button","ctrlKey","boundResizerPointermove","savedDraggable","pointerMoveOptions","passive","capture","savedX","savedY","savedWidth","savedHeight","savedParentCursor","cursor","savedCursor","pointerUpCallback","newX","newY","newWidth","newHeight","cmd","undo","mustExec","resizerPointermove","minWidth","MIN_SIZE","minHeight","rotationMatrix","transf","invRotationMatrix","invTransf","getPoint","getOpposite","isDiagonal","isHorizontal","w","h","point","oppositePoint","transfOppositePoint","oppositeX","oppositeY","ratioX","ratioY","deltaX","deltaY","movementX","movementY","oldDiag","hypot","addAltTextButton","altText","className","setAttribute","tabIndex","stopPropagation","editAltText","PERCENT","setAltTextButtonState","tooltip","DELAY_TO_SHOW_TOOLTIP","_eventBus","dispatch","subtype","action","innerText","parentNode","getClientDimensions","altTextData","decorative","maxWidth","maxHeight","pointerdown","setUpDragSession","isSelected","pointerMoveCallback","e","dragSelectedEditors","endDragSession","shiftKey","metaKey","toggleSelected","moveEditorInDOM","_setParentAndPosition","changeParent","getRect","shiftX","shiftY","getRectInCurrentCoords","onceAdded","enableEditMode","disableEditMode","isInEditMode","shouldGetKeyboardEvents","needsToBeRebuilt","rebuild","isForCopying","deserialize","removeEditor","isResizable","makeResizable","select","unselect","contains","activeElement","focus","updateParams","disableEditing","hidden","enableEditing","enterInEditMode","contentDiv","isEditing","setActiveEditor","setAspectRatio","aspectRatio","bindEvents","element","names","opacityToHex","opacity","IdManager","getId","ImageManager","_isSVGFittingCanvas","svg","ctx","getContext","image","Image","drawImage","getImageData","rawData","refCounter","isSvg","response","ok","statusText","blob","file","mustRemoveAspectRatioPromise","fileReader","FileReader","imageElement","imagePromise","onload","svgUrl","result","onerror","readAsDataURL","createImageBitmap","getFromFile","lastModified","getFromUrl","getFromId","getSvgUrl","deleteId","isValidId","CommandManager","maxSize","overwriteIfSameType","keepUndo","next","splice","redo","hasSomethingToUndo","hasSomethingToRedo","KeyboardManager","callbacks","allKeys","isMacKey","split","at","altKey","exec","self","bubbles","args","checker","_colorsMapping","_colors","colors","convert","color","rgb","matchMedia","matches","RGB","every","AnnotationEditorUIManager","blur","copy","cut","keydown","onEditingAction","onPageChanging","onScaleChanging","onRotationChanging","hasSelectedEditor","TRANSLATE_SMALL","TRANSLATE_BIG","_keyboardManager","proto","arrowChecker","hasSomethingToControl","small","big","selectAll","unselectAll","translateSelectedEditors","container","viewer","altTextManager","eventBus","pdfDocument","_on","PixelsPerInch","PDF_TO_CSS_UNITS","_off","layer","hcmFilter","addHCMFilter","foreground","direction","focusMainContainer","findParent","layerX","layerY","disableUserSelect","addShouldRescale","removeShouldRescale","pagesRotation","hasSelection","lastEditor","lastActiveElement","once","addEditListeners","removeEditListeners","editors","clipboardData","setData","parse","isArray","newEditors","deserializedEditor","getActive","dispatchUpdateStates","hasChanged","some","dispatchUpdateUI","setEditingState","registerEditorTypes","types","getLayer","currentPageIndex","addLayer","enable","disable","removeLayer","updateMode","mode","editId","updateToolbar","addNewEditor","enableWaiting","mustWait","disableClick","enableClick","getEditors","getEditor","addEditor","addDeletedAnnotationElement","isDeletedAnnotationElement","removeDeletedAnnotationElement","addEditorToLayer","addOrRebuild","ed","selectEditors","noCommit","totalX","totalY","TIME_TO_WAIT","savedPageIndex","newPageIndex","mustBeAddedInUndoStack","move","isActive","getMode","imageManager","SVG_NS","PDF","BaseFilterFactory","cache","defs","visibility","contain","position","createElementNS","body","addFilter","maps","tableR","tableG","tableB","mapR","mapG","mapB","bufferR","bufferG","bufferB","filter","fgColor","bgColor","fgRGB","bgRGB","table","getSteps","start","arr","addHighlightHCMFilter","newFgColor","newBgColor","fgGray","bgGray","newFgRGB","newBgRGB","fg","bg","step","newStart","newStep","prev","k","keepHCM","addGrayConversion","feColorMatrix","createFilter","feComponentTransfer","appendFeFunc","func","feFunc","rTable","addTransferMapConversion","gTable","bTable","getRGB","BaseCanvasFactory","_document","_createCanvas","fetchData","asTypedArray","isValidFetchUrl","arrayBuffer","text","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","responseText","BaseCMapReaderFactory","_fetchData","compressionType","cMapData","BaseStandardFontDataFactory","DOMSVGFactory","BaseSVGFactory","_createSVG","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","convertToViewportPoint","convertToViewportRectangle","topLeft","bottomRight","convertToPdfPoint","isDataScheme","trim","substring","toLowerCase","isPdfFile","test","getFilenameFromUrl","onlyStripPath","lastIndexOf","getPdfFilenameFromUrl","defaultFilename","reURI","reFilename","splitURI","suggestedFilename","started","times","now","outBuf","longest","padEnd","loadScript","removeScriptElement","script","head","deprecated","pdfDateStringRegex","PDFDateString","toDateObject","input","RegExp","year","parseInt","month","day","hour","minute","universalTimeRelation","offsetHour","offsetMinute","UTC","getXfaPageViewport","xfaPage","attributes","colorRGB","getColorValues","span","computedColor","getCurrentTransform","f","getTransform","getCurrentTransformInverse","invertSelf","setLayerDimensions","mustFlip","mustRotate","useRound","widthStr","heightStr","reset","canvasAndContext","skipDimensions","SEED","MASK_HIGH","MASK_LOW","seed","h1","h2","blockCounts","tailLength","dataUint32","k1","k2","C1","C2","C1_LOW","C2_LOW","nativeFontFaces","loadingRequests","loadTestFontId","addNativeFontFace","nativeFontFace","fonts","removeNativeFontFace","insertRule","rule","getElementsByTagName","styleSheet","sheet","cssRules","loadSystemFont","loadedName","isFontLoadingAPISupported","fontFace","FontFace","load","baseFontName","attached","missingFile","systemFontInfo","createNativeFontFace","family","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","hasFonts","supported","userAgent","completeRequest","otherRequest","shift","_loadTestFont","testFont","atob","int32","offset","spliceString","s","insert","chunk1","chunk2","called","isFontReady","fillText","COMMENT_OFFSET","CFF_CHECKSUM_OFFSET","XXXX_VALUE","checksum","btoa","fontFamily","translatedData","compiledGlyphs","_inspectFont","cssFontInfo","css","weight","fontWeight","italicAngle","mimetype","getPathGenerator","character","cmds","jsBuf","current","fs","readFile","Canvas","createCanvas","MIN_FONT_SIZE","MAX_FONT_SIZE","MAX_GROUP_SIZE","EXECUTION_TIME","EXECUTION_STEPS","MAX_SIZE_TO_COMPILE","FULL_CHUNK_HEIGHT","mirrorContextOperations","destCtx","_removeMirroring","__originalSave","__originalRestore","__originalRotate","__originalScale","__originalTranslate","__originalTransform","__originalSetTransform","setTransform","__originalResetTransform","resetTransform","__originalClip","__originalMoveTo","__originalLineTo","__originalBezierCurveTo","bezierCurveTo","__originalRect","__originalClosePath","__originalBeginPath","beginPath","ctxSave","ctxRestore","ctxTranslate","ctxScale","ctxTransform","ctxSetTransform","ctxResetTransform","ctxRotate","cp1x","cp1y","cp2x","cp2y","CachedCanvases","getCanvas","canvasEntry","drawImageAtIntegerCoords","srcImg","srcX","srcY","srcW","srcH","destX","destY","destW","destH","tlX","rTlX","tlY","rTlY","brX","rWidth","brY","rHeight","sign","scaleX","scaleY","compileType3Glyph","imgData","POINT_TO_PROCESS_LIMIT","POINT_TYPES","width1","points","j0","lineSize","pos","elem","mask","count","sum","steps","Int32Array","path","Path2D","p0","pp","drawOutline","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","textMatrixScale","fontMatrix","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","transferMaps","startNewPathAndClipBox","clipBox","setCurrentPoint","updatePathMinMax","minX","minY","maxX","maxY","updateRectMinMax","updateScalingPathMinMax","updateCurvePathMinMax","box","getPathBoundingBox","pathType","PathType","xStrokePad","yStrokePad","updateClipFromPath","isEmptyClip","Infinity","getClippedPathBoundingBox","putBinaryImageData","ImageData","putImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","createImageData","srcPos","destPos","dest","thisChunkHeight","elemsInThisChunk","kind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","kEnd","kEndUnrolled","srcByte","putBinaryImageMask","nonBlackColor","copyCtxState","sourceCtx","properties","property","setLineDash","getLineDash","lineDashOffset","resetCtxToDefault","strokeStyle","fillStyle","fillRule","globalAlpha","lineCap","lineJoin","miterLimit","globalCompositeOperation","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","genericComposeSMask","maskCtx","layerCtx","backdrop","layerOffsetX","layerOffsetY","maskOffsetX","maskOffsetY","hasBackdrop","composeFn","PIXELS_TO_PROCESS","chunkSize","ceil","row","chunkHeight","composeSMask","smask","layerBox","layerWidth","layerHeight","getImageSmoothingEnabled","interpolate","fround","actualScale","devicePixelRatio","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","canvasCtx","markedContentStack","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","suspendedCtx","contentVisible","cachedCanvases","cachedPatterns","viewportScale","outputScaleX","outputScaleY","_cachedScaleForStroking","_cachedGetSinglePixelWidth","_cachedBitmapsMap","getObject","fallback","savedFillStyle","fillRect","transparentCanvas","compositeCtx","executionStartIdx","continueCallback","argsArrayLen","chunkOperations","endTime","fnId","breakIt","depObjId","objsPool","inSMaskMode","HTMLCanvasElement","hcmFilterId","savedFilter","_scaleImage","img","widthScale","heightScale","paintWidth","paintHeight","tmpCanvasId","tmpCanvas","tmpCtx","clearRect","_createMaskCanvas","isPatternFill","currentTransform","scaled","maskCanvas","mainKey","cachedImage","maskToCanvas","cord1","cord2","drawnWidth","drawnHeight","fillCanvas","fillCtx","imageSmoothingEnabled","inverse","getPattern","limit","dashArray","dashPhase","flatness","states","checkSMaskState","beginSMaskMode","endSMaskMode","cacheId","scratchCanvas","compose","dirtyBox","old","pop","ops","startX","startY","isScalingMatrix","minMaxForBezier","xw","yh","consumePath","rescaleAndStroke","needRestore","paths","pendingTextPaths","addToPath","spacing","fontRefName","fontObj","fontDirection","isType3Font","typeface","fallbackName","bold","italic","browserFontSize","rise","paintChar","patternTransform","fillStrokeMode","isAddToPathSet","strokeText","isFontSubpixelAAEnabled","glyphs","showType3Text","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","getSinglePixelWidth","isInvalidPDFjsFont","chars","glyph","unicode","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","vmetric","vx","vy","remeasure","measuredWidth","measureText","characterScaleX","isInFont","scaledAccentX","scaledAccentY","charWidth","isTextInvisible","spacingLength","charProcOperatorList","operatorListId","transformed","xWidth","yWidth","llx","lly","urx","ury","getColorN_Pattern","IR","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","_getPattern","arguments","matrix","SHADING","inv","bbox","group","currentCtx","isolated","knockout","canvasBounds","groupCtx","startTransformInverse","currentMtx","hasOwnCanvas","canvasWidth","canvasHeight","annotationCanvas","savedCtx","compiled","skewX","skewY","positions","trans","images","applyTransferMapsToCanvas","applyTransferMapsToBitmap","imgToPaint","HTMLElement","tag","visible","isVisible","isContentVisible","absDet","normX","normY","getScaleForStroking","scaledLineWidth","scaledXLineWidth","scaledYLineWidth","baseArea","saveRestore","dashes","op","applyBoundingBox","region","BaseShadingPattern","RadialAxialShadingPattern","_bbox","_colorStops","_p0","_p1","_r0","_r1","_createGradient","grad","createLinearGradient","createRadialGradient","colorStop","addColorStop","owner","ownerBBox","createPattern","domMatrix","DOMMatrix","drawTriangle","c1","c2","c3","coords","rowSize","tmp","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","MeshShadingPattern","_coords","_figures","_bounds","_background","_createMeshCanvas","combinedScale","backgroundColor","EXPECTED_SCALE","MAX_PATTERN_SIZE","BORDER_SIZE","boundsWidth","boundsHeight","paddedWidth","paddedHeight","matrixScale","temporaryPatternCanvas","DummyShadingPattern","getShadingPattern","PaintType","COLORED","UNCOLORED","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","adjustedX0","adjustedY0","adjustedX1","adjustedY1","clipBbox","realOutputSize","bboxWidth","bboxHeight","cssColor","convertToRGBA","convertBlackAndWhiteToRGBA","convertRGBToRGBA","inverseDecode","zeroMapping","oneMapping","widthInSource","widthRemainder","len32","src32","s1","s2","s3","jj","grayToRGBA","CallbackKind","UNKNOWN","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","stream","cbSourceName","cbTargetName","actionName","handler","ah","queueingStrategy","ReadableStream","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","createStreamSink","streamSink","isCancelled","lastDesiredSize","sinkCapability","processStreamMessage","streamController","deleteStreamController","allSettled","parsedData","getRaw","INTERNAL","Symbol","OptionalContentGroup","_setVisible","internal","creator","order","groups","baseState","off","getHash","array","evaluateVisibilityExpression","operator","state","expression","policy","ids","setVisibility","hasInitialVisibility","getOrder","getGroups","getGroup","pdfDataRangeTransport","_queuedChunks","_progressiveDone","_contentDispositionFilename","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","_begin","_progressiveDataLength","_loaded","_removeRangeReader","indexOf","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","_stream","_done","_filename","_requests","_headersReady","requestCapability","_end","_queuedChunk","requestsCapability","createFetchOptions","headers","abortController","method","signal","credentials","redirect","createHeaders","Headers","getArrayBuffer","isHttp","_rangeRequestReaders","PDFFetchStreamReader","PDFFetchStreamRangeReader","_reader","_withCredentials","_headersCapability","_disableRange","_rangeChunkSize","_abortController","AbortController","_headers","getResponseHeader","allowRangeRequests","suggestedLength","_readCapability","validateRangeRequestCapabilities","returnValues","contentEncoding","extractFilenameFromHeader","contentDisposition","createResponseStatusError","validateResponseStatus","getFilenameFromContentDispositionHeader","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","attributePattern","flags","textdecode","contentDispositionStr","iter","quot","part","parts","quotindex","extvalue","encodingend","langvalue","charset","hex","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","xhr","NetworkManager","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhrId","pendingRequest","setRequestHeader","expectedStatus","onError","onStateChange","onprogress","onHeadersReceived","onDone","xhrStatus","ok_response_on_range_request","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","onClosed","manager","_onHeadersReceived","_onDone","_onError","_url","_fullRequestId","_headersReceivedCapability","_cachedChunks","_storedError","fullRequestXhrId","fullRequestXhr","lengthComputable","_requestId","_close","fileUriRegex","parseUrl","sourceUrl","parsedUrl","host","isFsUrl","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_readableStream","_error","_setReadableStream","BaseRangeReader","createRequestOptions","auth","hostname","handleResponse","statusCode","_request","http","https","_httpHeaders","Range","lstat","stat","createReadStream","SVG_DEFAULTS","fontStyle","XML_NS","XLINK_NS","contentType","forceDataSchema","digits","b1","b2","b3","d1","d2","d3","d4","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","crc32","crc","writePngChunk","len","adler32","deflateSync","literals","deflateSyncUncompressed","node","from","output","maxBlockLength","deflateBlocks","idat","pi","adler","encode","isMask","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","opListToTree","opList","opTree","opListElement","fn","pf","pm","acos","clipCount","maskCount","shadingCount","SVGGraphics","svgFactory","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opTreeElement","lineMatrix","xcoords","ycoords","tspan","setAttributeNS","txtElement","txtgrp","lineWidthScale","_setStrokeAttributes","_ensureTransformGroup","addFontStyle","hasChildNodes","setStrokeAlpha","setFillAlpha","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","childNodes","shadingId","colorStops","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","stop","getAttributeNS","clipId","clipPath","clipElement","cloneNode","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","walk","shouldBuildText","child","MAX_TEXT_DIVS_TO_RENDER","DEFAULT_FONT_SIZE","DEFAULT_FONT_ASCENT","ascentCache","getCtx","getAscent","cachedAscent","metrics","ascent","fontBoundingBoxAscent","descent","fontBoundingBoxDescent","ratio","pixels","appendText","geom","textDiv","textDivProperties","hasText","hasEOL","_textDivs","_transform","atan2","fontName","fontHeight","fontAscent","_isOffscreenCanvasSupported","sin","cos","scaleFactorStr","divStyle","_container","_rootContainer","_pageWidth","_pageHeight","dir","_fontInspectorEnabled","dataset","shouldScaleText","absScaleX","absScaleY","_textDivProperties","_isReadableStream","_layoutText","layout","prevFontSize","prevFontFamily","_canceled","textDivs","textDivsLength","TextLayerRenderTask","textContentSource","textContentItemsStr","_textContentSource","_textContentItemsStr","_layoutTextParams","_processItems","styleCache","br","_render","renderTextLayer","textContentStream","scaleFactor","updateTextLayer","mustRescale","AnnotationEditorLayer","pointerup","_initialized","accessibilityManager","annotationLayer","editorTypes","FreeTextEditor","InkEditor","StampEditor","addInkEditorIfNeeded","isCommitting","pointerEvents","annotationElementIds","editables","getEditableAnnotations","editable","hide","hiddenAnnotationIds","getEditableAnnotation","show","currentActive","attach","detach","removePointerInTextLayer","moveElementInDOM","addUndoableEditor","createNewEditor","pasteEditor","annotationType","annotationEditorType","createAndAddNewEditor","innerWidth","innerHeight","editorDivBlur","editorDivFocus","editorDivInput","editorDivKeydown","_freeTextDefaultContent","_internalPadding","_defaultColor","_defaultFontSize","_translateEmpty","updateFontSize","setFontsize","editorDiv","savedFontsize","updateColor","savedColor","overlayDiv","contentEditable","removeAttribute","preventScroll","divs","savedDisplay","display","savedText","newText","trimEnd","setText","dblclick","baseX","baseY","posX","posY","replaceChildren","line","createTextNode","FreeTextAnnotationElement","defaultAppearanceData","fontColor","textPosition","padding","structTreeParentId","hasElementChanged","DEFAULT_TAB_INDEX","GetElementsByNameSet","getRectDims","AnnotationElementFactory","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","SignatureWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","linkService","downloadManager","imageResourcesPath","renderForms","enableScripting","_fieldObjects","fieldObjects","_createContainer","_createQuadrilaterals","_hasPopupData","titleObj","contentsObj","richText","hasPopupData","popupRef","noRotate","setRotation","borderStyle","borderWidth","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","borderRadius","borderBottomStyle","borderColor","elementWidth","elementHeight","_commonActions","setColor","jsName","styleName","detail","colorArray","ColorConverters","noView","noPrint","userName","title","readonly","disabled","required","_setRequired","textColor","_dispatchEventFromSandbox","actions","jsEvent","commonActions","_setDefaultPropertiesFromJS","storedData","eventProxy","quadPoints","rectBlX","rectBlY","rectTrX","rectTrY","trX","trY","blX","blY","svgBuffer","rectWidth","rectHeight","backgroundImage","_createPopup","popup","modificationDate","parentRect","elements","_getElementsByName","skipId","fields","fieldObj","exportValues","exportValue","domElement","querySelector","getElementsByName","getAttribute","maybeShow","forceHide","getElementsToTriggerPopup","addHighlightArea","triggers","_editOnDoubleClick","isTooltipOnly","link","isBound","addLinkAttributes","newWindow","_bindNamedAction","attachment","_bindAttachment","setOCGState","_bindLink","Action","_bindJSAction","resetForm","_bindResetFormAction","destination","getDestinationHash","onclick","goToDestination","getAnchorUrl","executeNamedAction","openOrDownloadData","content","bindSetOCGState","executeSetOCGState","otherClickAction","resetFormFields","refs","resetFormRefs","include","allFields","fieldIds","fieldName","field","storage","allIds","dispatchEvent","Event","alt","l10nId","l10nArgs","alternativeText","showElementAndHideCanvas","previousSibling","nodeName","_getKeyModifier","_setEventListener","elementData","baseName","eventName","valueGetter","modifier","focused","_setEventListeners","getter","Blur","Focus","_setBackgroundColor","_setTextStyle","TEXT_ALIGNMENT","computedFontSize","roundToOneDecimal","multiLine","numberOfLines","lineHeight","textAlignment","textAlign","isRequired","hasAppearance","fieldValue","setPropertyOnSiblings","keyInStorage","maxLen","charLimit","fieldFormattedValues","formattedValue","comb","userValue","lastCommittedValue","commitKey","doNotScroll","overflowY","overflowX","readOnly","maxLength","defaultFieldValue","blurListener","scrollLeft","selRange","setSelectionRange","willCommit","selStart","selectionStart","selEnd","selectionEnd","_blurListener","Keystroke","inputType","change","fieldWidth","combWidth","letterSpacing","verticalAlign","checked","checkbox","curChecked","buttonValue","radio","pdfButtonValue","linkElement","lastChild","selectElement","addAnEmptyEntry","combo","multiSelect","multiple","option","selected","optionElement","displayValue","removeEmptyEntry","noneOptionElement","isExport","selectedIndex","selectedValues","getItems","multipleSelection","index","findIndex","selectChild","before","indices","changeEx","keyDown","PopupElement","elementIds","dateObject","toLocaleDateString","toLocaleTimeString","trigger","flatMap","baseColor","outlineColor","BACKGROUND_ENLIGHT","header","localized","XfaLayer","xfaHtml","html","contents","_formatContents","useParentRect","normalizedRect","HORIZONTAL_SPACE_AFTER_ANNOTATION","popupLeft","popupTop","lines","lineSpan","lineCoordinates","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","AnnotationLayer","NullL10n","appendElement","contentElement","firstChild","annotations","popupToElements","elementParams","noHTML","isPopupAnnotation","rendered","replaceWith","makeColorComp","scaleAndClamp","CMYK_G","G_CMYK","G_RGB","G_rgb","G_HTML","G","RGB_G","RGB_rgb","RGB_HTML","T_HTML","T_rgb","CMYK_RGB","CMYK_rgb","CMYK_HTML","components","RGB_CMYK","DEFAULT_L10N_STRINGS","of_pages","page_of_pages","document_properties_kb","document_properties_mb","document_properties_date_string","document_properties_page_size_unit_inches","document_properties_page_size_unit_millimeters","document_properties_page_size_orientation_portrait","document_properties_page_size_orientation_landscape","document_properties_page_size_name_a3","document_properties_page_size_name_a4","document_properties_page_size_name_letter","document_properties_page_size_name_legal","document_properties_page_size_dimension_string","document_properties_page_size_dimension_name_string","document_properties_linearized_yes","document_properties_linearized_no","additional_layers","page_landmark","thumb_page_title","thumb_page_canvas","find_reached_top","find_reached_bottom","find_not_found","page_scale_width","page_scale_fit","page_scale_auto","page_scale_actual","page_scale_percent","loading_error","invalid_file_error","missing_file_error","unexpected_response_error","rendering_error","annotation_date_string","printing_not_supported","printing_not_ready","web_fonts_disabled","free_text2_default_content","editor_free_text2_aria_label","editor_ink2_aria_label","editor_ink_canvas_aria_label","editor_alt_text_button_label","editor_alt_text_edit_button_label","editor_alt_text_decorative_tooltip","print_progress_percent","getL10nFallback","formatL10nValue","getLanguage","getDirection","setupStorage","xfaOn","xfaOff","setAttributes","isHTMLAnchorElement","HTMLAnchorElement","dataId","rootHtml","stack","rootDiv","childHtml","xmlns","el","querySelectorAll","canvasPointermove","canvasPointerleave","canvasPointerup","canvasPointerdown","_defaultOpacity","_defaultThickness","thickness","bezierPath2D","allRawPaths","currentPath","translationX","translationY","updateThickness","savedThickness","updateOpacity","savedOpacity","disconnect","setDimensions","startDrawing","draw","lastX","lastY","path2D","lastPoint","stopDrawing","bezier","xy","lastPoints","xMin","xMax","yMin","yMax","makeBezierCurve","prevX","prevY","bezierPoints","control1","control2","ResizeObserver","contentRect","observe","roundedWidth","roundedHeight","setScaleFactor","scaleFactorW","scaleFactorH","buildPath2D","toPDFCoordinates","fromPDFCoordinates","serializePaths","p10","p11","p20","p21","p30","p31","p40","p41","firstTime","prevTranslationX","prevTranslationY","unscaledPadding","bitmapUrl","bitmapFile","supportedTypes","supportedTypesStr","getAsFile","getBitmapFetched","fromId","accept","files","click","MAX_RATIO","factor","scaleBitmap","bitmapWidth","bitmapHeight","prevWidth","prevHeight","offscreen","transferToImageBitmap","drawBitmap","toUrl","serializeBitmap","toDataURL","bitmapId","accessibilityData","stamps","area","prevData","__webpack_modules__","pdfjsVersion","pdfjsBuild"],"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/editor/editor.js","webpack://pdfjs-dist/build/pdf/src/display/editor/tools.js","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/display/base_factory.js","webpack://pdfjs-dist/build/pdf/src/shared/murmurhash3.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/shared/image_utils.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_text.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/editor/annotation_editor_layer.js","webpack://pdfjs-dist/build/pdf/src/display/editor/freetext.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/web/l10n_utils.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js","webpack://pdfjs-dist/build/pdf/src/display/editor/ink.js","webpack://pdfjs-dist/build/pdf/src/display/editor/stamp.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = root.pdfjsLib = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(globalThis, () => {\nreturn ","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\nconst MAX_IMAGE_SIZE_TO_CACHE = 10e6; // Ten megabytes.\n\n// Represent the percentage of the height of a single-line field over\n// the font size. Acrobat seems to use this value.\nconst LINE_FACTOR = 1.35;\nconst LINE_DESCENT_FACTOR = 0.35;\nconst BASELINE_FACTOR = LINE_DESCENT_FACTOR / LINE_FACTOR;\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  SAVE: 0x08,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\nconst AnnotationEditorPrefix = \"pdfjs_internal_editor_\";\n\nconst AnnotationEditorType = {\n  DISABLE: -1,\n  NONE: 0,\n  FREETEXT: 3,\n  STAMP: 13,\n  INK: 15,\n};\n\nconst AnnotationEditorParamsType = {\n  RESIZE: 1,\n  CREATE: 2,\n  FREETEXT_SIZE: 11,\n  FREETEXT_COLOR: 12,\n  FREETEXT_OPACITY: 13,\n  INK_COLOR: 21,\n  INK_THICKNESS: 22,\n  INK_OPACITY: 23,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  // PLEASE NOTE: We purposely keep any removed operators commented out, since\n  //              re-numbering the list would risk breaking third-party users.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  // beginAnnotations: 78,\n  // endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  // paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  switch (url?.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        // Avoid accidentally matching a *relative* URL pointing to a file named\n        // e.g. \"www.pdf\" or similar.\n        if (dots?.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n      // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value, nonSerializable = false) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    assert(\n      prop in obj,\n      `shadow: Property \"${prop && prop.toString()}\" not found in object.`\n    );\n  }\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: !nonSerializable,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nfunction bytesToString(bytes) {\n  if (typeof bytes !== \"object\" || bytes?.length === undefined) {\n    unreachable(\"Invalid argument for bytesToString\");\n  }\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  if (typeof str !== \"string\") {\n    unreachable(\"Invalid argument for stringToBytes\");\n  }\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\nfunction string32(value) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nclass FeatureTest {\n  static get isLittleEndian() {\n    return shadow(this, \"isLittleEndian\", isLittleEndian());\n  }\n\n  static get isEvalSupported() {\n    return shadow(this, \"isEvalSupported\", isEvalSupported());\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return shadow(\n      this,\n      \"isOffscreenCanvasSupported\",\n      typeof OffscreenCanvas !== \"undefined\"\n    );\n  }\n\n  static get platform() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      typeof navigator === \"undefined\"\n    ) {\n      return shadow(this, \"platform\", { isWin: false, isMac: false });\n    }\n    return shadow(this, \"platform\", {\n      isWin: navigator.platform.includes(\"Win\"),\n      isMac: navigator.platform.includes(\"Mac\"),\n    });\n  }\n\n  static get isCSSRoundSupported() {\n    return shadow(\n      this,\n      \"isCSSRoundSupported\",\n      globalThis.CSS?.supports?.(\"width: round(1.5px, 1px)\")\n    );\n  }\n}\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Apply a scaling matrix to some min/max values.\n  // If a scaling factor is negative then min and max must be\n  // swaped.\n  static scaleMinMax(transform, minMax) {\n    let temp;\n    if (transform[0]) {\n      if (transform[0] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n      minMax[0] *= transform[0];\n      minMax[1] *= transform[0];\n\n      if (transform[3] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[2] *= transform[3];\n      minMax[3] *= transform[3];\n    } else {\n      temp = minMax[0];\n      minMax[0] = minMax[2];\n      minMax[2] = temp;\n      temp = minMax[1];\n      minMax[1] = minMax[3];\n      minMax[3] = temp;\n\n      if (transform[1] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[2] *= transform[1];\n      minMax[3] *= transform[1];\n\n      if (transform[2] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n      minMax[0] *= transform[2];\n      minMax[1] *= transform[2];\n    }\n    minMax[0] += transform[4];\n    minMax[1] += transform[4];\n    minMax[2] += transform[5];\n    minMax[3] += transform[5];\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = this.applyTransform(r, m);\n    const p2 = this.applyTransform(r.slice(2, 4), m);\n    const p3 = this.applyTransform([r[0], r[3]], m);\n    const p4 = this.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'null'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    const xLow = Math.max(\n      Math.min(rect1[0], rect1[2]),\n      Math.min(rect2[0], rect2[2])\n    );\n    const xHigh = Math.min(\n      Math.max(rect1[0], rect1[2]),\n      Math.max(rect2[0], rect2[2])\n    );\n    if (xLow > xHigh) {\n      return null;\n    }\n    const yLow = Math.max(\n      Math.min(rect1[1], rect1[3]),\n      Math.min(rect2[1], rect2[3])\n    );\n    const yHigh = Math.min(\n      Math.max(rect1[1], rect1[3]),\n      Math.max(rect2[1], rect2[3])\n    );\n    if (yLow > yHigh) {\n      return null;\n    }\n\n    return [xLow, yLow, xHigh, yHigh];\n  }\n\n  // From https://github.com/adobe-webplatform/Snap.svg/blob/b365287722a72526000ac4bfcf0ce4cac2faa015/src/path.js#L852\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [],\n      bounds = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n    for (let i = 0; i < 2; ++i) {\n      if (i === 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n      if (b2ac < 0) {\n        continue;\n      }\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    let j = tvalues.length,\n      mt;\n    const jlen = j;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] =\n        mt * mt * mt * x0 +\n        3 * mt * mt * t * x1 +\n        3 * mt * t * t * x2 +\n        t * t * t * x3;\n      bounds[1][j] =\n        mt * mt * mt * y0 +\n        3 * mt * mt * t * y1 +\n        3 * mt * t * t * y2 +\n        t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n\n    return [\n      Math.min(...bounds[0]),\n      Math.min(...bounds[1]),\n      Math.max(...bounds[0]),\n      Math.max(...bounds[1]),\n    ];\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  if (str[0] >= \"\\xEF\") {\n    let encoding;\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      encoding = \"utf-16be\";\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      encoding = \"utf-16le\";\n    } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n      encoding = \"utf-8\";\n    }\n\n    if (encoding) {\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(str);\n        return decoder.decode(buffer);\n      } catch (ex) {\n        warn(`stringToPDFString: \"${ex}\".`);\n      }\n    }\n  }\n  // ISO Latin 1\n  const strBuf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const code = PDFStringTranslateTable[str.charCodeAt(i)];\n    strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v?.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\nclass PromiseCapability {\n  #settled = false;\n\n  constructor() {\n    /**\n     * @type {Promise<any>} The Promise object.\n     */\n    this.promise = new Promise((resolve, reject) => {\n      /**\n       * @type {function} Fulfills the Promise.\n       */\n      this.resolve = data => {\n        this.#settled = true;\n        resolve(data);\n      };\n\n      /**\n       * @type {function} Rejects the Promise.\n       */\n      this.reject = reason => {\n        if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n          assert(reason instanceof Error, 'Expected valid \"reason\" argument.');\n        }\n        this.#settled = true;\n        reject(reason);\n      };\n    });\n  }\n\n  /**\n   * @type {boolean} If the Promise has been fulfilled/rejected.\n   */\n  get settled() {\n    return this.#settled;\n  }\n}\n\nlet NormalizeRegex = null;\nlet NormalizationMap = null;\nfunction normalizeUnicode(str) {\n  if (!NormalizeRegex) {\n    // In order to generate the following regex:\n    //  - create a PDF containing all the chars in the range 0000-FFFF with\n    //    a NFKC which is different of the char.\n    //  - copy and paste all those chars and get the ones where NFKC is\n    //    required.\n    // It appears that most the chars here contain some ligatures.\n    NormalizeRegex =\n      /([\\u00a0\\u00b5\\u037e\\u0eb3\\u2000-\\u200a\\u202f\\u2126\\ufb00-\\ufb04\\ufb06\\ufb20-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufba1\\ufba4-\\ufba9\\ufbae-\\ufbb1\\ufbd3-\\ufbdc\\ufbde-\\ufbe7\\ufbea-\\ufbf8\\ufbfc-\\ufbfd\\ufc00-\\ufc5d\\ufc64-\\ufcf1\\ufcf5-\\ufd3d\\ufd88\\ufdf4\\ufdfa-\\ufdfb\\ufe71\\ufe77\\ufe79\\ufe7b\\ufe7d]+)|(\\ufb05+)/gu;\n    NormalizationMap = new Map([[\"ﬅ\", \"ſt\"]]);\n  }\n  return str.replaceAll(NormalizeRegex, (_, p1, p2) => {\n    return p1 ? p1.normalize(\"NFKC\") : NormalizationMap.get(p2);\n  });\n}\n\nfunction getUuid() {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    (typeof crypto !== \"undefined\" && typeof crypto?.randomUUID === \"function\")\n  ) {\n    return crypto.randomUUID();\n  }\n  const buf = new Uint8Array(32);\n  if (\n    typeof crypto !== \"undefined\" &&\n    typeof crypto?.getRandomValues === \"function\"\n  ) {\n    crypto.getRandomValues(buf);\n  } else {\n    for (let i = 0; i < 32; i++) {\n      buf[i] = Math.floor(Math.random() * 255);\n    }\n  }\n  return bytesToString(buf);\n}\n\nconst AnnotationPrefix = \"pdfjs_internal_id_\";\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationEditorParamsType,\n  AnnotationEditorPrefix,\n  AnnotationEditorType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMode,\n  AnnotationPrefix,\n  AnnotationReplyType,\n  AnnotationType,\n  assert,\n  BaseException,\n  BASELINE_FACTOR,\n  bytesToString,\n  CMapCompressionType,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  FeatureTest,\n  FONT_IDENTITY_MATRIX,\n  FormatError,\n  getModificationDate,\n  getUuid,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isNodeJS,\n  LINE_DESCENT_FACTOR,\n  LINE_FACTOR,\n  MAX_IMAGE_SIZE_TO_CACHE,\n  MissingPDFException,\n  normalizeUnicode,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  PromiseCapability,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  AnnotationMode,\n  assert,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isNodeJS,\n  MAX_IMAGE_SIZE_TO_CACHE,\n  MissingPDFException,\n  PasswordException,\n  PromiseCapability,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  AnnotationStorage,\n  PrintAnnotationStorage,\n  SerializableEmpty,\n} from \"./annotation_storage.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMFilterFactory,\n  DOMStandardFontDataFactory,\n  isDataScheme,\n  isValidFetchUrl,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeFilterFactory,\n  NodeStandardFontDataFactory,\n} from \"display-node_utils\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { PDFFetchStream } from \"display-fetch_stream\";\nimport { PDFNetworkStream } from \"display-network\";\nimport { PDFNodeStream } from \"display-node_stream\";\nimport { SVGGraphics } from \"display-svg\";\nimport { XfaText } from \"./xfa_text.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\nconst DELAYED_CLEANUP_TIMEOUT = 5000; // ms\n\nconst DefaultCanvasFactory =\n  typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\nconst DefaultFilterFactory =\n  typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS\n    ? NodeFilterFactory\n    : DOMFilterFactory;\nconst DefaultStandardFontDataFactory =\n  typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS\n    ? NodeStandardFontDataFactory\n    : DOMStandardFontDataFactory;\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * @typedef { TypedArray | ArrayBuffer | Array<number> | string } BinaryData\n */\n\n/**\n * @typedef {Object} RefProxy\n * @property {number} num\n * @property {number} gen\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string | URL} [url] - The URL of the PDF.\n * @property {BinaryData} [data] - Binary PDF data.\n *   Use TypedArrays (Uint8Array) to improve the memory usage. If PDF data is\n *   BASE64-encoded, use `atob()` to convert it to a binary string first.\n *\n *   NOTE: If TypedArrays are used they will generally be transferred to the\n *   worker-thread. This will help reduce main-thread memory usage, however\n *   it will take ownership of the TypedArrays.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not. The default value is `true`.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [useSystemFonts] - When `true`, fonts that aren't\n *   embedded in the PDF document will fallback to a system font.\n *   The default value is `true` in web environments and `false` in Node.js;\n *   unless `disableFontFace === true` in which case this defaults to `false`\n *   regardless of the environment (to prevent completely broken fonts).\n * @property {string} [standardFontDataUrl] - The URL where the standard font\n *   files are located. Include the trailing slash.\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\n *   when reading the standard font files. Providing a custom factory is useful\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\n * @property {boolean} [useWorkerFetch] - Enable using the Fetch API in the\n *   worker-thread when reading CMap and standard font files. When `true`,\n *   the `CMapReaderFactory` and `StandardFontDataFactory` options are ignored.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [isOffscreenCanvasSupported] - Determines if we can use\n *   `OffscreenCanvas` in the worker. Primarily used to improve performance of\n *   image conversion/rendering.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {number} [canvasMaxAreaInBytes] - The integer value is used to\n *   know when an image must be resized (uses `OffscreenCanvas` in the worker).\n *   If it's -1 then a possibly slow algorithm is used to guess the max value.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via the Font Loading API or `@font-face` rules.\n *   If disabled, fonts will be rendered using a built-in font renderer that\n *   constructs the glyphs with primitive path commands.\n *   The default value is `false` in web environments and `true` in Node.js.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object} [filterFactory] - A factory instance that will be used\n *   to create SVG filters when rendering some images on the main canvas.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string | URL | TypedArray | ArrayBuffer | DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    if (typeof src === \"string\" || src instanceof URL) {\n      src = { url: src };\n    } else if (isArrayBuffer(src)) {\n      src = { data: src };\n    }\n  }\n  if (typeof src !== \"object\") {\n    throw new Error(\"Invalid parameter in getDocument, need parameter object.\");\n  }\n  if (!src.url && !src.data && !src.range) {\n    throw new Error(\n      \"Invalid parameter object: need either .data, .range or .url\"\n    );\n  }\n  const task = new PDFDocumentLoadingTask();\n  const { docId } = task;\n\n  const url = src.url ? getUrlProp(src.url) : null;\n  const data = src.data ? getDataProp(src.data) : null;\n  const httpHeaders = src.httpHeaders || null;\n  const withCredentials = src.withCredentials === true;\n  const password = src.password ?? null;\n  const rangeTransport =\n    src.range instanceof PDFDataRangeTransport ? src.range : null;\n  const rangeChunkSize =\n    Number.isInteger(src.rangeChunkSize) && src.rangeChunkSize > 0\n      ? src.rangeChunkSize\n      : DEFAULT_RANGE_CHUNK_SIZE;\n  let worker = src.worker instanceof PDFWorker ? src.worker : null;\n  const verbosity = src.verbosity;\n  // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n  // URLs anyway. We want to avoid sending them to the worker-thread, since\n  // they contain the *entire* PDF document and can thus be arbitrarily long.\n  const docBaseUrl =\n    typeof src.docBaseUrl === \"string\" && !isDataScheme(src.docBaseUrl)\n      ? src.docBaseUrl\n      : null;\n  const cMapUrl = typeof src.cMapUrl === \"string\" ? src.cMapUrl : null;\n  const cMapPacked = src.cMapPacked !== false;\n  const CMapReaderFactory = src.CMapReaderFactory || DefaultCMapReaderFactory;\n  const standardFontDataUrl =\n    typeof src.standardFontDataUrl === \"string\"\n      ? src.standardFontDataUrl\n      : null;\n  const StandardFontDataFactory =\n    src.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  const ignoreErrors = src.stopAtErrors !== true;\n  const maxImageSize =\n    Number.isInteger(src.maxImageSize) && src.maxImageSize > -1\n      ? src.maxImageSize\n      : -1;\n  const isEvalSupported = src.isEvalSupported !== false;\n  const isOffscreenCanvasSupported =\n    typeof src.isOffscreenCanvasSupported === \"boolean\"\n      ? src.isOffscreenCanvasSupported\n      : !isNodeJS;\n  const canvasMaxAreaInBytes = Number.isInteger(src.canvasMaxAreaInBytes)\n    ? src.canvasMaxAreaInBytes\n    : -1;\n  const disableFontFace =\n    typeof src.disableFontFace === \"boolean\" ? src.disableFontFace : isNodeJS;\n  const fontExtraProperties = src.fontExtraProperties === true;\n  const enableXfa = src.enableXfa === true;\n  const ownerDocument = src.ownerDocument || globalThis.document;\n  const disableRange = src.disableRange === true;\n  const disableStream = src.disableStream === true;\n  const disableAutoFetch = src.disableAutoFetch === true;\n  const pdfBug = src.pdfBug === true;\n\n  // Parameters whose default values depend on other parameters.\n  const length = rangeTransport ? rangeTransport.length : src.length ?? NaN;\n  const useSystemFonts =\n    typeof src.useSystemFonts === \"boolean\"\n      ? src.useSystemFonts\n      : !isNodeJS && !disableFontFace;\n  const useWorkerFetch =\n    typeof src.useWorkerFetch === \"boolean\"\n      ? src.useWorkerFetch\n      : (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n        (CMapReaderFactory === DOMCMapReaderFactory &&\n          StandardFontDataFactory === DOMStandardFontDataFactory &&\n          cMapUrl &&\n          standardFontDataUrl &&\n          isValidFetchUrl(cMapUrl, document.baseURI) &&\n          isValidFetchUrl(standardFontDataUrl, document.baseURI));\n  const canvasFactory =\n    src.canvasFactory || new DefaultCanvasFactory({ ownerDocument });\n  const filterFactory =\n    src.filterFactory || new DefaultFilterFactory({ docId, ownerDocument });\n\n  // Parameters only intended for development/testing purposes.\n  const styleElement =\n    typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")\n      ? src.styleElement\n      : null;\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(verbosity);\n\n  // Ensure that the various factories can be initialized, when necessary,\n  // since the user may provide *custom* ones.\n  const transportFactory = {\n    canvasFactory,\n    filterFactory,\n  };\n  if (!useWorkerFetch) {\n    transportFactory.cMapReaderFactory = new CMapReaderFactory({\n      baseUrl: cMapUrl,\n      isCompressed: cMapPacked,\n    });\n    transportFactory.standardFontDataFactory = new StandardFontDataFactory({\n      baseUrl: standardFontDataUrl,\n    });\n  }\n\n  if (!worker) {\n    const workerParams = {\n      verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n\n  const fetchDocParams = {\n    docId,\n    apiVersion:\n      typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n        ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n        : null,\n    data,\n    password,\n    disableAutoFetch,\n    rangeChunkSize,\n    length,\n    docBaseUrl,\n    enableXfa,\n    evaluatorOptions: {\n      maxImageSize,\n      disableFontFace,\n      ignoreErrors,\n      isEvalSupported,\n      isOffscreenCanvasSupported,\n      canvasMaxAreaInBytes,\n      fontExtraProperties,\n      useSystemFonts,\n      cMapUrl: useWorkerFetch ? cMapUrl : null,\n      standardFontDataUrl: useWorkerFetch ? standardFontDataUrl : null,\n    },\n  };\n  const transportParams = {\n    ignoreErrors,\n    isEvalSupported,\n    disableFontFace,\n    fontExtraProperties,\n    enableXfa,\n    ownerDocument,\n    disableAutoFetch,\n    pdfBug,\n    styleElement,\n  };\n\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(worker, fetchDocParams);\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length,\n              initialData: rangeTransport.initialData,\n              progressiveDone: rangeTransport.progressiveDone,\n              contentDispositionFilename:\n                rangeTransport.contentDispositionFilename,\n              disableRange,\n              disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!data) {\n          if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n            throw new Error(\"Not implemented: createPDFNetworkStream\");\n          }\n          const createPDFNetworkStream = params => {\n            if (\n              typeof PDFJSDev !== \"undefined\" &&\n              PDFJSDev.test(\"GENERIC\") &&\n              isNodeJS\n            ) {\n              return new PDFNodeStream(params);\n            }\n            return isValidFetchUrl(params.url)\n              ? new PDFFetchStream(params)\n              : new PDFNetworkStream(params);\n          };\n\n          networkStream = createPDFNetworkStream({\n            url,\n            length,\n            httpHeaders,\n            withCredentials,\n            rangeChunkSize,\n            disableRange,\n            disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            transportParams,\n            transportFactory\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @returns {Promise<string>} A promise that is resolved when the worker ID of\n *   the `MessageHandler` is known.\n * @private\n */\nasync function _fetchDocument(worker, source) {\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  const workerId = await worker.messageHandler.sendWithPromise(\n    \"GetDocRequest\",\n    source,\n    source.data ? [source.data.buffer] : null\n  );\n\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  return workerId;\n}\n\nfunction getUrlProp(val) {\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n    return null; // The 'url' is unused with `PDFDataRangeTransport`.\n  }\n  if (val instanceof URL) {\n    return val.href;\n  }\n  try {\n    // The full path is required in the 'url' field.\n    return new URL(val, window.location).href;\n  } catch {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"GENERIC\") &&\n      isNodeJS &&\n      typeof val === \"string\"\n    ) {\n      return val; // Use the url as-is in Node.js environments.\n    }\n  }\n  throw new Error(\n    \"Invalid PDF url data: \" +\n      \"either string or URL-object is expected in the url property.\"\n  );\n}\n\nfunction getDataProp(val) {\n  // Converting string or array-like data to Uint8Array.\n  if (\n    typeof PDFJSDev !== \"undefined\" &&\n    PDFJSDev.test(\"GENERIC\") &&\n    isNodeJS &&\n    typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n    val instanceof Buffer // eslint-disable-line no-undef\n  ) {\n    throw new Error(\n      \"Please provide binary data as `Uint8Array`, rather than `Buffer`.\"\n    );\n  }\n  if (val instanceof Uint8Array && val.byteLength === val.buffer.byteLength) {\n    // Use the data as-is when it's already a Uint8Array that completely\n    // \"utilizes\" its underlying ArrayBuffer, to prevent any possible\n    // issues when transferring it to the worker-thread.\n    return val;\n  }\n  if (typeof val === \"string\") {\n    return stringToBytes(val);\n  }\n  if ((typeof val === \"object\" && !isNaN(val?.length)) || isArrayBuffer(val)) {\n    return new Uint8Array(val);\n  }\n  throw new Error(\n    \"Invalid PDF binary data: either TypedArray, \" +\n      \"string, or array-like object is expected in the data property.\"\n  );\n}\n\n/**\n * @typedef {Object} OnProgressParameters\n * @property {number} loaded - Currently loaded number of bytes.\n * @property {number} total - Total number of bytes in the PDF file.\n */\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n */\nclass PDFDocumentLoadingTask {\n  static #docId = 0;\n\n  constructor() {\n    this._capability = new PromiseCapability();\n    this._transport = null;\n    this._worker = null;\n\n    /**\n     * Unique identifier for the document loading task.\n     * @type {string}\n     */\n    this.docId = `d${PDFDocumentLoadingTask.#docId++}`;\n\n    /**\n     * Whether the loading task is destroyed or not.\n     * @type {boolean}\n     */\n    this.destroyed = false;\n\n    /**\n     * Callback to request a password if a wrong or no password was provided.\n     * The callback receives two parameters: a function that should be called\n     * with the new password, and a reason (see {@link PasswordResponses}).\n     * @type {function}\n     */\n    this.onPassword = null;\n\n    /**\n     * Callback to be able to monitor the loading progress of the PDF file\n     * (necessary to implement e.g. a loading bar).\n     * The callback receives an {@link OnProgressParameters} argument.\n     * @type {function}\n     */\n    this.onProgress = null;\n  }\n\n  /**\n   * Promise for document loading task completion.\n   * @type {Promise<PDFDocumentProxy>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Abort all network requests and destroy the worker.\n   * @returns {Promise<void>} A promise that is resolved when destruction is\n   *   completed.\n   */\n  async destroy() {\n    this.destroyed = true;\n    try {\n      if (this._worker?.port) {\n        this._worker._pendingDestroy = true;\n      }\n      await this._transport?.destroy();\n    } catch (ex) {\n      if (this._worker?.port) {\n        delete this._worker._pendingDestroy;\n      }\n      throw ex;\n    }\n\n    this._transport = null;\n    if (this._worker) {\n      this._worker.destroy();\n      this._worker = null;\n    }\n  }\n}\n\n/**\n * Abstract class to support range requests file loading.\n *\n * NOTE: The TypedArrays passed to the constructor and relevant methods below\n * will generally be transferred to the worker-thread. This will help reduce\n * main-thread memory usage, however it will take ownership of the TypedArrays.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array|null} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = new PromiseCapability();\n  }\n\n  /**\n   * @param {function} listener\n   */\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  /**\n   * @param {function} listener\n   */\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  /**\n   * @param {function} listener\n   */\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  /**\n   * @param {function} listener\n   */\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  /**\n   * @param {number} begin\n   * @param {Uint8Array|null} chunk\n   */\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  /**\n   * @param {number} loaded\n   * @param {number|undefined} total\n   */\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  /**\n   * @param {Uint8Array|null} chunk\n   */\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  /**\n   * @param {number} begin\n   * @param {number} end\n   */\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      Object.defineProperty(this, \"getJavaScript\", {\n        value: () => {\n          deprecated(\n            \"`PDFDocumentProxy.getJavaScript`, \" +\n              \"please use `PDFDocumentProxy.getJSActions` instead.\"\n          );\n          return this.getJSActions().then(js => {\n            if (!js) {\n              return js;\n            }\n            const jsArr = [];\n            for (const name in js) {\n              jsArr.push(...js[name]);\n            }\n            return jsArr;\n          });\n        },\n      });\n    }\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      // For testing purposes.\n      Object.defineProperty(this, \"getXFADatasets\", {\n        value: () => {\n          return this._transport.getXFADatasets();\n        },\n      });\n      Object.defineProperty(this, \"getXRefPrevValue\", {\n        value: () => {\n          return this._transport.getXRefPrevValue();\n        },\n      });\n      Object.defineProperty(this, \"getAnnotArray\", {\n        value: pageIndex => {\n          return this._transport.getAnnotArray(pageIndex);\n        },\n      });\n    }\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {Object} The filter factory instance.\n   */\n  get filterFactory() {\n    return this._transport.filterFactory;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {Array<string, string|null>} A (not guaranteed to be) unique ID to\n   *   identify the PDF document.\n   *   NOTE: The first element will always be defined for all PDF documents,\n   *   whereas the second element is only defined for *modified* PDF documents.\n   */\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return shadow(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n  }\n\n  /**\n   * NOTE: This is (mostly) intended to support printing of XFA forms.\n   *\n   * @type {Object | null} An object representing a HTML tree structure\n   *   to render the XFA, or `null` when no XFA form exists.\n   */\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree.\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the raw data of the PDF document.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are needed in the viewer.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<Object>> | null>} A promise that is\n   *   resolved with an {Object} containing /AcroForm field data for the JS\n   *   sandbox, or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n * @property {boolean} [disableNormalization] - When true the text is *not*\n *   normalized in the worker-thread. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\n *   line-break.\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} [intent] - Determines the annotations that are fetched,\n *   can be 'display' (viewable annotations), 'print' (printable annotations),\n *   or 'any' (all annotations). The default value is 'display'.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {CanvasRenderingContext2D} canvasContext - A 2D context of a DOM\n *   Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are rendered\n *   onto the canvas, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {CanvasGradient | CanvasPattern | string} [background] - Background\n *   to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n *\n *   NOTE: This option may be partially, or completely, ignored when the\n *   `pageColors`-option is used.\n * @property {Object} [pageColors] - Overwrites background and foreground colors\n *   with user defined ones in order to improve readability in high contrast\n *   mode.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap] - Map some\n *   annotation ids with canvases used to render them.\n * @property {PrintAnnotationStorage} [printAnnotationStorage]\n */\n\n/**\n * Page getOperatorList parameters.\n *\n * @typedef {Object} GetOperatorListParameters\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are included\n *   in the operatorList, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {PrintAnnotationStorage} [printAnnotationStorage]\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  #delayedCleanupTimeout = null;\n\n  #pendingCleanup = false;\n\n  constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    /** @type {PDFObjects} */\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this._maybeCleanupAfterRender = false;\n    this._intentStates = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {RefProxy | null} The reference that points to this page.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = \"display\" } = {}) {\n    const intentArgs = this._transport.getRenderingIntent(intent);\n\n    return this._transport.getAnnotations(\n      this._pageIndex,\n      intentArgs.renderingIntent\n    );\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return this._transport.getPageJSActions(this._pageIndex);\n  }\n\n  /**\n   * @type {Object} The filter factory instance.\n   */\n  get filterFactory() {\n    return this._transport.filterFactory;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return shadow(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params - Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    transform = null,\n    background = null,\n    optionalContentConfigPromise = null,\n    annotationCanvasMap = null,\n    pageColors = null,\n    printAnnotationStorage = null,\n  }) {\n    this._stats?.time(\"Overall\");\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      printAnnotationStorage\n    );\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render...\n    this.#pendingCleanup = false;\n    // ... and ensure that a delayed cleanup is always aborted.\n    this.#abortDelayedCleanup();\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const intentPrint = !!(\n      intentArgs.renderingIntent & RenderingIntentFlag.PRINT\n    );\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = new PromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n        separateAnnots: null,\n      };\n\n      this._stats?.time(\"Page Request\");\n      this._pumpOperatorList(intentArgs);\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup immediately once rendering has finished.\n      if (this._maybeCleanupAfterRender || intentPrint) {\n        this.#pendingCleanup = true;\n      }\n      this.#tryCleanup(/* delayed = */ !intentPrint);\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error),\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n\n      this._stats?.timeEnd(\"Rendering\");\n      this._stats?.timeEnd(\"Overall\");\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      annotationCanvasMap,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: this._transport.canvasFactory,\n      filterFactory: this._transport.filterFactory,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n      pageColors,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.destroyed) {\n          complete();\n          return;\n        }\n        this._stats?.time(\"Rendering\");\n\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @param {GetOperatorListParameters} params - Page getOperatorList\n   *   parameters.\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents the page's operator list.\n   */\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    printAnnotationStorage = null,\n  } = {}) {\n    if (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"GENERIC\")) {\n      throw new Error(\"Not implemented: getOperatorList\");\n    }\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      printAnnotationStorage,\n      /* isOpList = */ true\n    );\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = new PromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n        separateAnnots: null,\n      };\n\n      this._stats?.time(\"Page Request\");\n      this._pumpOperatorList(intentArgs);\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * NOTE: All occurrences of whitespace will be replaced by\n   * standard spaces (0x20).\n   *\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    includeMarkedContent = false,\n    disableNormalization = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        includeMarkedContent: includeMarkedContent === true,\n        disableNormalization: disableNormalization === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * NOTE: All occurrences of whitespace will be replaced by\n   * standard spaces (0x20).\n   *\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      // TODO: We need to revisit this once the XFA foreground patch lands and\n      // only do this for non-foreground XFA.\n      return this.getXfa().then(xfa => {\n        return XfaText.textContent(xfa);\n      });\n    }\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return this._transport.getStructTree(this._pageIndex);\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n\n    const waitOn = [];\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intentState.opListReadCapability) {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this.#pendingCleanup = false;\n    this.#abortDelayedCleanup();\n\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.#pendingCleanup = true;\n    const success = this.#tryCleanup(/* delayed = */ false);\n\n    if (resetStats && success) {\n      this._stats &&= new StatTimer();\n    }\n    return success;\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @param {boolean} [delayed] - Delay the cleanup, to e.g. improve zooming\n   *   performance in documents with large images.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  #tryCleanup(delayed = false) {\n    this.#abortDelayedCleanup();\n\n    if (!this.#pendingCleanup || this.destroyed) {\n      return false;\n    }\n    if (delayed) {\n      this.#delayedCleanupTimeout = setTimeout(() => {\n        this.#delayedCleanupTimeout = null;\n        this.#tryCleanup(/* delayed = */ false);\n      }, DELAYED_CLEANUP_TIMEOUT);\n\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n    this._intentStates.clear();\n    this.objs.clear();\n    this.#pendingCleanup = false;\n    return true;\n  }\n\n  #abortDelayedCleanup() {\n    if (this.#delayedCleanupTimeout) {\n      clearTimeout(this.#delayedCleanupTimeout);\n      this.#delayedCleanupTimeout = null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    this._stats?.timeEnd(\"Page Request\");\n\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    intentState.displayReadyCapability?.resolve(transparency);\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n    intentState.operatorList.separateAnnots = operatorListChunk.separateAnnots;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this.#tryCleanup(/* delayed = */ true);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList({\n    renderingIntent,\n    cacheKey,\n    annotationStorageSerializable,\n  }) {\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      assert(\n        Number.isInteger(renderingIntent) && renderingIntent > 0,\n        '_pumpOperatorList: Expected valid \"renderingIntent\" argument.'\n      );\n    }\n    const { map, transfers } = annotationStorageSerializable;\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      {\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        cacheKey,\n        annotationStorage: map,\n      },\n      transfers\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(cacheKey);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this.#tryCleanup(/* delayed = */ true);\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      assert(\n        reason instanceof Error,\n        '_abortOperatorList: Expected valid \"reason\" argument.'\n      );\n    }\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        let delay = RENDERING_CANCELLED_TIMEOUT;\n        if (reason.extraDelay > 0 && reason.extraDelay < /* ms = */ 1000) {\n          // Above, we prevent the total delay from becoming arbitrarily large.\n          delay += reason.extraDelay;\n        }\n\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          intentState.streamReaderCancelTimeout = null;\n          this._abortOperatorList({ intentState, reason, force: true });\n        }, delay);\n        return;\n      }\n    }\n    intentState.streamReader\n      .cancel(new AbortException(reason.message))\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {StatTimer | null} Returns page stats, if enabled; returns `null`\n   *   otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  #listeners = new Set();\n\n  #deferred = Promise.resolve();\n\n  postMessage(obj, transfer) {\n    const event = {\n      data: structuredClone(\n        obj,\n        (typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"SKIP_BABEL || TESTING\")) &&\n          transfer\n          ? { transfer }\n          : null\n      ),\n    };\n\n    this.#deferred.then(() => {\n      for (const listener of this.#listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this.#listeners.add(listener);\n  }\n\n  removeEventListener(name, listener) {\n    this.#listeners.delete(listener);\n  }\n\n  terminate() {\n    this.#listeners.clear();\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Worker} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level;\n *   the constants from {@link VerbosityLevel} should be used.\n */\n\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0,\n};\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // eslint-disable-next-line no-undef\n  if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n    // Workers aren't supported in Node.js, force-disabling them there.\n    PDFWorkerUtil.isWorkerDisabled = true;\n\n    PDFWorkerUtil.fallbackWorkerSrc = PDFJSDev.test(\"LIB\")\n      ? \"../pdf.worker.js\"\n      : \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(\n        /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n        \".worker$1$2\"\n      );\n    }\n  }\n\n  // Check if URLs have the same origin. For non-HTTP based URLs, returns false.\n  PDFWorkerUtil.isSameOrigin = function (baseUrl, otherUrl) {\n    let base;\n    try {\n      base = new URL(baseUrl);\n      if (!base.origin || base.origin === \"null\") {\n        return false; // non-HTTP url\n      }\n    } catch {\n      return false;\n    }\n\n    const other = new URL(otherUrl, base);\n    return base.origin === other.origin;\n  };\n\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\n\n/**\n * PDF.js web worker abstraction that controls the instantiation of PDF\n * documents. Message handlers are used to pass information from the main\n * thread to the worker thread and vice versa. If the creation of a web\n * worker is not possible, a \"fake\" worker will be used instead.\n *\n * @param {PDFWorkerParameters} params - The worker initialization parameters.\n */\nclass PDFWorker {\n  static #workerPorts;\n\n  constructor({\n    name = null,\n    port = null,\n    verbosity = getVerbosityLevel(),\n  } = {}) {\n    this.name = name;\n    this.destroyed = false;\n    this.verbosity = verbosity;\n\n    this._readyCapability = new PromiseCapability();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n\n    if (\n      (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) &&\n      port\n    ) {\n      if (PDFWorker.#workerPorts?.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port.\");\n      }\n      (PDFWorker.#workerPorts ||= new WeakMap()).set(port, this);\n      this._initializeFromPort(port);\n      return;\n    }\n    this._initialize();\n  }\n\n  /**\n   * Promise for worker initialization completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._readyCapability.promise;\n  }\n\n  /**\n   * The current `workerPort`, when it exists.\n   * @type {Worker}\n   */\n  get port() {\n    return this._port;\n  }\n\n  /**\n   * The current MessageHandler-instance.\n   * @type {MessageHandler}\n   */\n  get messageHandler() {\n    return this._messageHandler;\n  }\n\n  _initializeFromPort(port) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: _initializeFromPort\");\n    }\n    this._port = port;\n    this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n    this._messageHandler.on(\"ready\", function () {\n      // Ignoring \"ready\" event -- MessageHandler should already be initialized\n      // and ready to accept messages.\n    });\n    this._readyCapability.resolve();\n    // Send global setting, e.g. verbosity level.\n    this._messageHandler.send(\"configure\", {\n      verbosity: this.verbosity,\n    });\n  }\n\n  _initialize() {\n    // If worker support isn't disabled explicit and the browser has worker\n    // support, create a new web worker and test if it/the browser fulfills\n    // all requirements to run parts of pdf.js in a web worker.\n    // Right now, the requirement is, that an Uint8Array is still an\n    // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n    if (\n      !PDFWorkerUtil.isWorkerDisabled &&\n      !PDFWorker._mainThreadWorkerMessageHandler\n    ) {\n      let { workerSrc } = PDFWorker;\n\n      try {\n        // Wraps workerSrc path into blob URL, if the former does not belong\n        // to the same origin.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          !PDFWorkerUtil.isSameOrigin(window.location.href, workerSrc)\n        ) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(\n            new URL(workerSrc, window.location).href\n          );\n        }\n\n        const worker =\n          typeof PDFJSDev === \"undefined\" &&\n          !workerSrc.endsWith(\"/build/pdf.worker.js\")\n            ? new Worker(workerSrc, { type: \"module\" })\n            : new Worker(workerSrc);\n        const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            // Fall back to fake worker if the termination is caused by an\n            // error (e.g. NetworkError / SecurityError).\n            this._setupFakeWorker();\n          }\n        };\n\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            // Worker failed to initialize due to an error. Clean up and fall\n            // back to the fake worker.\n            terminateEarly();\n          }\n        };\n        worker.addEventListener(\"error\", onWorkerError);\n\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          if (data) {\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n\n            this._readyCapability.resolve();\n            // Send global setting, e.g. verbosity level.\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity,\n            });\n          } else {\n            this._setupFakeWorker();\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          try {\n            sendTest();\n          } catch {\n            // We need fallback to a faked worker.\n            this._setupFakeWorker();\n          }\n        });\n\n        const sendTest = () => {\n          const testObj = new Uint8Array();\n          // Ensure that we can use `postMessage` transfers.\n          messageHandler.send(\"test\", testObj, [testObj.buffer]);\n        };\n\n        // It might take time for the worker to initialize. We will try to send\n        // the \"test\" message immediately, and once the \"ready\" message arrives.\n        // The worker shall process only the first received \"test\" message.\n        sendTest();\n        return;\n      } catch {\n        info(\"The worker has been disabled.\");\n      }\n    }\n    // Either workers are disabled, not supported or have thrown an exception.\n    // Thus, we fallback to a faked worker.\n    this._setupFakeWorker();\n  }\n\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      warn(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n\n    PDFWorker._setupFakeWorkerGlobal\n      .then(WorkerMessageHandler => {\n        if (this.destroyed) {\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          return;\n        }\n        const port = new LoopbackPort();\n        this._port = port;\n\n        // All fake workers use the same port, making id unique.\n        const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n\n        // If the main thread is our worker, setup the handling for the\n        // messages -- the main thread sends to it self.\n        const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n        WorkerMessageHandler.setup(workerHandler, port);\n\n        const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n        this._messageHandler = messageHandler;\n        this._readyCapability.resolve();\n        // Send global setting, e.g. verbosity level.\n        messageHandler.send(\"configure\", {\n          verbosity: this.verbosity,\n        });\n      })\n      .catch(reason => {\n        this._readyCapability.reject(\n          new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n        );\n      });\n  }\n\n  /**\n   * Destroys the worker instance.\n   */\n  destroy() {\n    this.destroyed = true;\n    if (this._webWorker) {\n      // We need to terminate only web worker created resource.\n      this._webWorker.terminate();\n      this._webWorker = null;\n    }\n    PDFWorker.#workerPorts?.delete(this._port);\n    this._port = null;\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n      this._messageHandler = null;\n    }\n  }\n\n  /**\n   * @param {PDFWorkerParameters} params - The worker initialization parameters.\n   */\n  static fromPort(params) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: fromPort\");\n    }\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n    const cachedPort = this.#workerPorts?.get(params.port);\n    if (cachedPort) {\n      if (cachedPort._pendingDestroy) {\n        throw new Error(\n          \"PDFWorker.fromPort - the worker is being destroyed.\\n\" +\n            \"Please remember to await `PDFDocumentLoadingTask.destroy()`-calls.\"\n        );\n      }\n      return cachedPort;\n    }\n    return new PDFWorker(params);\n  }\n\n  /**\n   * The current `workerSrc`, when it exists.\n   * @type {string}\n   */\n  static get workerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      PDFWorkerUtil.fallbackWorkerSrc !== null\n    ) {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch {\n      return null;\n    }\n  }\n\n  // Loads worker code into the main-thread.\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\") {\n        const worker = await import(\"pdfjs/pdf.worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    return shadow(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  #methodPromises = new Map();\n\n  #pageCache = new Map();\n\n  #pagePromises = new Map();\n\n  #passwordCapability = null;\n\n  constructor(messageHandler, loadingTask, networkStream, params, factory) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement,\n    });\n    this._params = params;\n\n    this.canvasFactory = factory.canvasFactory;\n    this.filterFactory = factory.filterFactory;\n    this.cMapReaderFactory = factory.cMapReaderFactory;\n    this.standardFontDataFactory = factory.standardFontDataFactory;\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n    this.downloadInfoCapability = new PromiseCapability();\n\n    this.setupMessageHandler();\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      // For testing purposes.\n      Object.defineProperty(this, \"getXFADatasets\", {\n        value: () => {\n          return this.messageHandler.sendWithPromise(\"GetXFADatasets\", null);\n        },\n      });\n      Object.defineProperty(this, \"getXRefPrevValue\", {\n        value: () => {\n          return this.messageHandler.sendWithPromise(\"GetXRefPrevValue\", null);\n        },\n      });\n      Object.defineProperty(this, \"getAnnotArray\", {\n        value: pageIndex => {\n          return this.messageHandler.sendWithPromise(\"GetAnnotArray\", {\n            pageIndex,\n          });\n        },\n      });\n    }\n  }\n\n  #cacheSimpleMethod(name, data = null) {\n    const cachedPromise = this.#methodPromises.get(name);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler.sendWithPromise(name, data);\n\n    this.#methodPromises.set(name, promise);\n    return promise;\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  getRenderingIntent(\n    intent,\n    annotationMode = AnnotationMode.ENABLE,\n    printAnnotationStorage = null,\n    isOpList = false\n  ) {\n    let renderingIntent = RenderingIntentFlag.DISPLAY; // Default value.\n    let annotationStorageSerializable = SerializableEmpty;\n\n    switch (intent) {\n      case \"any\":\n        renderingIntent = RenderingIntentFlag.ANY;\n        break;\n      case \"display\":\n        break;\n      case \"print\":\n        renderingIntent = RenderingIntentFlag.PRINT;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n\n    switch (annotationMode) {\n      case AnnotationMode.DISABLE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n      case AnnotationMode.ENABLE:\n        break;\n      case AnnotationMode.ENABLE_FORMS:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n      case AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_STORAGE;\n\n        const annotationStorage =\n          renderingIntent & RenderingIntentFlag.PRINT &&\n          printAnnotationStorage instanceof PrintAnnotationStorage\n            ? printAnnotationStorage\n            : this.annotationStorage;\n\n        annotationStorageSerializable = annotationStorage.serializable;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n\n    if (isOpList) {\n      renderingIntent += RenderingIntentFlag.OPLIST;\n    }\n\n    return {\n      renderingIntent,\n      cacheKey: `${renderingIntent}_${annotationStorageSerializable.hash}`,\n      annotationStorageSerializable,\n    };\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = new PromiseCapability();\n\n    this.#passwordCapability?.reject(\n      new Error(\"Worker was destroyed during onPassword callback\")\n    );\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.#pageCache.values()) {\n      waitOn.push(page._destroy());\n    }\n    this.#pageCache.clear();\n    this.#pagePromises.clear();\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this.#methodPromises.clear();\n      this.filterFactory.destroy();\n\n      this._networkStream?.cancelAllRequests(\n        new AbortException(\"Worker was terminated.\")\n      );\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              value instanceof ArrayBuffer,\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = new PromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress) {\n            loadingTask.onProgress?.(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            loadingTask.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.total,\n            });\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              value instanceof ArrayBuffer,\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n        default:\n          unreachable(\"DocException - expected a valid Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this.#passwordCapability = new PromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          if (password instanceof Error) {\n            this.#passwordCapability.reject(password);\n          } else {\n            this.#passwordCapability.resolve({ password });\n          }\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this.#passwordCapability.reject(ex);\n        }\n      } else {\n        this.#passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this.#passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      loadingTask.onProgress?.({\n        loaded: data.length,\n        total: data.length,\n      });\n\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.#pageCache.get(data.pageIndex);\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n\n    messageHandler.on(\"commonobj\", ([id, type, exportedData]) => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          const inspectFont =\n            params.pdfBug && globalThis.FontInspector?.enabled\n              ? (font, url) => globalThis.FontInspector.fontAdded(font, url)\n              : null;\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            inspectFont,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n        case \"Pattern\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", ([id, pageIndex, type, imageData]) => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return;\n      }\n\n      const pageProxy = this.#pageCache.get(pageIndex);\n      if (pageProxy.objs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          if (imageData) {\n            let length;\n            if (imageData.bitmap) {\n              const { width, height } = imageData;\n              length = width * height * 4;\n            } else {\n              length = imageData.data?.length || 0;\n            }\n\n            if (length > MAX_IMAGE_SIZE_TO_CACHE) {\n              pageProxy._maybeCleanupAfterRender = true;\n            }\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n      loadingTask.onProgress?.({\n        loaded: data.loaded,\n        total: data.total,\n      });\n    });\n\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.cMapReaderFactory) {\n        return Promise.reject(\n          new Error(\n            \"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.cMapReaderFactory.fetch(data);\n    });\n\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.standardFontDataFactory) {\n        return Promise.reject(\n          new Error(\n            \"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.standardFontDataFactory.fetch(data);\n    });\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  saveDocument() {\n    if (this.annotationStorage.size <= 0) {\n      warn(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    const { map, transfers } = this.annotationStorage.serializable;\n\n    return this.messageHandler\n      .sendWithPromise(\n        \"SaveDocument\",\n        {\n          isPureXfa: !!this._htmlForXfa,\n          numPages: this._numPages,\n          annotationStorage: map,\n          filename: this._fullReader?.filename ?? null,\n        },\n        transfers\n      )\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request.\"));\n    }\n\n    const pageIndex = pageNumber - 1,\n      cachedPromise = this.#pagePromises.get(pageIndex);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.pdfBug\n        );\n        this.#pageCache.set(pageIndex, page);\n        return page;\n      });\n    this.#pagePromises.set(pageIndex, promise);\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    if (\n      typeof ref !== \"object\" ||\n      ref === null ||\n      !Number.isInteger(ref.num) ||\n      ref.num < 0 ||\n      !Number.isInteger(ref.gen) ||\n      ref.gen < 0\n    ) {\n      return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      num: ref.num,\n      gen: ref.gen,\n    });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  getFieldObjects() {\n    return this.#cacheSimpleMethod(\"GetFieldObjects\");\n  }\n\n  hasJSActions() {\n    return this.#cacheSimpleMethod(\"HasJSActions\");\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getDocJSActions() {\n    return this.#cacheSimpleMethod(\"GetDocJSActions\");\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    const name = \"GetMetadata\",\n      cachedPromise = this.#methodPromises.get(name);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(name, null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      });\n    this.#methodPromises.set(name, promise);\n    return promise;\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    for (const page of this.#pageCache.values()) {\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(\n          `startCleanup: Page ${page.pageNumber} is currently rendering.`\n        );\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this.#methodPromises.clear();\n    this.filterFactory.destroy(/* keepHCM = */ true);\n  }\n\n  get loadingParams() {\n    const { disableAutoFetch, enableXfa } = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch,\n      enableXfa,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n */\nclass PDFObjects {\n  #objs = Object.create(null);\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   *\n   * @param {string} objId\n   * @returns {Object}\n   */\n  #ensureObj(objId) {\n    return (this.#objs[objId] ||= {\n      capability: new PromiseCapability(),\n      data: null,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   *\n   * @param {string} objId\n   * @param {function} [callback]\n   * @returns {any}\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      const obj = this.#ensureObj(objId);\n      obj.capability.promise.then(() => callback(obj.data));\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this.#objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj?.capability.settled) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  /**\n   * @param {string} objId\n   * @returns {boolean}\n   */\n  has(objId) {\n    const obj = this.#objs[objId];\n    return obj?.capability.settled || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   *\n   * @param {string} objId\n   * @param {any} [data]\n   */\n  resolve(objId, data = null) {\n    const obj = this.#ensureObj(objId);\n    obj.data = data;\n    obj.capability.resolve();\n  }\n\n  clear() {\n    for (const objId in this.#objs) {\n      const { data } = this.#objs[objId];\n      data?.bitmap?.close(); // Release any `ImageBitmap` data.\n    }\n    this.#objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  #internalRenderTask = null;\n\n  constructor(internalRenderTask) {\n    this.#internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this.#internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   *\n   * @param {number} [extraDelay]\n   */\n  cancel(extraDelay = 0) {\n    this.#internalRenderTask.cancel(/* error = */ null, extraDelay);\n  }\n\n  /**\n   * Whether form fields are rendered separately from the main operatorList.\n   * @type {boolean}\n   */\n  get separateAnnots() {\n    const { separateAnnots } = this.#internalRenderTask.operatorList;\n    if (!separateAnnots) {\n      return false;\n    }\n    const { annotationCanvasMap } = this.#internalRenderTask;\n    return (\n      separateAnnots.form ||\n      (separateAnnots.canvas && annotationCanvasMap?.size > 0)\n    );\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass InternalRenderTask {\n  static #canvasInUse = new WeakSet();\n\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    annotationCanvasMap,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    filterFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n    pageColors = null,\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this.filterFactory = filterFactory;\n    this._pdfBug = pdfBug;\n    this.pageColors = pageColors;\n\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame =\n      useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = new PromiseCapability();\n    this.task = new RenderTask(this);\n    // caching this-bound methods\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n\n  get completed() {\n    return this.capability.promise.catch(function () {\n      // Ignoring errors, since we only want to know when rendering is\n      // no longer pending.\n    });\n  }\n\n  initializeGraphics({ transparency = false, optionalContentConfig }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.#canvasInUse.has(this._canvas)) {\n        throw new Error(\n          \"Cannot use the same canvas during multiple render() operations. \" +\n            \"Use different canvas or ensure previous operations were \" +\n            \"cancelled or completed.\"\n        );\n      }\n      InternalRenderTask.#canvasInUse.add(this._canvas);\n    }\n\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const { canvasContext, viewport, transform, background } = this.params;\n\n    this.gfx = new CanvasGraphics(\n      canvasContext,\n      this.commonObjs,\n      this.objs,\n      this.canvasFactory,\n      this.filterFactory,\n      { optionalContentConfig },\n      this.annotationCanvasMap,\n      this.pageColors\n    );\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background,\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    this.graphicsReadyCallback?.();\n  }\n\n  cancel(error = null, extraDelay = 0) {\n    this.running = false;\n    this.cancelled = true;\n    this.gfx?.endDrawing();\n    InternalRenderTask.#canvasInUse.delete(this._canvas);\n\n    this.callback(\n      error ||\n        new RenderingCancelledException(\n          `Rendering cancelled, page ${this._pageIndex + 1}`,\n          extraDelay\n        )\n    );\n  }\n\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      this.graphicsReadyCallback ||= this._continueBound;\n      return;\n    }\n    this.stepper?.updateOperatorList(this.operatorList);\n\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n\n  _scheduleNext() {\n    if (this._useRequestAnimationFrame) {\n      window.requestAnimationFrame(() => {\n        this._nextBound().catch(this._cancelBound);\n      });\n    } else {\n      Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n    }\n  }\n\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(\n      this.operatorList,\n      this.operatorListIdx,\n      this._continueBound,\n      this.stepper\n    );\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        InternalRenderTask.#canvasInUse.delete(this._canvas);\n\n        this.callback();\n      }\n    }\n  }\n}\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  DefaultFilterFactory,\n  DefaultStandardFontDataFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentLoadingTask,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  PDFWorkerUtil,\n  RenderTask,\n  SVGGraphics,\n  version,\n};\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap, unreachable } from \"../shared/util.js\";\nimport { AnnotationEditor } from \"./editor/editor.js\";\nimport { MurmurHash3_64 } from \"../shared/murmurhash3.js\";\n\nconst SerializableEmpty = Object.freeze({\n  map: null,\n  hash: \"\",\n  transfers: undefined,\n});\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  #modified = false;\n\n  #storage = new Map();\n\n  constructor() {\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n    this.onAnnotationEditor = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   * @param {string} key\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  getValue(key, defaultValue) {\n    const value = this.#storage.get(key);\n    if (value === undefined) {\n      return defaultValue;\n    }\n\n    return Object.assign(defaultValue, value);\n  }\n\n  /**\n   * Get the value for a given key.\n   * @param {string} key\n   * @returns {Object}\n   */\n  getRawValue(key) {\n    return this.#storage.get(key);\n  }\n\n  /**\n   * Remove a value from the storage.\n   * @param {string} key\n   */\n  remove(key) {\n    this.#storage.delete(key);\n\n    if (this.#storage.size === 0) {\n      this.resetModified();\n    }\n\n    if (typeof this.onAnnotationEditor === \"function\") {\n      for (const value of this.#storage.values()) {\n        if (value instanceof AnnotationEditor) {\n          return;\n        }\n      }\n      this.onAnnotationEditor(null);\n    }\n  }\n\n  /**\n   * Set the value for a given key\n   * @param {string} key\n   * @param {Object} value\n   */\n  setValue(key, value) {\n    const obj = this.#storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (obj[entry] !== val) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      modified = true;\n      this.#storage.set(key, value);\n    }\n    if (modified) {\n      this.#setModified();\n    }\n\n    if (\n      value instanceof AnnotationEditor &&\n      typeof this.onAnnotationEditor === \"function\"\n    ) {\n      this.onAnnotationEditor(value.constructor._type);\n    }\n  }\n\n  /**\n   * Check if the storage contains the given key.\n   * @param {string} key\n   * @returns {boolean}\n   */\n  has(key) {\n    return this.#storage.has(key);\n  }\n\n  /**\n   * @returns {Object | null}\n   */\n  getAll() {\n    return this.#storage.size > 0 ? objectFromMap(this.#storage) : null;\n  }\n\n  /**\n   * @param {Object} obj\n   */\n  setAll(obj) {\n    for (const [key, val] of Object.entries(obj)) {\n      this.setValue(key, val);\n    }\n  }\n\n  get size() {\n    return this.#storage.size;\n  }\n\n  #setModified() {\n    if (!this.#modified) {\n      this.#modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this.#modified) {\n      this.#modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * @returns {PrintAnnotationStorage}\n   */\n  get print() {\n    return new PrintAnnotationStorage(this);\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    if (this.#storage.size === 0) {\n      return SerializableEmpty;\n    }\n    const map = new Map(),\n      hash = new MurmurHash3_64(),\n      transfers = [];\n    const context = Object.create(null);\n    let hasBitmap = false;\n\n    for (const [key, val] of this.#storage) {\n      const serialized =\n        val instanceof AnnotationEditor\n          ? val.serialize(/* isForCopying = */ false, context)\n          : val;\n      if (serialized) {\n        map.set(key, serialized);\n\n        hash.update(`${key}:${JSON.stringify(serialized)}`);\n        hasBitmap ||= !!serialized.bitmap;\n      }\n    }\n\n    if (hasBitmap) {\n      // We must transfer the bitmap data separately, since it can be changed\n      // during serialization with SVG images.\n      for (const value of map.values()) {\n        if (value.bitmap) {\n          transfers.push(value.bitmap);\n        }\n      }\n    }\n\n    return map.size > 0\n      ? { map, hash: hash.hexdigest(), transfers }\n      : SerializableEmpty;\n  }\n}\n\n/**\n * A special `AnnotationStorage` for use during printing, where the serializable\n * data is *frozen* upon initialization, to prevent scripting from modifying its\n * contents. (Necessary since printing is triggered synchronously in browsers.)\n */\nclass PrintAnnotationStorage extends AnnotationStorage {\n  #serializable;\n\n  constructor(parent) {\n    super();\n    const { map, hash, transfers } = parent.serializable;\n    // Create a *copy* of the data, since Objects are passed by reference in JS.\n    const clone = structuredClone(\n      map,\n      (typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"SKIP_BABEL || TESTING\")) &&\n        transfers\n        ? { transfer: transfers }\n        : null\n    );\n    this.#serializable = { map: clone, hash, transfers };\n  }\n\n  /**\n   * @returns {PrintAnnotationStorage}\n   */\n  // eslint-disable-next-line getter-return\n  get print() {\n    unreachable(\"Should not call PrintAnnotationStorage.print\");\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this.#serializable;\n  }\n}\n\nexport { AnnotationStorage, PrintAnnotationStorage, SerializableEmpty };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./annotation_editor_layer.js\").AnnotationEditorLayer} AnnotationEditorLayer */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./tools.js\").AnnotationEditorUIManager} AnnotationEditorUIManager */\n\nimport { bindEvents, ColorManager } from \"./tools.js\";\nimport { FeatureTest, shadow, unreachable } from \"../../shared/util.js\";\nimport { noContextMenu } from \"../display_utils.js\";\n\n/**\n * @typedef {Object} AnnotationEditorParameters\n * @property {AnnotationEditorUIManager} uiManager - the global manager\n * @property {AnnotationEditorLayer} parent - the layer containing this editor\n * @property {string} id - editor id\n * @property {number} x - x-coordinate\n * @property {number} y - y-coordinate\n */\n\n/**\n * Base class for editors.\n */\nclass AnnotationEditor {\n  #altText = \"\";\n\n  #altTextDecorative = false;\n\n  #altTextButton = null;\n\n  #altTextTooltip = null;\n\n  #altTextTooltipTimeout = null;\n\n  #keepAspectRatio = false;\n\n  #resizersDiv = null;\n\n  #boundFocusin = this.focusin.bind(this);\n\n  #boundFocusout = this.focusout.bind(this);\n\n  #hasBeenClicked = false;\n\n  #isEditing = false;\n\n  #isInEditMode = false;\n\n  _initialOptions = Object.create(null);\n\n  _uiManager = null;\n\n  _focusEventsAllowed = true;\n\n  _l10nPromise = null;\n\n  #isDraggable = false;\n\n  #zIndex = AnnotationEditor._zIndex++;\n\n  static _borderLineWidth = -1;\n\n  static _colorManager = new ColorManager();\n\n  static _zIndex = 1;\n\n  // When one of the dimensions of an editor is smaller than this value, the\n  // button to edit the alt text is visually moved outside of the editor.\n  static SMALL_EDITOR_SIZE = 0;\n\n  /**\n   * @param {AnnotationEditorParameters} parameters\n   */\n  constructor(parameters) {\n    if (this.constructor === AnnotationEditor) {\n      unreachable(\"Cannot initialize AnnotationEditor.\");\n    }\n\n    this.parent = parameters.parent;\n    this.id = parameters.id;\n    this.width = this.height = null;\n    this.pageIndex = parameters.parent.pageIndex;\n    this.name = parameters.name;\n    this.div = null;\n    this._uiManager = parameters.uiManager;\n    this.annotationElementId = null;\n    this._willKeepAspectRatio = false;\n    this._initialOptions.isCentered = parameters.isCentered;\n    this._structTreeParentId = null;\n\n    const {\n      rotation,\n      rawDims: { pageWidth, pageHeight, pageX, pageY },\n    } = this.parent.viewport;\n\n    this.rotation = rotation;\n    this.pageRotation =\n      (360 + rotation - this._uiManager.viewParameters.rotation) % 360;\n    this.pageDimensions = [pageWidth, pageHeight];\n    this.pageTranslation = [pageX, pageY];\n\n    const [width, height] = this.parentDimensions;\n    this.x = parameters.x / width;\n    this.y = parameters.y / height;\n\n    this.isAttachedToDOM = false;\n    this.deleted = false;\n  }\n\n  get editorType() {\n    return Object.getPrototypeOf(this).constructor._type;\n  }\n\n  static get _defaultLineColor() {\n    return shadow(\n      this,\n      \"_defaultLineColor\",\n      this._colorManager.getHexCode(\"CanvasText\")\n    );\n  }\n\n  static deleteAnnotationElement(editor) {\n    const fakeEditor = new FakeEditor({\n      id: editor.parent.getNextId(),\n      parent: editor.parent,\n      uiManager: editor._uiManager,\n    });\n    fakeEditor.annotationElementId = editor.annotationElementId;\n    fakeEditor.deleted = true;\n    fakeEditor._uiManager.addToAnnotationStorage(fakeEditor);\n  }\n\n  /**\n   * Initialize the l10n stuff for this type of editor.\n   * @param {Object} l10n\n   */\n  static initialize(l10n, options = null) {\n    AnnotationEditor._l10nPromise ||= new Map(\n      [\n        \"editor_alt_text_button_label\",\n        \"editor_alt_text_edit_button_label\",\n        \"editor_alt_text_decorative_tooltip\",\n      ].map(str => [str, l10n.get(str)])\n    );\n    if (options?.strings) {\n      for (const str of options.strings) {\n        AnnotationEditor._l10nPromise.set(str, l10n.get(str));\n      }\n    }\n    if (AnnotationEditor._borderLineWidth !== -1) {\n      return;\n    }\n    const style = getComputedStyle(document.documentElement);\n    AnnotationEditor._borderLineWidth =\n      parseFloat(style.getPropertyValue(\"--outline-width\")) || 0;\n  }\n\n  /**\n   * Update the default parameters for this type of editor.\n   * @param {number} _type\n   * @param {*} _value\n   */\n  static updateDefaultParams(_type, _value) {}\n\n  /**\n   * Get the default properties to set in the UI for this type of editor.\n   * @returns {Array}\n   */\n  static get defaultPropertiesToUpdate() {\n    return [];\n  }\n\n  /**\n   * Check if this kind of editor is able to handle the given mime type for\n   * pasting.\n   * @param {string} mime\n   * @returns {boolean}\n   */\n  static isHandlingMimeForPasting(mime) {\n    return false;\n  }\n\n  /**\n   * Extract the data from the clipboard item and delegate the creation of the\n   * editor to the parent.\n   * @param {DataTransferItem} item\n   * @param {AnnotationEditorLayer} parent\n   */\n  static paste(item, parent) {\n    unreachable(\"Not implemented\");\n  }\n\n  /**\n   * Get the properties to update in the UI for this editor.\n   * @returns {Array}\n   */\n  get propertiesToUpdate() {\n    return [];\n  }\n\n  get _isDraggable() {\n    return this.#isDraggable;\n  }\n\n  set _isDraggable(value) {\n    this.#isDraggable = value;\n    this.div?.classList.toggle(\"draggable\", value);\n  }\n\n  center() {\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    switch (this.parentRotation) {\n      case 90:\n        this.x -= (this.height * pageHeight) / (pageWidth * 2);\n        this.y += (this.width * pageWidth) / (pageHeight * 2);\n        break;\n      case 180:\n        this.x += this.width / 2;\n        this.y += this.height / 2;\n        break;\n      case 270:\n        this.x += (this.height * pageHeight) / (pageWidth * 2);\n        this.y -= (this.width * pageWidth) / (pageHeight * 2);\n        break;\n      default:\n        this.x -= this.width / 2;\n        this.y -= this.height / 2;\n        break;\n    }\n    this.fixAndSetPosition();\n  }\n\n  /**\n   * Add some commands into the CommandManager (undo/redo stuff).\n   * @param {Object} params\n   */\n  addCommands(params) {\n    this._uiManager.addCommands(params);\n  }\n\n  get currentLayer() {\n    return this._uiManager.currentLayer;\n  }\n\n  /**\n   * This editor will be behind the others.\n   */\n  setInBackground() {\n    this.div.style.zIndex = 0;\n  }\n\n  /**\n   * This editor will be in the foreground.\n   */\n  setInForeground() {\n    this.div.style.zIndex = this.#zIndex;\n  }\n\n  setParent(parent) {\n    if (parent !== null) {\n      this.pageIndex = parent.pageIndex;\n      this.pageDimensions = parent.pageDimensions;\n    }\n    this.parent = parent;\n  }\n\n  /**\n   * onfocus callback.\n   */\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    if (!this.#hasBeenClicked) {\n      this.parent.setSelected(this);\n    } else {\n      this.#hasBeenClicked = false;\n    }\n  }\n\n  /**\n   * onblur callback.\n   * @param {FocusEvent} event\n   */\n  focusout(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n\n    if (!this.isAttachedToDOM) {\n      return;\n    }\n\n    // In case of focusout, the relatedTarget is the element which\n    // is grabbing the focus.\n    // So if the related target is an element under the div for this\n    // editor, then the editor isn't unactive.\n    const target = event.relatedTarget;\n    if (target?.closest(`#${this.id}`)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (!this.parent?.isMultipleSelection) {\n      this.commitOrRemove();\n    }\n  }\n\n  commitOrRemove() {\n    if (this.isEmpty()) {\n      this.remove();\n    } else {\n      this.commit();\n    }\n  }\n\n  /**\n   * Commit the data contained in this editor.\n   */\n  commit() {\n    this.addToAnnotationStorage();\n  }\n\n  addToAnnotationStorage() {\n    this._uiManager.addToAnnotationStorage(this);\n  }\n\n  /**\n   * Set the editor position within its parent.\n   * @param {number} x\n   * @param {number} y\n   * @param {number} tx - x-translation in screen coordinates.\n   * @param {number} ty - y-translation in screen coordinates.\n   */\n  setAt(x, y, tx, ty) {\n    const [width, height] = this.parentDimensions;\n    [tx, ty] = this.screenToPageTranslation(tx, ty);\n\n    this.x = (x + tx) / width;\n    this.y = (y + ty) / height;\n\n    this.fixAndSetPosition();\n  }\n\n  #translate([width, height], x, y) {\n    [x, y] = this.screenToPageTranslation(x, y);\n\n    this.x += x / width;\n    this.y += y / height;\n\n    this.fixAndSetPosition();\n  }\n\n  /**\n   * Translate the editor position within its parent.\n   * @param {number} x - x-translation in screen coordinates.\n   * @param {number} y - y-translation in screen coordinates.\n   */\n  translate(x, y) {\n    this.#translate(this.parentDimensions, x, y);\n  }\n\n  /**\n   * Translate the editor position within its page and adjust the scroll\n   * in order to have the editor in the view.\n   * @param {number} x - x-translation in page coordinates.\n   * @param {number} y - y-translation in page coordinates.\n   */\n  translateInPage(x, y) {\n    this.#translate(this.pageDimensions, x, y);\n    this.div.scrollIntoView({ block: \"nearest\" });\n  }\n\n  drag(tx, ty) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.x += tx / parentWidth;\n    this.y += ty / parentHeight;\n    if (this.parent && (this.x < 0 || this.x > 1 || this.y < 0 || this.y > 1)) {\n      // It's possible to not have a parent: for example, when the user is\n      // dragging all the selected editors but this one on a page which has been\n      // destroyed.\n      // It's why we need to check for it. In such a situation, it isn't really\n      // a problem to not find a new parent: it's something which is related to\n      // what the user is seeing, hence it depends on how pages are layed out.\n\n      // The element will be outside of its parent so change the parent.\n      const { x, y } = this.div.getBoundingClientRect();\n      if (this.parent.findNewParent(this, x, y)) {\n        this.x -= Math.floor(this.x);\n        this.y -= Math.floor(this.y);\n      }\n    }\n\n    // The editor can be moved wherever the user wants, so we don't need to fix\n    // the position: it'll be done when the user will release the mouse button.\n\n    let { x, y } = this;\n    const [bx, by] = this.#getBaseTranslation();\n    x += bx;\n    y += by;\n\n    this.div.style.left = `${(100 * x).toFixed(2)}%`;\n    this.div.style.top = `${(100 * y).toFixed(2)}%`;\n    this.div.scrollIntoView({ block: \"nearest\" });\n  }\n\n  #getBaseTranslation() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const { _borderLineWidth } = AnnotationEditor;\n    const x = _borderLineWidth / parentWidth;\n    const y = _borderLineWidth / parentHeight;\n    switch (this.rotation) {\n      case 90:\n        return [-x, y];\n      case 180:\n        return [x, y];\n      case 270:\n        return [x, -y];\n      default:\n        return [-x, -y];\n    }\n  }\n\n  fixAndSetPosition() {\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    let { x, y, width, height } = this;\n    width *= pageWidth;\n    height *= pageHeight;\n    x *= pageWidth;\n    y *= pageHeight;\n\n    switch (this.rotation) {\n      case 0:\n        x = Math.max(0, Math.min(pageWidth - width, x));\n        y = Math.max(0, Math.min(pageHeight - height, y));\n        break;\n      case 90:\n        x = Math.max(0, Math.min(pageWidth - height, x));\n        y = Math.min(pageHeight, Math.max(width, y));\n        break;\n      case 180:\n        x = Math.min(pageWidth, Math.max(width, x));\n        y = Math.min(pageHeight, Math.max(height, y));\n        break;\n      case 270:\n        x = Math.min(pageWidth, Math.max(height, x));\n        y = Math.max(0, Math.min(pageHeight - width, y));\n        break;\n    }\n\n    this.x = x /= pageWidth;\n    this.y = y /= pageHeight;\n\n    const [bx, by] = this.#getBaseTranslation();\n    x += bx;\n    y += by;\n\n    const { style } = this.div;\n    style.left = `${(100 * x).toFixed(2)}%`;\n    style.top = `${(100 * y).toFixed(2)}%`;\n\n    this.moveInDOM();\n  }\n\n  static #rotatePoint(x, y, angle) {\n    switch (angle) {\n      case 90:\n        return [y, -x];\n      case 180:\n        return [-x, -y];\n      case 270:\n        return [-y, x];\n      default:\n        return [x, y];\n    }\n  }\n\n  /**\n   * Convert a screen translation into a page one.\n   * @param {number} x\n   * @param {number} y\n   */\n  screenToPageTranslation(x, y) {\n    return AnnotationEditor.#rotatePoint(x, y, this.parentRotation);\n  }\n\n  /**\n   * Convert a page translation into a screen one.\n   * @param {number} x\n   * @param {number} y\n   */\n  pageTranslationToScreen(x, y) {\n    return AnnotationEditor.#rotatePoint(x, y, 360 - this.parentRotation);\n  }\n\n  #getRotationMatrix(rotation) {\n    switch (rotation) {\n      case 90: {\n        const [pageWidth, pageHeight] = this.pageDimensions;\n        return [0, -pageWidth / pageHeight, pageHeight / pageWidth, 0];\n      }\n      case 180:\n        return [-1, 0, 0, -1];\n      case 270: {\n        const [pageWidth, pageHeight] = this.pageDimensions;\n        return [0, pageWidth / pageHeight, -pageHeight / pageWidth, 0];\n      }\n      default:\n        return [1, 0, 0, 1];\n    }\n  }\n\n  get parentScale() {\n    return this._uiManager.viewParameters.realScale;\n  }\n\n  get parentRotation() {\n    return (this._uiManager.viewParameters.rotation + this.pageRotation) % 360;\n  }\n\n  get parentDimensions() {\n    const {\n      parentScale,\n      pageDimensions: [pageWidth, pageHeight],\n    } = this;\n    const scaledWidth = pageWidth * parentScale;\n    const scaledHeight = pageHeight * parentScale;\n    return FeatureTest.isCSSRoundSupported\n      ? [Math.round(scaledWidth), Math.round(scaledHeight)]\n      : [scaledWidth, scaledHeight];\n  }\n\n  /**\n   * Set the dimensions of this editor.\n   * @param {number} width\n   * @param {number} height\n   */\n  setDims(width, height) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.div.style.width = `${((100 * width) / parentWidth).toFixed(2)}%`;\n    if (!this.#keepAspectRatio) {\n      this.div.style.height = `${((100 * height) / parentHeight).toFixed(2)}%`;\n    }\n    this.#altTextButton?.classList.toggle(\n      \"small\",\n      width < AnnotationEditor.SMALL_EDITOR_SIZE ||\n        height < AnnotationEditor.SMALL_EDITOR_SIZE\n    );\n  }\n\n  fixDims() {\n    const { style } = this.div;\n    const { height, width } = style;\n    const widthPercent = width.endsWith(\"%\");\n    const heightPercent = !this.#keepAspectRatio && height.endsWith(\"%\");\n    if (widthPercent && heightPercent) {\n      return;\n    }\n\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    if (!widthPercent) {\n      style.width = `${((100 * parseFloat(width)) / parentWidth).toFixed(2)}%`;\n    }\n    if (!this.#keepAspectRatio && !heightPercent) {\n      style.height = `${((100 * parseFloat(height)) / parentHeight).toFixed(\n        2\n      )}%`;\n    }\n  }\n\n  /**\n   * Get the translation used to position this editor when it's created.\n   * @returns {Array<number>}\n   */\n  getInitialTranslation() {\n    return [0, 0];\n  }\n\n  #createResizers() {\n    if (this.#resizersDiv) {\n      return;\n    }\n    this.#resizersDiv = document.createElement(\"div\");\n    this.#resizersDiv.classList.add(\"resizers\");\n    const classes = [\"topLeft\", \"topRight\", \"bottomRight\", \"bottomLeft\"];\n    if (!this._willKeepAspectRatio) {\n      classes.push(\"topMiddle\", \"middleRight\", \"bottomMiddle\", \"middleLeft\");\n    }\n    for (const name of classes) {\n      const div = document.createElement(\"div\");\n      this.#resizersDiv.append(div);\n      div.classList.add(\"resizer\", name);\n      div.addEventListener(\n        \"pointerdown\",\n        this.#resizerPointerdown.bind(this, name)\n      );\n      div.addEventListener(\"contextmenu\", noContextMenu);\n    }\n    this.div.prepend(this.#resizersDiv);\n  }\n\n  #resizerPointerdown(name, event) {\n    event.preventDefault();\n    const { isMac } = FeatureTest.platform;\n    if (event.button !== 0 || (event.ctrlKey && isMac)) {\n      return;\n    }\n\n    const boundResizerPointermove = this.#resizerPointermove.bind(this, name);\n    const savedDraggable = this._isDraggable;\n    this._isDraggable = false;\n    const pointerMoveOptions = { passive: true, capture: true };\n    window.addEventListener(\n      \"pointermove\",\n      boundResizerPointermove,\n      pointerMoveOptions\n    );\n    const savedX = this.x;\n    const savedY = this.y;\n    const savedWidth = this.width;\n    const savedHeight = this.height;\n    const savedParentCursor = this.parent.div.style.cursor;\n    const savedCursor = this.div.style.cursor;\n    this.div.style.cursor = this.parent.div.style.cursor =\n      window.getComputedStyle(event.target).cursor;\n\n    const pointerUpCallback = () => {\n      this._isDraggable = savedDraggable;\n      window.removeEventListener(\"pointerup\", pointerUpCallback);\n      window.removeEventListener(\"blur\", pointerUpCallback);\n      window.removeEventListener(\n        \"pointermove\",\n        boundResizerPointermove,\n        pointerMoveOptions\n      );\n      this.parent.div.style.cursor = savedParentCursor;\n      this.div.style.cursor = savedCursor;\n\n      const newX = this.x;\n      const newY = this.y;\n      const newWidth = this.width;\n      const newHeight = this.height;\n      if (\n        newX === savedX &&\n        newY === savedY &&\n        newWidth === savedWidth &&\n        newHeight === savedHeight\n      ) {\n        return;\n      }\n\n      this.addCommands({\n        cmd: () => {\n          this.width = newWidth;\n          this.height = newHeight;\n          this.x = newX;\n          this.y = newY;\n          const [parentWidth, parentHeight] = this.parentDimensions;\n          this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n          this.fixAndSetPosition();\n        },\n        undo: () => {\n          this.width = savedWidth;\n          this.height = savedHeight;\n          this.x = savedX;\n          this.y = savedY;\n          const [parentWidth, parentHeight] = this.parentDimensions;\n          this.setDims(parentWidth * savedWidth, parentHeight * savedHeight);\n          this.fixAndSetPosition();\n        },\n        mustExec: true,\n      });\n    };\n    window.addEventListener(\"pointerup\", pointerUpCallback);\n    // If the user switches to another window (with alt+tab), then we end the\n    // resize session.\n    window.addEventListener(\"blur\", pointerUpCallback);\n  }\n\n  #resizerPointermove(name, event) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const savedX = this.x;\n    const savedY = this.y;\n    const savedWidth = this.width;\n    const savedHeight = this.height;\n    const minWidth = AnnotationEditor.MIN_SIZE / parentWidth;\n    const minHeight = AnnotationEditor.MIN_SIZE / parentHeight;\n\n    // 10000 because we multiply by 100 and use toFixed(2) in fixAndSetPosition.\n    // Without rounding, the positions of the corners other than the top left\n    // one can be slightly wrong.\n    const round = x => Math.round(x * 10000) / 10000;\n    const rotationMatrix = this.#getRotationMatrix(this.rotation);\n    const transf = (x, y) => [\n      rotationMatrix[0] * x + rotationMatrix[2] * y,\n      rotationMatrix[1] * x + rotationMatrix[3] * y,\n    ];\n    const invRotationMatrix = this.#getRotationMatrix(360 - this.rotation);\n    const invTransf = (x, y) => [\n      invRotationMatrix[0] * x + invRotationMatrix[2] * y,\n      invRotationMatrix[1] * x + invRotationMatrix[3] * y,\n    ];\n    let getPoint;\n    let getOpposite;\n    let isDiagonal = false;\n    let isHorizontal = false;\n\n    switch (name) {\n      case \"topLeft\":\n        isDiagonal = true;\n        getPoint = (w, h) => [0, 0];\n        getOpposite = (w, h) => [w, h];\n        break;\n      case \"topMiddle\":\n        getPoint = (w, h) => [w / 2, 0];\n        getOpposite = (w, h) => [w / 2, h];\n        break;\n      case \"topRight\":\n        isDiagonal = true;\n        getPoint = (w, h) => [w, 0];\n        getOpposite = (w, h) => [0, h];\n        break;\n      case \"middleRight\":\n        isHorizontal = true;\n        getPoint = (w, h) => [w, h / 2];\n        getOpposite = (w, h) => [0, h / 2];\n        break;\n      case \"bottomRight\":\n        isDiagonal = true;\n        getPoint = (w, h) => [w, h];\n        getOpposite = (w, h) => [0, 0];\n        break;\n      case \"bottomMiddle\":\n        getPoint = (w, h) => [w / 2, h];\n        getOpposite = (w, h) => [w / 2, 0];\n        break;\n      case \"bottomLeft\":\n        isDiagonal = true;\n        getPoint = (w, h) => [0, h];\n        getOpposite = (w, h) => [w, 0];\n        break;\n      case \"middleLeft\":\n        isHorizontal = true;\n        getPoint = (w, h) => [0, h / 2];\n        getOpposite = (w, h) => [w, h / 2];\n        break;\n    }\n\n    const point = getPoint(savedWidth, savedHeight);\n    const oppositePoint = getOpposite(savedWidth, savedHeight);\n    let transfOppositePoint = transf(...oppositePoint);\n    const oppositeX = round(savedX + transfOppositePoint[0]);\n    const oppositeY = round(savedY + transfOppositePoint[1]);\n    let ratioX = 1;\n    let ratioY = 1;\n\n    let [deltaX, deltaY] = this.screenToPageTranslation(\n      event.movementX,\n      event.movementY\n    );\n    [deltaX, deltaY] = invTransf(deltaX / parentWidth, deltaY / parentHeight);\n\n    if (isDiagonal) {\n      const oldDiag = Math.hypot(savedWidth, savedHeight);\n      ratioX = ratioY = Math.max(\n        Math.min(\n          Math.hypot(\n            oppositePoint[0] - point[0] - deltaX,\n            oppositePoint[1] - point[1] - deltaY\n          ) / oldDiag,\n          // Avoid the editor to be larger than the page.\n          1 / savedWidth,\n          1 / savedHeight\n        ),\n        // Avoid the editor to be smaller than the minimum size.\n        minWidth / savedWidth,\n        minHeight / savedHeight\n      );\n    } else if (isHorizontal) {\n      ratioX =\n        Math.max(\n          minWidth,\n          Math.min(1, Math.abs(oppositePoint[0] - point[0] - deltaX))\n        ) / savedWidth;\n    } else {\n      ratioY =\n        Math.max(\n          minHeight,\n          Math.min(1, Math.abs(oppositePoint[1] - point[1] - deltaY))\n        ) / savedHeight;\n    }\n\n    const newWidth = round(savedWidth * ratioX);\n    const newHeight = round(savedHeight * ratioY);\n    transfOppositePoint = transf(...getOpposite(newWidth, newHeight));\n    const newX = oppositeX - transfOppositePoint[0];\n    const newY = oppositeY - transfOppositePoint[1];\n\n    this.width = newWidth;\n    this.height = newHeight;\n    this.x = newX;\n    this.y = newY;\n\n    this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n    this.fixAndSetPosition();\n  }\n\n  async addAltTextButton() {\n    if (this.#altTextButton) {\n      return;\n    }\n    const altText = (this.#altTextButton = document.createElement(\"button\"));\n    altText.className = \"altText\";\n    const msg = await AnnotationEditor._l10nPromise.get(\n      \"editor_alt_text_button_label\"\n    );\n    altText.textContent = msg;\n    altText.setAttribute(\"aria-label\", msg);\n    altText.tabIndex = \"0\";\n    altText.addEventListener(\"contextmenu\", noContextMenu);\n    altText.addEventListener(\"pointerdown\", event => event.stopPropagation());\n    altText.addEventListener(\n      \"click\",\n      event => {\n        event.preventDefault();\n        this._uiManager.editAltText(this);\n      },\n      { capture: true }\n    );\n    altText.addEventListener(\"keydown\", event => {\n      if (event.target === altText && event.key === \"Enter\") {\n        event.preventDefault();\n        this._uiManager.editAltText(this);\n      }\n    });\n    this.#setAltTextButtonState();\n    this.div.append(altText);\n    if (!AnnotationEditor.SMALL_EDITOR_SIZE) {\n      // We take the width of the alt text button and we add 40% to it to be\n      // sure to have enough space for it.\n      const PERCENT = 40;\n      AnnotationEditor.SMALL_EDITOR_SIZE = Math.min(\n        128,\n        Math.round(altText.getBoundingClientRect().width * (1 + PERCENT / 100))\n      );\n    }\n  }\n\n  async #setAltTextButtonState() {\n    const button = this.#altTextButton;\n    if (!button) {\n      return;\n    }\n    if (!this.#altText && !this.#altTextDecorative) {\n      button.classList.remove(\"done\");\n      this.#altTextTooltip?.remove();\n      return;\n    }\n    AnnotationEditor._l10nPromise\n      .get(\"editor_alt_text_edit_button_label\")\n      .then(msg => {\n        button.setAttribute(\"aria-label\", msg);\n      });\n\n    let tooltip = this.#altTextTooltip;\n    if (!tooltip) {\n      this.#altTextTooltip = tooltip = document.createElement(\"span\");\n      tooltip.className = \"tooltip\";\n      tooltip.setAttribute(\"role\", \"tooltip\");\n      const id = (tooltip.id = `alt-text-tooltip-${this.id}`);\n      button.setAttribute(\"aria-describedby\", id);\n\n      const DELAY_TO_SHOW_TOOLTIP = 100;\n      button.addEventListener(\"mouseenter\", () => {\n        this.#altTextTooltipTimeout = setTimeout(() => {\n          this.#altTextTooltipTimeout = null;\n          this.#altTextTooltip.classList.add(\"show\");\n          this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n            source: this,\n            details: {\n              type: \"editing\",\n              subtype: this.editorType,\n              data: {\n                action: \"alt_text_tooltip\",\n              },\n            },\n          });\n        }, DELAY_TO_SHOW_TOOLTIP);\n      });\n      button.addEventListener(\"mouseleave\", () => {\n        clearTimeout(this.#altTextTooltipTimeout);\n        this.#altTextTooltipTimeout = null;\n        this.#altTextTooltip?.classList.remove(\"show\");\n      });\n    }\n    button.classList.add(\"done\");\n    tooltip.innerText = this.#altTextDecorative\n      ? await AnnotationEditor._l10nPromise.get(\n          \"editor_alt_text_decorative_tooltip\"\n        )\n      : this.#altText;\n\n    if (!tooltip.parentNode) {\n      button.append(tooltip);\n    }\n  }\n\n  getClientDimensions() {\n    return this.div.getBoundingClientRect();\n  }\n\n  get altTextData() {\n    return {\n      altText: this.#altText,\n      decorative: this.#altTextDecorative,\n    };\n  }\n\n  set altTextData({ altText, decorative }) {\n    if (this.#altText === altText && this.#altTextDecorative === decorative) {\n      return;\n    }\n    this.#altText = altText;\n    this.#altTextDecorative = decorative;\n    this.#setAltTextButtonState();\n  }\n\n  /**\n   * Render this editor in a div.\n   * @returns {HTMLDivElement}\n   */\n  render() {\n    this.div = document.createElement(\"div\");\n    this.div.setAttribute(\"data-editor-rotation\", (360 - this.rotation) % 360);\n    this.div.className = this.name;\n    this.div.setAttribute(\"id\", this.id);\n    this.div.setAttribute(\"tabIndex\", 0);\n\n    this.setInForeground();\n\n    this.div.addEventListener(\"focusin\", this.#boundFocusin);\n    this.div.addEventListener(\"focusout\", this.#boundFocusout);\n\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    if (this.parentRotation % 180 !== 0) {\n      this.div.style.maxWidth = `${((100 * parentHeight) / parentWidth).toFixed(\n        2\n      )}%`;\n      this.div.style.maxHeight = `${(\n        (100 * parentWidth) /\n        parentHeight\n      ).toFixed(2)}%`;\n    }\n\n    const [tx, ty] = this.getInitialTranslation();\n    this.translate(tx, ty);\n\n    bindEvents(this, this.div, [\"pointerdown\"]);\n\n    return this.div;\n  }\n\n  /**\n   * Onpointerdown callback.\n   * @param {PointerEvent} event\n   */\n  pointerdown(event) {\n    const { isMac } = FeatureTest.platform;\n    if (event.button !== 0 || (event.ctrlKey && isMac)) {\n      // Avoid to focus this editor because of a non-left click.\n      event.preventDefault();\n      return;\n    }\n\n    this.#hasBeenClicked = true;\n\n    this.#setUpDragSession(event);\n  }\n\n  #setUpDragSession(event) {\n    if (!this._isDraggable) {\n      return;\n    }\n\n    const isSelected = this._uiManager.isSelected(this);\n    this._uiManager.setUpDragSession();\n\n    let pointerMoveOptions, pointerMoveCallback;\n    if (isSelected) {\n      pointerMoveOptions = { passive: true, capture: true };\n      pointerMoveCallback = e => {\n        const [tx, ty] = this.screenToPageTranslation(e.movementX, e.movementY);\n        this._uiManager.dragSelectedEditors(tx, ty);\n      };\n      window.addEventListener(\n        \"pointermove\",\n        pointerMoveCallback,\n        pointerMoveOptions\n      );\n    }\n\n    const pointerUpCallback = () => {\n      window.removeEventListener(\"pointerup\", pointerUpCallback);\n      window.removeEventListener(\"blur\", pointerUpCallback);\n      if (isSelected) {\n        window.removeEventListener(\n          \"pointermove\",\n          pointerMoveCallback,\n          pointerMoveOptions\n        );\n      }\n\n      this.#hasBeenClicked = false;\n      if (!this._uiManager.endDragSession()) {\n        const { isMac } = FeatureTest.platform;\n        if (\n          (event.ctrlKey && !isMac) ||\n          event.shiftKey ||\n          (event.metaKey && isMac)\n        ) {\n          this.parent.toggleSelected(this);\n        } else {\n          this.parent.setSelected(this);\n        }\n      }\n    };\n    window.addEventListener(\"pointerup\", pointerUpCallback);\n    // If the user is using alt+tab during the dragging session, the pointerup\n    // event could be not fired, but a blur event is fired so we can use it in\n    // order to interrupt the dragging session.\n    window.addEventListener(\"blur\", pointerUpCallback);\n  }\n\n  moveInDOM() {\n    this.parent?.moveEditorInDOM(this);\n  }\n\n  _setParentAndPosition(parent, x, y) {\n    parent.changeParent(this);\n    this.x = x;\n    this.y = y;\n    this.fixAndSetPosition();\n  }\n\n  /**\n   * Convert the current rect into a page one.\n   */\n  getRect(tx, ty) {\n    const scale = this.parentScale;\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    const [pageX, pageY] = this.pageTranslation;\n    const shiftX = tx / scale;\n    const shiftY = ty / scale;\n    const x = this.x * pageWidth;\n    const y = this.y * pageHeight;\n    const width = this.width * pageWidth;\n    const height = this.height * pageHeight;\n\n    switch (this.rotation) {\n      case 0:\n        return [\n          x + shiftX + pageX,\n          pageHeight - y - shiftY - height + pageY,\n          x + shiftX + width + pageX,\n          pageHeight - y - shiftY + pageY,\n        ];\n      case 90:\n        return [\n          x + shiftY + pageX,\n          pageHeight - y + shiftX + pageY,\n          x + shiftY + height + pageX,\n          pageHeight - y + shiftX + width + pageY,\n        ];\n      case 180:\n        return [\n          x - shiftX - width + pageX,\n          pageHeight - y + shiftY + pageY,\n          x - shiftX + pageX,\n          pageHeight - y + shiftY + height + pageY,\n        ];\n      case 270:\n        return [\n          x - shiftY - height + pageX,\n          pageHeight - y - shiftX - width + pageY,\n          x - shiftY + pageX,\n          pageHeight - y - shiftX + pageY,\n        ];\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n  }\n\n  getRectInCurrentCoords(rect, pageHeight) {\n    const [x1, y1, x2, y2] = rect;\n\n    const width = x2 - x1;\n    const height = y2 - y1;\n\n    switch (this.rotation) {\n      case 0:\n        return [x1, pageHeight - y2, width, height];\n      case 90:\n        return [x1, pageHeight - y1, height, width];\n      case 180:\n        return [x2, pageHeight - y1, width, height];\n      case 270:\n        return [x2, pageHeight - y2, height, width];\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n  }\n\n  /**\n   * Executed once this editor has been rendered.\n   */\n  onceAdded() {}\n\n  /**\n   * Check if the editor contains something.\n   * @returns {boolean}\n   */\n  isEmpty() {\n    return false;\n  }\n\n  /**\n   * Enable edit mode.\n   */\n  enableEditMode() {\n    this.#isInEditMode = true;\n  }\n\n  /**\n   * Disable edit mode.\n   */\n  disableEditMode() {\n    this.#isInEditMode = false;\n  }\n\n  /**\n   * Check if the editor is edited.\n   * @returns {boolean}\n   */\n  isInEditMode() {\n    return this.#isInEditMode;\n  }\n\n  /**\n   * If it returns true, then this editor handle the keyboard\n   * events itself.\n   * @returns {boolean}\n   */\n  shouldGetKeyboardEvents() {\n    return false;\n  }\n\n  /**\n   * Check if this editor needs to be rebuilt or not.\n   * @returns {boolean}\n   */\n  needsToBeRebuilt() {\n    return this.div && !this.isAttachedToDOM;\n  }\n\n  /**\n   * Rebuild the editor in case it has been removed on undo.\n   *\n   * To implement in subclasses.\n   */\n  rebuild() {\n    this.div?.addEventListener(\"focusin\", this.#boundFocusin);\n    this.div?.addEventListener(\"focusout\", this.#boundFocusout);\n  }\n\n  /**\n   * Serialize the editor.\n   * The result of the serialization will be used to construct a\n   * new annotation to add to the pdf document.\n   *\n   * To implement in subclasses.\n   * @param {boolean} isForCopying\n   * @param {Object} [context]\n   */\n  serialize(isForCopying = false, context = null) {\n    unreachable(\"An editor must be serializable\");\n  }\n\n  /**\n   * Deserialize the editor.\n   * The result of the deserialization is a new editor.\n   *\n   * @param {Object} data\n   * @param {AnnotationEditorLayer} parent\n   * @param {AnnotationEditorUIManager} uiManager\n   * @returns {AnnotationEditor}\n   */\n  static deserialize(data, parent, uiManager) {\n    const editor = new this.prototype.constructor({\n      parent,\n      id: parent.getNextId(),\n      uiManager,\n    });\n    editor.rotation = data.rotation;\n\n    const [pageWidth, pageHeight] = editor.pageDimensions;\n    const [x, y, width, height] = editor.getRectInCurrentCoords(\n      data.rect,\n      pageHeight\n    );\n    editor.x = x / pageWidth;\n    editor.y = y / pageHeight;\n    editor.width = width / pageWidth;\n    editor.height = height / pageHeight;\n\n    return editor;\n  }\n\n  /**\n   * Remove this editor.\n   * It's used on ctrl+backspace action.\n   */\n  remove() {\n    this.div.removeEventListener(\"focusin\", this.#boundFocusin);\n    this.div.removeEventListener(\"focusout\", this.#boundFocusout);\n\n    if (!this.isEmpty()) {\n      // The editor is removed but it can be back at some point thanks to\n      // undo/redo so we must commit it before.\n      this.commit();\n    }\n    if (this.parent) {\n      this.parent.remove(this);\n    } else {\n      this._uiManager.removeEditor(this);\n    }\n\n    // The editor is removed so we can remove the alt text button and if it's\n    // restored then it's up to the subclass to add it back.\n    this.#altTextButton?.remove();\n    this.#altTextButton = null;\n    this.#altTextTooltip = null;\n  }\n\n  /**\n   * @returns {boolean} true if this editor can be resized.\n   */\n  get isResizable() {\n    return false;\n  }\n\n  /**\n   * Add the resizers to this editor.\n   */\n  makeResizable() {\n    if (this.isResizable) {\n      this.#createResizers();\n      this.#resizersDiv.classList.remove(\"hidden\");\n    }\n  }\n\n  /**\n   * Select this editor.\n   */\n  select() {\n    this.makeResizable();\n    this.div?.classList.add(\"selectedEditor\");\n  }\n\n  /**\n   * Unselect this editor.\n   */\n  unselect() {\n    this.#resizersDiv?.classList.add(\"hidden\");\n    this.div?.classList.remove(\"selectedEditor\");\n    if (this.div?.contains(document.activeElement)) {\n      // Don't use this.div.blur() because we don't know where the focus will\n      // go.\n      this._uiManager.currentLayer.div.focus();\n    }\n  }\n\n  /**\n   * Update some parameters which have been changed through the UI.\n   * @param {number} type\n   * @param {*} value\n   */\n  updateParams(type, value) {}\n\n  /**\n   * When the user disables the editing mode some editors can change some of\n   * their properties.\n   */\n  disableEditing() {\n    if (this.#altTextButton) {\n      this.#altTextButton.hidden = true;\n    }\n  }\n\n  /**\n   * When the user enables the editing mode some editors can change some of\n   * their properties.\n   */\n  enableEditing() {\n    if (this.#altTextButton) {\n      this.#altTextButton.hidden = false;\n    }\n  }\n\n  /**\n   * The editor is about to be edited.\n   */\n  enterInEditMode() {}\n\n  /**\n   * Get the div which really contains the displayed content.\n   */\n  get contentDiv() {\n    return this.div;\n  }\n\n  /**\n   * If true then the editor is currently edited.\n   * @type {boolean}\n   */\n  get isEditing() {\n    return this.#isEditing;\n  }\n\n  /**\n   * When set to true, it means that this editor is currently edited.\n   * @param {boolean} value\n   */\n  set isEditing(value) {\n    this.#isEditing = value;\n    if (!this.parent) {\n      return;\n    }\n    if (value) {\n      this.parent.setSelected(this);\n      this.parent.setActiveEditor(this);\n    } else {\n      this.parent.setActiveEditor(null);\n    }\n  }\n\n  /**\n   * Set the aspect ratio to use when resizing.\n   * @param {number} width\n   * @param {number} height\n   */\n  setAspectRatio(width, height) {\n    this.#keepAspectRatio = true;\n    const aspectRatio = width / height;\n    const { style } = this.div;\n    style.aspectRatio = aspectRatio;\n    style.height = \"auto\";\n  }\n\n  static get MIN_SIZE() {\n    return 16;\n  }\n}\n\n// This class is used to fake an editor which has been deleted.\nclass FakeEditor extends AnnotationEditor {\n  constructor(params) {\n    super(params);\n    this.annotationElementId = params.annotationElementId;\n    this.deleted = true;\n  }\n\n  serialize() {\n    return {\n      id: this.annotationElementId,\n      deleted: true,\n      pageIndex: this.pageIndex,\n    };\n  }\n}\n\nexport { AnnotationEditor };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./editor.js\").AnnotationEditor} AnnotationEditor */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./annotation_editor_layer.js\").AnnotationEditorLayer} AnnotationEditorLayer */\n\nimport {\n  AnnotationEditorParamsType,\n  AnnotationEditorPrefix,\n  AnnotationEditorType,\n  FeatureTest,\n  getUuid,\n  shadow,\n  Util,\n  warn,\n} from \"../../shared/util.js\";\nimport { getColorValues, getRGB, PixelsPerInch } from \"../display_utils.js\";\n\nfunction bindEvents(obj, element, names) {\n  for (const name of names) {\n    element.addEventListener(name, obj[name].bind(obj));\n  }\n}\n\n/**\n * Convert a number between 0 and 100 into an hex number between 0 and 255.\n * @param {number} opacity\n * @return {string}\n */\nfunction opacityToHex(opacity) {\n  return Math.round(Math.min(255, Math.max(1, 255 * opacity)))\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n/**\n * Class to create some unique ids for the different editors.\n */\nclass IdManager {\n  #id = 0;\n\n  /**\n   * Get a unique id.\n   * @returns {string}\n   */\n  getId() {\n    return `${AnnotationEditorPrefix}${this.#id++}`;\n  }\n}\n\n/**\n * Class to manage the images used by the editors.\n * The main idea is to try to minimize the memory used by the images.\n * The images are cached and reused when possible\n * We use a refCounter to know when an image is not used anymore but we need to\n * be able to restore an image after a remove+undo, so we keep a file reference\n * or an url one.\n */\nclass ImageManager {\n  #baseId = getUuid();\n\n  #id = 0;\n\n  #cache = null;\n\n  static get _isSVGFittingCanvas() {\n    // By default, Firefox doesn't rescale without preserving the aspect ratio\n    // when drawing an SVG image on a canvas, see https://bugzilla.mozilla.org/1547776.\n    // The \"workaround\" is to append \"svgView(preserveAspectRatio(none))\" to the\n    // url, but according to comment #15, it seems that it leads to unexpected\n    // behavior in Safari.\n    const svg = `data:image/svg+xml;charset=UTF-8,<svg viewBox=\"0 0 1 1\" width=\"1\" height=\"1\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"1\" height=\"1\" style=\"fill:red;\"/></svg>`;\n    const canvas = new OffscreenCanvas(1, 3);\n    const ctx = canvas.getContext(\"2d\");\n    const image = new Image();\n    image.src = svg;\n    const promise = image.decode().then(() => {\n      ctx.drawImage(image, 0, 0, 1, 1, 0, 0, 1, 3);\n      return new Uint32Array(ctx.getImageData(0, 0, 1, 1).data.buffer)[0] === 0;\n    });\n\n    return shadow(this, \"_isSVGFittingCanvas\", promise);\n  }\n\n  async #get(key, rawData) {\n    this.#cache ||= new Map();\n    let data = this.#cache.get(key);\n    if (data === null) {\n      // We already tried to load the image but it failed.\n      return null;\n    }\n    if (data?.bitmap) {\n      data.refCounter += 1;\n      return data;\n    }\n    try {\n      data ||= {\n        bitmap: null,\n        id: `image_${this.#baseId}_${this.#id++}`,\n        refCounter: 0,\n        isSvg: false,\n      };\n      let image;\n      if (typeof rawData === \"string\") {\n        data.url = rawData;\n\n        const response = await fetch(rawData);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        image = await response.blob();\n      } else {\n        image = data.file = rawData;\n      }\n\n      if (image.type === \"image/svg+xml\") {\n        // Unfortunately, createImageBitmap doesn't work with SVG images.\n        // (see https://bugzilla.mozilla.org/1841972).\n        const mustRemoveAspectRatioPromise = ImageManager._isSVGFittingCanvas;\n        const fileReader = new FileReader();\n        const imageElement = new Image();\n        const imagePromise = new Promise((resolve, reject) => {\n          imageElement.onload = () => {\n            data.bitmap = imageElement;\n            data.isSvg = true;\n            resolve();\n          };\n          fileReader.onload = async () => {\n            const url = (data.svgUrl = fileReader.result);\n            // We need to set the preserveAspectRatio to none in order to let\n            // the image fits the canvas when resizing.\n            imageElement.src = (await mustRemoveAspectRatioPromise)\n              ? `${url}#svgView(preserveAspectRatio(none))`\n              : url;\n          };\n          imageElement.onerror = fileReader.onerror = reject;\n        });\n        fileReader.readAsDataURL(image);\n        await imagePromise;\n      } else {\n        data.bitmap = await createImageBitmap(image);\n      }\n      data.refCounter = 1;\n    } catch (e) {\n      console.error(e);\n      data = null;\n    }\n    this.#cache.set(key, data);\n    if (data) {\n      this.#cache.set(data.id, data);\n    }\n    return data;\n  }\n\n  async getFromFile(file) {\n    const { lastModified, name, size, type } = file;\n    return this.#get(`${lastModified}_${name}_${size}_${type}`, file);\n  }\n\n  async getFromUrl(url) {\n    return this.#get(url, url);\n  }\n\n  async getFromId(id) {\n    this.#cache ||= new Map();\n    const data = this.#cache.get(id);\n    if (!data) {\n      return null;\n    }\n    if (data.bitmap) {\n      data.refCounter += 1;\n      return data;\n    }\n\n    if (data.file) {\n      return this.getFromFile(data.file);\n    }\n    return this.getFromUrl(data.url);\n  }\n\n  getSvgUrl(id) {\n    const data = this.#cache.get(id);\n    if (!data?.isSvg) {\n      return null;\n    }\n    return data.svgUrl;\n  }\n\n  deleteId(id) {\n    this.#cache ||= new Map();\n    const data = this.#cache.get(id);\n    if (!data) {\n      return;\n    }\n    data.refCounter -= 1;\n    if (data.refCounter !== 0) {\n      return;\n    }\n    data.bitmap = null;\n  }\n\n  // We can use the id only if it belongs this manager.\n  // We must take care of having the right manager because we can copy/paste\n  // some images from other documents, hence it'd be a pity to use an id from an\n  // other manager.\n  isValidId(id) {\n    return id.startsWith(`image_${this.#baseId}_`);\n  }\n}\n\n/**\n * Class to handle undo/redo.\n * Commands are just saved in a buffer.\n * If we hit some memory issues we could likely use a circular buffer.\n * It has to be used as a singleton.\n */\nclass CommandManager {\n  #commands = [];\n\n  #locked = false;\n\n  #maxSize;\n\n  #position = -1;\n\n  constructor(maxSize = 128) {\n    this.#maxSize = maxSize;\n  }\n\n  /**\n   * @typedef {Object} addOptions\n   * @property {function} cmd\n   * @property {function} undo\n   * @property {boolean} mustExec\n   * @property {number} type\n   * @property {boolean} overwriteIfSameType\n   * @property {boolean} keepUndo\n   */\n\n  /**\n   * Add a new couple of commands to be used in case of redo/undo.\n   * @param {addOptions} options\n   */\n  add({\n    cmd,\n    undo,\n    mustExec,\n    type = NaN,\n    overwriteIfSameType = false,\n    keepUndo = false,\n  }) {\n    if (mustExec) {\n      cmd();\n    }\n\n    if (this.#locked) {\n      return;\n    }\n\n    const save = { cmd, undo, type };\n    if (this.#position === -1) {\n      if (this.#commands.length > 0) {\n        // All the commands have been undone and then a new one is added\n        // hence we clear the queue.\n        this.#commands.length = 0;\n      }\n      this.#position = 0;\n      this.#commands.push(save);\n      return;\n    }\n\n    if (overwriteIfSameType && this.#commands[this.#position].type === type) {\n      // For example when we change a color we don't want to\n      // be able to undo all the steps, hence we only want to\n      // keep the last undoable action in this sequence of actions.\n      if (keepUndo) {\n        save.undo = this.#commands[this.#position].undo;\n      }\n      this.#commands[this.#position] = save;\n      return;\n    }\n\n    const next = this.#position + 1;\n    if (next === this.#maxSize) {\n      this.#commands.splice(0, 1);\n    } else {\n      this.#position = next;\n      if (next < this.#commands.length) {\n        this.#commands.splice(next);\n      }\n    }\n\n    this.#commands.push(save);\n  }\n\n  /**\n   * Undo the last command.\n   */\n  undo() {\n    if (this.#position === -1) {\n      // Nothing to undo.\n      return;\n    }\n\n    // Avoid to insert something during the undo execution.\n    this.#locked = true;\n    this.#commands[this.#position].undo();\n    this.#locked = false;\n\n    this.#position -= 1;\n  }\n\n  /**\n   * Redo the last command.\n   */\n  redo() {\n    if (this.#position < this.#commands.length - 1) {\n      this.#position += 1;\n\n      // Avoid to insert something during the redo execution.\n      this.#locked = true;\n      this.#commands[this.#position].cmd();\n      this.#locked = false;\n    }\n  }\n\n  /**\n   * Check if there is something to undo.\n   * @returns {boolean}\n   */\n  hasSomethingToUndo() {\n    return this.#position !== -1;\n  }\n\n  /**\n   * Check if there is something to redo.\n   * @returns {boolean}\n   */\n  hasSomethingToRedo() {\n    return this.#position < this.#commands.length - 1;\n  }\n\n  destroy() {\n    this.#commands = null;\n  }\n}\n\n/**\n * Class to handle the different keyboards shortcuts we can have on mac or\n * non-mac OSes.\n */\nclass KeyboardManager {\n  /**\n   * Create a new keyboard manager class.\n   * @param {Array<Array>} callbacks - an array containing an array of shortcuts\n   * and a callback to call.\n   * A shortcut is a string like `ctrl+c` or `mac+ctrl+c` for mac OS.\n   */\n  constructor(callbacks) {\n    this.buffer = [];\n    this.callbacks = new Map();\n    this.allKeys = new Set();\n\n    const { isMac } = FeatureTest.platform;\n    for (const [keys, callback, options = {}] of callbacks) {\n      for (const key of keys) {\n        const isMacKey = key.startsWith(\"mac+\");\n        if (isMac && isMacKey) {\n          this.callbacks.set(key.slice(4), { callback, options });\n          this.allKeys.add(key.split(\"+\").at(-1));\n        } else if (!isMac && !isMacKey) {\n          this.callbacks.set(key, { callback, options });\n          this.allKeys.add(key.split(\"+\").at(-1));\n        }\n      }\n    }\n  }\n\n  /**\n   * Serialize an event into a string in order to match a\n   * potential key for a callback.\n   * @param {KeyboardEvent} event\n   * @returns {string}\n   */\n  #serialize(event) {\n    if (event.altKey) {\n      this.buffer.push(\"alt\");\n    }\n    if (event.ctrlKey) {\n      this.buffer.push(\"ctrl\");\n    }\n    if (event.metaKey) {\n      this.buffer.push(\"meta\");\n    }\n    if (event.shiftKey) {\n      this.buffer.push(\"shift\");\n    }\n    this.buffer.push(event.key);\n    const str = this.buffer.join(\"+\");\n    this.buffer.length = 0;\n\n    return str;\n  }\n\n  /**\n   * Execute a callback, if any, for a given keyboard event.\n   * The self is used as `this` in the callback.\n   * @param {Object} self\n   * @param {KeyboardEvent} event\n   * @returns\n   */\n  exec(self, event) {\n    if (!this.allKeys.has(event.key)) {\n      return;\n    }\n    const info = this.callbacks.get(this.#serialize(event));\n    if (!info) {\n      return;\n    }\n    const {\n      callback,\n      options: { bubbles = false, args = [], checker = null },\n    } = info;\n\n    if (checker && !checker(self, event)) {\n      return;\n    }\n    callback.bind(self, ...args)();\n\n    // For example, ctrl+s in a FreeText must be handled by the viewer, hence\n    // the event must bubble.\n    if (!bubbles) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n}\n\nclass ColorManager {\n  static _colorsMapping = new Map([\n    [\"CanvasText\", [0, 0, 0]],\n    [\"Canvas\", [255, 255, 255]],\n  ]);\n\n  get _colors() {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"LIB\") &&\n      typeof document === \"undefined\"\n    ) {\n      return shadow(this, \"_colors\", ColorManager._colorsMapping);\n    }\n\n    const colors = new Map([\n      [\"CanvasText\", null],\n      [\"Canvas\", null],\n    ]);\n    getColorValues(colors);\n    return shadow(this, \"_colors\", colors);\n  }\n\n  /**\n   * In High Contrast Mode, the color on the screen is not always the\n   * real color used in the pdf.\n   * For example in some cases white can appear to be black but when saving\n   * we want to have white.\n   * @param {string} color\n   * @returns {Array<number>}\n   */\n  convert(color) {\n    const rgb = getRGB(color);\n    if (!window.matchMedia(\"(forced-colors: active)\").matches) {\n      return rgb;\n    }\n\n    for (const [name, RGB] of this._colors) {\n      if (RGB.every((x, i) => x === rgb[i])) {\n        return ColorManager._colorsMapping.get(name);\n      }\n    }\n    return rgb;\n  }\n\n  /**\n   * An input element must have its color value as a hex string\n   * and not as color name.\n   * So this function converts a name into an hex string.\n   * @param {string} name\n   * @returns {string}\n   */\n  getHexCode(name) {\n    const rgb = this._colors.get(name);\n    if (!rgb) {\n      return name;\n    }\n    return Util.makeHexColor(...rgb);\n  }\n}\n\n/**\n * A pdf has several pages and each of them when it will rendered\n * will have an AnnotationEditorLayer which will contain the some\n * new Annotations associated to an editor in order to modify them.\n *\n * This class is used to manage all the different layers, editors and\n * some action like copy/paste, undo/redo, ...\n */\nclass AnnotationEditorUIManager {\n  #activeEditor = null;\n\n  #allEditors = new Map();\n\n  #allLayers = new Map();\n\n  #altTextManager = null;\n\n  #annotationStorage = null;\n\n  #commandManager = new CommandManager();\n\n  #currentPageIndex = 0;\n\n  #deletedAnnotationsElementIds = new Set();\n\n  #draggingEditors = null;\n\n  #editorTypes = null;\n\n  #editorsToRescale = new Set();\n\n  #filterFactory = null;\n\n  #idManager = new IdManager();\n\n  #isEnabled = false;\n\n  #isWaiting = false;\n\n  #lastActiveElement = null;\n\n  #mode = AnnotationEditorType.NONE;\n\n  #selectedEditors = new Set();\n\n  #pageColors = null;\n\n  #boundBlur = this.blur.bind(this);\n\n  #boundFocus = this.focus.bind(this);\n\n  #boundCopy = this.copy.bind(this);\n\n  #boundCut = this.cut.bind(this);\n\n  #boundPaste = this.paste.bind(this);\n\n  #boundKeydown = this.keydown.bind(this);\n\n  #boundOnEditingAction = this.onEditingAction.bind(this);\n\n  #boundOnPageChanging = this.onPageChanging.bind(this);\n\n  #boundOnScaleChanging = this.onScaleChanging.bind(this);\n\n  #boundOnRotationChanging = this.onRotationChanging.bind(this);\n\n  #previousStates = {\n    isEditing: false,\n    isEmpty: true,\n    hasSomethingToUndo: false,\n    hasSomethingToRedo: false,\n    hasSelectedEditor: false,\n  };\n\n  #translation = [0, 0];\n\n  #translationTimeoutId = null;\n\n  #container = null;\n\n  #viewer = null;\n\n  static TRANSLATE_SMALL = 1; // page units.\n\n  static TRANSLATE_BIG = 10; // page units.\n\n  static get _keyboardManager() {\n    const proto = AnnotationEditorUIManager.prototype;\n\n    const arrowChecker = self => {\n      // If the focused element is an input, we don't want to handle the arrow.\n      // For example, sliders can be controlled with the arrow keys.\n      const { activeElement } = document;\n      return (\n        activeElement &&\n        self.#container.contains(activeElement) &&\n        self.hasSomethingToControl()\n      );\n    };\n\n    const small = this.TRANSLATE_SMALL;\n    const big = this.TRANSLATE_BIG;\n\n    return shadow(\n      this,\n      \"_keyboardManager\",\n      new KeyboardManager([\n        [[\"ctrl+a\", \"mac+meta+a\"], proto.selectAll],\n        [[\"ctrl+z\", \"mac+meta+z\"], proto.undo],\n        [\n          // On mac, depending of the OS version, the event.key is either \"z\" or\n          // \"Z\" when the user presses \"meta+shift+z\".\n          [\n            \"ctrl+y\",\n            \"ctrl+shift+z\",\n            \"mac+meta+shift+z\",\n            \"ctrl+shift+Z\",\n            \"mac+meta+shift+Z\",\n          ],\n          proto.redo,\n        ],\n        [\n          [\n            \"Backspace\",\n            \"alt+Backspace\",\n            \"ctrl+Backspace\",\n            \"shift+Backspace\",\n            \"mac+Backspace\",\n            \"mac+alt+Backspace\",\n            \"mac+ctrl+Backspace\",\n            \"Delete\",\n            \"ctrl+Delete\",\n            \"shift+Delete\",\n            \"mac+Delete\",\n          ],\n          proto.delete,\n        ],\n        [[\"Escape\", \"mac+Escape\"], proto.unselectAll],\n        [\n          [\"ArrowLeft\", \"mac+ArrowLeft\"],\n          proto.translateSelectedEditors,\n          { args: [-small, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"],\n          proto.translateSelectedEditors,\n          { args: [-big, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowRight\", \"mac+ArrowRight\"],\n          proto.translateSelectedEditors,\n          { args: [small, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"],\n          proto.translateSelectedEditors,\n          { args: [big, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowUp\", \"mac+ArrowUp\"],\n          proto.translateSelectedEditors,\n          { args: [0, -small], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"],\n          proto.translateSelectedEditors,\n          { args: [0, -big], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowDown\", \"mac+ArrowDown\"],\n          proto.translateSelectedEditors,\n          { args: [0, small], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"],\n          proto.translateSelectedEditors,\n          { args: [0, big], checker: arrowChecker },\n        ],\n      ])\n    );\n  }\n\n  constructor(\n    container,\n    viewer,\n    altTextManager,\n    eventBus,\n    pdfDocument,\n    pageColors\n  ) {\n    this.#container = container;\n    this.#viewer = viewer;\n    this.#altTextManager = altTextManager;\n    this._eventBus = eventBus;\n    this._eventBus._on(\"editingaction\", this.#boundOnEditingAction);\n    this._eventBus._on(\"pagechanging\", this.#boundOnPageChanging);\n    this._eventBus._on(\"scalechanging\", this.#boundOnScaleChanging);\n    this._eventBus._on(\"rotationchanging\", this.#boundOnRotationChanging);\n    this.#annotationStorage = pdfDocument.annotationStorage;\n    this.#filterFactory = pdfDocument.filterFactory;\n    this.#pageColors = pageColors;\n    this.viewParameters = {\n      realScale: PixelsPerInch.PDF_TO_CSS_UNITS,\n      rotation: 0,\n    };\n  }\n\n  destroy() {\n    this.#removeKeyboardManager();\n    this.#removeFocusManager();\n    this._eventBus._off(\"editingaction\", this.#boundOnEditingAction);\n    this._eventBus._off(\"pagechanging\", this.#boundOnPageChanging);\n    this._eventBus._off(\"scalechanging\", this.#boundOnScaleChanging);\n    this._eventBus._off(\"rotationchanging\", this.#boundOnRotationChanging);\n    for (const layer of this.#allLayers.values()) {\n      layer.destroy();\n    }\n    this.#allLayers.clear();\n    this.#allEditors.clear();\n    this.#editorsToRescale.clear();\n    this.#activeEditor = null;\n    this.#selectedEditors.clear();\n    this.#commandManager.destroy();\n    this.#altTextManager.destroy();\n  }\n\n  get hcmFilter() {\n    return shadow(\n      this,\n      \"hcmFilter\",\n      this.#pageColors\n        ? this.#filterFactory.addHCMFilter(\n            this.#pageColors.foreground,\n            this.#pageColors.background\n          )\n        : \"none\"\n    );\n  }\n\n  get direction() {\n    return shadow(\n      this,\n      \"direction\",\n      getComputedStyle(this.#container).direction\n    );\n  }\n\n  editAltText(editor) {\n    this.#altTextManager?.editAltText(this, editor);\n  }\n\n  onPageChanging({ pageNumber }) {\n    this.#currentPageIndex = pageNumber - 1;\n  }\n\n  focusMainContainer() {\n    this.#container.focus();\n  }\n\n  findParent(x, y) {\n    for (const layer of this.#allLayers.values()) {\n      const {\n        x: layerX,\n        y: layerY,\n        width,\n        height,\n      } = layer.div.getBoundingClientRect();\n      if (\n        x >= layerX &&\n        x <= layerX + width &&\n        y >= layerY &&\n        y <= layerY + height\n      ) {\n        return layer;\n      }\n    }\n    return null;\n  }\n\n  disableUserSelect(value = false) {\n    this.#viewer.classList.toggle(\"noUserSelect\", value);\n  }\n\n  addShouldRescale(editor) {\n    this.#editorsToRescale.add(editor);\n  }\n\n  removeShouldRescale(editor) {\n    this.#editorsToRescale.delete(editor);\n  }\n\n  onScaleChanging({ scale }) {\n    this.commitOrRemove();\n    this.viewParameters.realScale = scale * PixelsPerInch.PDF_TO_CSS_UNITS;\n    for (const editor of this.#editorsToRescale) {\n      editor.onScaleChanging();\n    }\n  }\n\n  onRotationChanging({ pagesRotation }) {\n    this.commitOrRemove();\n    this.viewParameters.rotation = pagesRotation;\n  }\n\n  /**\n   * Add an editor in the annotation storage.\n   * @param {AnnotationEditor} editor\n   */\n  addToAnnotationStorage(editor) {\n    if (\n      !editor.isEmpty() &&\n      this.#annotationStorage &&\n      !this.#annotationStorage.has(editor.id)\n    ) {\n      this.#annotationStorage.setValue(editor.id, editor);\n    }\n  }\n\n  #addFocusManager() {\n    window.addEventListener(\"focus\", this.#boundFocus);\n    window.addEventListener(\"blur\", this.#boundBlur);\n  }\n\n  #removeFocusManager() {\n    window.removeEventListener(\"focus\", this.#boundFocus);\n    window.removeEventListener(\"blur\", this.#boundBlur);\n  }\n\n  blur() {\n    if (!this.hasSelection) {\n      return;\n    }\n    // When several editors are selected and the window loses focus, we want to\n    // keep the last active element in order to be able to focus it again when\n    // the window gets the focus back but we don't want to trigger any focus\n    // callbacks else only one editor will be selected.\n    const { activeElement } = document;\n    for (const editor of this.#selectedEditors) {\n      if (editor.div.contains(activeElement)) {\n        this.#lastActiveElement = [editor, activeElement];\n        editor._focusEventsAllowed = false;\n        break;\n      }\n    }\n  }\n\n  focus() {\n    if (!this.#lastActiveElement) {\n      return;\n    }\n    const [lastEditor, lastActiveElement] = this.#lastActiveElement;\n    this.#lastActiveElement = null;\n    lastActiveElement.addEventListener(\n      \"focusin\",\n      () => {\n        lastEditor._focusEventsAllowed = true;\n      },\n      { once: true }\n    );\n    lastActiveElement.focus();\n  }\n\n  #addKeyboardManager() {\n    // The keyboard events are caught at the container level in order to be able\n    // to execute some callbacks even if the current page doesn't have focus.\n    window.addEventListener(\"keydown\", this.#boundKeydown, { capture: true });\n  }\n\n  #removeKeyboardManager() {\n    window.removeEventListener(\"keydown\", this.#boundKeydown, {\n      capture: true,\n    });\n  }\n\n  #addCopyPasteListeners() {\n    document.addEventListener(\"copy\", this.#boundCopy);\n    document.addEventListener(\"cut\", this.#boundCut);\n    document.addEventListener(\"paste\", this.#boundPaste);\n  }\n\n  #removeCopyPasteListeners() {\n    document.removeEventListener(\"copy\", this.#boundCopy);\n    document.removeEventListener(\"cut\", this.#boundCut);\n    document.removeEventListener(\"paste\", this.#boundPaste);\n  }\n\n  addEditListeners() {\n    this.#addKeyboardManager();\n    this.#addCopyPasteListeners();\n  }\n\n  removeEditListeners() {\n    this.#removeKeyboardManager();\n    this.#removeCopyPasteListeners();\n  }\n\n  /**\n   * Copy callback.\n   * @param {ClipboardEvent} event\n   */\n  copy(event) {\n    event.preventDefault();\n\n    // An editor is being edited so just commit it.\n    this.#activeEditor?.commitOrRemove();\n\n    if (!this.hasSelection) {\n      return;\n    }\n\n    const editors = [];\n    for (const editor of this.#selectedEditors) {\n      const serialized = editor.serialize(/* isForCopying = */ true);\n      if (serialized) {\n        editors.push(serialized);\n      }\n    }\n    if (editors.length === 0) {\n      return;\n    }\n\n    event.clipboardData.setData(\"application/pdfjs\", JSON.stringify(editors));\n  }\n\n  /**\n   * Cut callback.\n   * @param {ClipboardEvent} event\n   */\n  cut(event) {\n    this.copy(event);\n    this.delete();\n  }\n\n  /**\n   * Paste callback.\n   * @param {ClipboardEvent} event\n   */\n  paste(event) {\n    event.preventDefault();\n    const { clipboardData } = event;\n    for (const item of clipboardData.items) {\n      for (const editorType of this.#editorTypes) {\n        if (editorType.isHandlingMimeForPasting(item.type)) {\n          editorType.paste(item, this.currentLayer);\n          return;\n        }\n      }\n    }\n\n    let data = clipboardData.getData(\"application/pdfjs\");\n    if (!data) {\n      return;\n    }\n\n    try {\n      data = JSON.parse(data);\n    } catch (ex) {\n      warn(`paste: \"${ex.message}\".`);\n      return;\n    }\n\n    if (!Array.isArray(data)) {\n      return;\n    }\n\n    this.unselectAll();\n    const layer = this.currentLayer;\n\n    try {\n      const newEditors = [];\n      for (const editor of data) {\n        const deserializedEditor = layer.deserialize(editor);\n        if (!deserializedEditor) {\n          return;\n        }\n        newEditors.push(deserializedEditor);\n      }\n\n      const cmd = () => {\n        for (const editor of newEditors) {\n          this.#addEditorToLayer(editor);\n        }\n        this.#selectEditors(newEditors);\n      };\n      const undo = () => {\n        for (const editor of newEditors) {\n          editor.remove();\n        }\n      };\n      this.addCommands({ cmd, undo, mustExec: true });\n    } catch (ex) {\n      warn(`paste: \"${ex.message}\".`);\n    }\n  }\n\n  /**\n   * Keydown callback.\n   * @param {KeyboardEvent} event\n   */\n  keydown(event) {\n    if (!this.getActive()?.shouldGetKeyboardEvents()) {\n      AnnotationEditorUIManager._keyboardManager.exec(this, event);\n    }\n  }\n\n  /**\n   * Execute an action for a given name.\n   * For example, the user can click on the \"Undo\" entry in the context menu\n   * and it'll trigger the undo action.\n   * @param {Object} details\n   */\n  onEditingAction(details) {\n    if ([\"undo\", \"redo\", \"delete\", \"selectAll\"].includes(details.name)) {\n      this[details.name]();\n    }\n  }\n\n  /**\n   * Update the different possible states of this manager, e.g. is there\n   * something to undo, redo, ...\n   * @param {Object} details\n   */\n  #dispatchUpdateStates(details) {\n    const hasChanged = Object.entries(details).some(\n      ([key, value]) => this.#previousStates[key] !== value\n    );\n\n    if (hasChanged) {\n      this._eventBus.dispatch(\"annotationeditorstateschanged\", {\n        source: this,\n        details: Object.assign(this.#previousStates, details),\n      });\n    }\n  }\n\n  #dispatchUpdateUI(details) {\n    this._eventBus.dispatch(\"annotationeditorparamschanged\", {\n      source: this,\n      details,\n    });\n  }\n\n  /**\n   * Set the editing state.\n   * It can be useful to temporarily disable it when the user is editing a\n   * FreeText annotation.\n   * @param {boolean} isEditing\n   */\n  setEditingState(isEditing) {\n    if (isEditing) {\n      this.#addFocusManager();\n      this.#addKeyboardManager();\n      this.#addCopyPasteListeners();\n      this.#dispatchUpdateStates({\n        isEditing: this.#mode !== AnnotationEditorType.NONE,\n        isEmpty: this.#isEmpty(),\n        hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n        hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n        hasSelectedEditor: false,\n      });\n    } else {\n      this.#removeFocusManager();\n      this.#removeKeyboardManager();\n      this.#removeCopyPasteListeners();\n      this.#dispatchUpdateStates({\n        isEditing: false,\n      });\n      this.disableUserSelect(false);\n    }\n  }\n\n  registerEditorTypes(types) {\n    if (this.#editorTypes) {\n      return;\n    }\n    this.#editorTypes = types;\n    for (const editorType of this.#editorTypes) {\n      this.#dispatchUpdateUI(editorType.defaultPropertiesToUpdate);\n    }\n  }\n\n  /**\n   * Get an id.\n   * @returns {string}\n   */\n  getId() {\n    return this.#idManager.getId();\n  }\n\n  get currentLayer() {\n    return this.#allLayers.get(this.#currentPageIndex);\n  }\n\n  getLayer(pageIndex) {\n    return this.#allLayers.get(pageIndex);\n  }\n\n  get currentPageIndex() {\n    return this.#currentPageIndex;\n  }\n\n  /**\n   * Add a new layer for a page which will contains the editors.\n   * @param {AnnotationEditorLayer} layer\n   */\n  addLayer(layer) {\n    this.#allLayers.set(layer.pageIndex, layer);\n    if (this.#isEnabled) {\n      layer.enable();\n    } else {\n      layer.disable();\n    }\n  }\n\n  /**\n   * Remove a layer.\n   * @param {AnnotationEditorLayer} layer\n   */\n  removeLayer(layer) {\n    this.#allLayers.delete(layer.pageIndex);\n  }\n\n  /**\n   * Change the editor mode (None, FreeText, Ink, ...)\n   * @param {number} mode\n   * @param {string|null} editId\n   */\n  updateMode(mode, editId = null) {\n    if (this.#mode === mode) {\n      return;\n    }\n    this.#mode = mode;\n    if (mode === AnnotationEditorType.NONE) {\n      this.setEditingState(false);\n      this.#disableAll();\n      return;\n    }\n    this.setEditingState(true);\n    this.#enableAll();\n    this.unselectAll();\n    for (const layer of this.#allLayers.values()) {\n      layer.updateMode(mode);\n    }\n    if (!editId) {\n      return;\n    }\n    for (const editor of this.#allEditors.values()) {\n      if (editor.annotationElementId === editId) {\n        this.setSelected(editor);\n        editor.enterInEditMode();\n        break;\n      }\n    }\n  }\n\n  /**\n   * Update the toolbar if it's required to reflect the tool currently used.\n   * @param {number} mode\n   * @returns {undefined}\n   */\n  updateToolbar(mode) {\n    if (mode === this.#mode) {\n      return;\n    }\n    this._eventBus.dispatch(\"switchannotationeditormode\", {\n      source: this,\n      mode,\n    });\n  }\n\n  /**\n   * Update a parameter in the current editor or globally.\n   * @param {number} type\n   * @param {*} value\n   */\n  updateParams(type, value) {\n    if (!this.#editorTypes) {\n      return;\n    }\n    if (type === AnnotationEditorParamsType.CREATE) {\n      this.currentLayer.addNewEditor(type);\n      return;\n    }\n\n    for (const editor of this.#selectedEditors) {\n      editor.updateParams(type, value);\n    }\n\n    for (const editorType of this.#editorTypes) {\n      editorType.updateDefaultParams(type, value);\n    }\n  }\n\n  enableWaiting(mustWait = false) {\n    if (this.#isWaiting === mustWait) {\n      return;\n    }\n    this.#isWaiting = mustWait;\n    for (const layer of this.#allLayers.values()) {\n      if (mustWait) {\n        layer.disableClick();\n      } else {\n        layer.enableClick();\n      }\n      layer.div.classList.toggle(\"waiting\", mustWait);\n    }\n  }\n\n  /**\n   * Enable all the layers.\n   */\n  #enableAll() {\n    if (!this.#isEnabled) {\n      this.#isEnabled = true;\n      for (const layer of this.#allLayers.values()) {\n        layer.enable();\n      }\n    }\n  }\n\n  /**\n   * Disable all the layers.\n   */\n  #disableAll() {\n    this.unselectAll();\n    if (this.#isEnabled) {\n      this.#isEnabled = false;\n      for (const layer of this.#allLayers.values()) {\n        layer.disable();\n      }\n    }\n  }\n\n  /**\n   * Get all the editors belonging to a given page.\n   * @param {number} pageIndex\n   * @returns {Array<AnnotationEditor>}\n   */\n  getEditors(pageIndex) {\n    const editors = [];\n    for (const editor of this.#allEditors.values()) {\n      if (editor.pageIndex === pageIndex) {\n        editors.push(editor);\n      }\n    }\n    return editors;\n  }\n\n  /**\n   * Get an editor with the given id.\n   * @param {string} id\n   * @returns {AnnotationEditor}\n   */\n  getEditor(id) {\n    return this.#allEditors.get(id);\n  }\n\n  /**\n   * Add a new editor.\n   * @param {AnnotationEditor} editor\n   */\n  addEditor(editor) {\n    this.#allEditors.set(editor.id, editor);\n  }\n\n  /**\n   * Remove an editor.\n   * @param {AnnotationEditor} editor\n   */\n  removeEditor(editor) {\n    this.#allEditors.delete(editor.id);\n    this.unselect(editor);\n    if (\n      !editor.annotationElementId ||\n      !this.#deletedAnnotationsElementIds.has(editor.annotationElementId)\n    ) {\n      this.#annotationStorage?.remove(editor.id);\n    }\n  }\n\n  /**\n   * The annotation element with the given id has been deleted.\n   * @param {AnnotationEditor} editor\n   */\n  addDeletedAnnotationElement(editor) {\n    this.#deletedAnnotationsElementIds.add(editor.annotationElementId);\n    editor.deleted = true;\n  }\n\n  /**\n   * Check if the annotation element with the given id has been deleted.\n   * @param {string} annotationElementId\n   * @returns {boolean}\n   */\n  isDeletedAnnotationElement(annotationElementId) {\n    return this.#deletedAnnotationsElementIds.has(annotationElementId);\n  }\n\n  /**\n   * The annotation element with the given id have been restored.\n   * @param {AnnotationEditor} editor\n   */\n  removeDeletedAnnotationElement(editor) {\n    this.#deletedAnnotationsElementIds.delete(editor.annotationElementId);\n    editor.deleted = false;\n  }\n\n  /**\n   * Add an editor to the layer it belongs to or add it to the global map.\n   * @param {AnnotationEditor} editor\n   */\n  #addEditorToLayer(editor) {\n    const layer = this.#allLayers.get(editor.pageIndex);\n    if (layer) {\n      layer.addOrRebuild(editor);\n    } else {\n      this.addEditor(editor);\n    }\n  }\n\n  /**\n   * Set the given editor as the active one.\n   * @param {AnnotationEditor} editor\n   */\n  setActiveEditor(editor) {\n    if (this.#activeEditor === editor) {\n      return;\n    }\n\n    this.#activeEditor = editor;\n    if (editor) {\n      this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    }\n  }\n\n  /**\n   * Add or remove an editor the current selection.\n   * @param {AnnotationEditor} editor\n   */\n  toggleSelected(editor) {\n    if (this.#selectedEditors.has(editor)) {\n      this.#selectedEditors.delete(editor);\n      editor.unselect();\n      this.#dispatchUpdateStates({\n        hasSelectedEditor: this.hasSelection,\n      });\n      return;\n    }\n    this.#selectedEditors.add(editor);\n    editor.select();\n    this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: true,\n    });\n  }\n\n  /**\n   * Set the last selected editor.\n   * @param {AnnotationEditor} editor\n   */\n  setSelected(editor) {\n    for (const ed of this.#selectedEditors) {\n      if (ed !== editor) {\n        ed.unselect();\n      }\n    }\n    this.#selectedEditors.clear();\n\n    this.#selectedEditors.add(editor);\n    editor.select();\n    this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: true,\n    });\n  }\n\n  /**\n   * Check if the editor is selected.\n   * @param {AnnotationEditor} editor\n   */\n  isSelected(editor) {\n    return this.#selectedEditors.has(editor);\n  }\n\n  /**\n   * Unselect an editor.\n   * @param {AnnotationEditor} editor\n   */\n  unselect(editor) {\n    editor.unselect();\n    this.#selectedEditors.delete(editor);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: this.hasSelection,\n    });\n  }\n\n  get hasSelection() {\n    return this.#selectedEditors.size !== 0;\n  }\n\n  /**\n   * Undo the last command.\n   */\n  undo() {\n    this.#commandManager.undo();\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n      hasSomethingToRedo: true,\n      isEmpty: this.#isEmpty(),\n    });\n  }\n\n  /**\n   * Redo the last undoed command.\n   */\n  redo() {\n    this.#commandManager.redo();\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: true,\n      hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n      isEmpty: this.#isEmpty(),\n    });\n  }\n\n  /**\n   * Add a command to execute (cmd) and another one to undo it.\n   * @param {Object} params\n   */\n  addCommands(params) {\n    this.#commandManager.add(params);\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: true,\n      hasSomethingToRedo: false,\n      isEmpty: this.#isEmpty(),\n    });\n  }\n\n  #isEmpty() {\n    if (this.#allEditors.size === 0) {\n      return true;\n    }\n\n    if (this.#allEditors.size === 1) {\n      for (const editor of this.#allEditors.values()) {\n        return editor.isEmpty();\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Delete the current editor or all.\n   */\n  delete() {\n    this.commitOrRemove();\n    if (!this.hasSelection) {\n      return;\n    }\n\n    const editors = [...this.#selectedEditors];\n    const cmd = () => {\n      for (const editor of editors) {\n        editor.remove();\n      }\n    };\n    const undo = () => {\n      for (const editor of editors) {\n        this.#addEditorToLayer(editor);\n      }\n    };\n\n    this.addCommands({ cmd, undo, mustExec: true });\n  }\n\n  commitOrRemove() {\n    // An editor is being edited so just commit it.\n    this.#activeEditor?.commitOrRemove();\n  }\n\n  hasSomethingToControl() {\n    return this.#activeEditor || this.hasSelection;\n  }\n\n  /**\n   * Select the editors.\n   * @param {Array<AnnotationEditor>} editors\n   */\n  #selectEditors(editors) {\n    this.#selectedEditors.clear();\n    for (const editor of editors) {\n      if (editor.isEmpty()) {\n        continue;\n      }\n      this.#selectedEditors.add(editor);\n      editor.select();\n    }\n    this.#dispatchUpdateStates({ hasSelectedEditor: true });\n  }\n\n  /**\n   * Select all the editors.\n   */\n  selectAll() {\n    for (const editor of this.#selectedEditors) {\n      editor.commit();\n    }\n    this.#selectEditors(this.#allEditors.values());\n  }\n\n  /**\n   * Unselect all the selected editors.\n   */\n  unselectAll() {\n    if (this.#activeEditor) {\n      // An editor is being edited so just commit it.\n      this.#activeEditor.commitOrRemove();\n      return;\n    }\n\n    if (!this.hasSelection) {\n      return;\n    }\n    for (const editor of this.#selectedEditors) {\n      editor.unselect();\n    }\n    this.#selectedEditors.clear();\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: false,\n    });\n  }\n\n  translateSelectedEditors(x, y, noCommit = false) {\n    if (!noCommit) {\n      this.commitOrRemove();\n    }\n    if (!this.hasSelection) {\n      return;\n    }\n\n    this.#translation[0] += x;\n    this.#translation[1] += y;\n    const [totalX, totalY] = this.#translation;\n    const editors = [...this.#selectedEditors];\n\n    // We don't want to have an undo/redo for each translation so we wait a bit\n    // before adding the command to the command manager.\n    const TIME_TO_WAIT = 1000;\n\n    if (this.#translationTimeoutId) {\n      clearTimeout(this.#translationTimeoutId);\n    }\n\n    this.#translationTimeoutId = setTimeout(() => {\n      this.#translationTimeoutId = null;\n      this.#translation[0] = this.#translation[1] = 0;\n\n      this.addCommands({\n        cmd: () => {\n          for (const editor of editors) {\n            if (this.#allEditors.has(editor.id)) {\n              editor.translateInPage(totalX, totalY);\n            }\n          }\n        },\n        undo: () => {\n          for (const editor of editors) {\n            if (this.#allEditors.has(editor.id)) {\n              editor.translateInPage(-totalX, -totalY);\n            }\n          }\n        },\n        mustExec: false,\n      });\n    }, TIME_TO_WAIT);\n\n    for (const editor of editors) {\n      editor.translateInPage(x, y);\n    }\n  }\n\n  /**\n   * Set up the drag session for moving the selected editors.\n   */\n  setUpDragSession() {\n    // Note: don't use any references to the editor's parent which can be null\n    // if the editor belongs to a destroyed page.\n    if (!this.hasSelection) {\n      return;\n    }\n    // Avoid to have spurious text selection in the text layer when dragging.\n    this.disableUserSelect(true);\n    this.#draggingEditors = new Map();\n    for (const editor of this.#selectedEditors) {\n      this.#draggingEditors.set(editor, {\n        savedX: editor.x,\n        savedY: editor.y,\n        savedPageIndex: editor.pageIndex,\n        newX: 0,\n        newY: 0,\n        newPageIndex: -1,\n      });\n    }\n  }\n\n  /**\n   * Ends the drag session.\n   * @returns {boolean} true if at least one editor has been moved.\n   */\n  endDragSession() {\n    if (!this.#draggingEditors) {\n      return false;\n    }\n    this.disableUserSelect(false);\n    const map = this.#draggingEditors;\n    this.#draggingEditors = null;\n    let mustBeAddedInUndoStack = false;\n\n    for (const [{ x, y, pageIndex }, value] of map) {\n      value.newX = x;\n      value.newY = y;\n      value.newPageIndex = pageIndex;\n      mustBeAddedInUndoStack ||=\n        x !== value.savedX ||\n        y !== value.savedY ||\n        pageIndex !== value.savedPageIndex;\n    }\n\n    if (!mustBeAddedInUndoStack) {\n      return false;\n    }\n\n    const move = (editor, x, y, pageIndex) => {\n      if (this.#allEditors.has(editor.id)) {\n        // The editor can be undone/redone on a page which is not visible (and\n        // which potentially has no annotation editor layer), hence we need to\n        // use the pageIndex instead of the parent.\n        const parent = this.#allLayers.get(pageIndex);\n        if (parent) {\n          editor._setParentAndPosition(parent, x, y);\n        } else {\n          editor.pageIndex = pageIndex;\n          editor.x = x;\n          editor.y = y;\n        }\n      }\n    };\n\n    this.addCommands({\n      cmd: () => {\n        for (const [editor, { newX, newY, newPageIndex }] of map) {\n          move(editor, newX, newY, newPageIndex);\n        }\n      },\n      undo: () => {\n        for (const [editor, { savedX, savedY, savedPageIndex }] of map) {\n          move(editor, savedX, savedY, savedPageIndex);\n        }\n      },\n      mustExec: true,\n    });\n\n    return true;\n  }\n\n  /**\n   * Drag the set of selected editors.\n   * @param {number} tx\n   * @param {number} ty\n   */\n  dragSelectedEditors(tx, ty) {\n    if (!this.#draggingEditors) {\n      return;\n    }\n    for (const editor of this.#draggingEditors.keys()) {\n      editor.drag(tx, ty);\n    }\n  }\n\n  /**\n   * Rebuild the editor (usually on undo/redo actions) on a potentially\n   * non-rendered page.\n   * @param {AnnotationEditor} editor\n   */\n  rebuild(editor) {\n    if (editor.parent === null) {\n      const parent = this.getLayer(editor.pageIndex);\n      if (parent) {\n        parent.changeParent(editor);\n        parent.addOrRebuild(editor);\n      } else {\n        this.addEditor(editor);\n        this.addToAnnotationStorage(editor);\n        editor.rebuild();\n      }\n    } else {\n      editor.parent.addOrRebuild(editor);\n    }\n  }\n\n  /**\n   * Is the current editor the one passed as argument?\n   * @param {AnnotationEditor} editor\n   * @returns\n   */\n  isActive(editor) {\n    return this.#activeEditor === editor;\n  }\n\n  /**\n   * Get the current active editor.\n   * @returns {AnnotationEditor|null}\n   */\n  getActive() {\n    return this.#activeEditor;\n  }\n\n  /**\n   * Get the current editor mode.\n   * @returns {number}\n   */\n  getMode() {\n    return this.#mode;\n  }\n\n  get imageManager() {\n    return shadow(this, \"imageManager\", new ImageManager());\n  }\n}\n\nexport {\n  AnnotationEditorUIManager,\n  bindEvents,\n  ColorManager,\n  CommandManager,\n  KeyboardManager,\n  opacityToHex,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseFilterFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n} from \"./base_factory.js\";\nimport {\n  BaseException,\n  FeatureTest,\n  shadow,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass PixelsPerInch {\n  static CSS = 96.0;\n\n  static PDF = 72.0;\n\n  static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n}\n\n/**\n * FilterFactory aims to create some SVG filters we can use when drawing an\n * image (or whatever) on a canvas.\n * Filters aren't applied with ctx.putImageData because it just overwrites the\n * underlying pixels.\n * With these filters, it's possible for example to apply some transfer maps on\n * an image without the need to apply them on the pixel arrays: the renderer\n * does the magic for us.\n */\nclass DOMFilterFactory extends BaseFilterFactory {\n  #_cache;\n\n  #_defs;\n\n  #docId;\n\n  #document;\n\n  #hcmFilter;\n\n  #hcmKey;\n\n  #hcmUrl;\n\n  #hcmHighlightFilter;\n\n  #hcmHighlightKey;\n\n  #hcmHighlightUrl;\n\n  #id = 0;\n\n  constructor({ docId, ownerDocument = globalThis.document } = {}) {\n    super();\n    this.#docId = docId;\n    this.#document = ownerDocument;\n  }\n\n  get #cache() {\n    return (this.#_cache ||= new Map());\n  }\n\n  get #defs() {\n    if (!this.#_defs) {\n      const div = this.#document.createElement(\"div\");\n      const { style } = div;\n      style.visibility = \"hidden\";\n      style.contain = \"strict\";\n      style.width = style.height = 0;\n      style.position = \"absolute\";\n      style.top = style.left = 0;\n      style.zIndex = -1;\n\n      const svg = this.#document.createElementNS(SVG_NS, \"svg\");\n      svg.setAttribute(\"width\", 0);\n      svg.setAttribute(\"height\", 0);\n      this.#_defs = this.#document.createElementNS(SVG_NS, \"defs\");\n      div.append(svg);\n      svg.append(this.#_defs);\n      this.#document.body.append(div);\n    }\n    return this.#_defs;\n  }\n\n  addFilter(maps) {\n    if (!maps) {\n      return \"none\";\n    }\n\n    // When a page is zoomed the page is re-drawn but the maps are likely\n    // the same.\n    let value = this.#cache.get(maps);\n    if (value) {\n      return value;\n    }\n\n    let tableR, tableG, tableB, key;\n    if (maps.length === 1) {\n      const mapR = maps[0];\n      const buffer = new Array(256);\n      for (let i = 0; i < 256; i++) {\n        buffer[i] = mapR[i] / 255;\n      }\n      key = tableR = tableG = tableB = buffer.join(\",\");\n    } else {\n      const [mapR, mapG, mapB] = maps;\n      const bufferR = new Array(256);\n      const bufferG = new Array(256);\n      const bufferB = new Array(256);\n      for (let i = 0; i < 256; i++) {\n        bufferR[i] = mapR[i] / 255;\n        bufferG[i] = mapG[i] / 255;\n        bufferB[i] = mapB[i] / 255;\n      }\n      tableR = bufferR.join(\",\");\n      tableG = bufferG.join(\",\");\n      tableB = bufferB.join(\",\");\n      key = `${tableR}${tableG}${tableB}`;\n    }\n\n    value = this.#cache.get(key);\n    if (value) {\n      this.#cache.set(maps, value);\n      return value;\n    }\n\n    // We create a SVG filter: feComponentTransferElement\n    //  https://www.w3.org/TR/SVG11/filters.html#feComponentTransferElement\n\n    const id = `g_${this.#docId}_transfer_map_${this.#id++}`;\n    const url = `url(#${id})`;\n    this.#cache.set(maps, url);\n    this.#cache.set(key, url);\n\n    const filter = this.#createFilter(id);\n    this.#addTransferMapConversion(tableR, tableG, tableB, filter);\n\n    return url;\n  }\n\n  addHCMFilter(fgColor, bgColor) {\n    const key = `${fgColor}-${bgColor}`;\n    if (this.#hcmKey === key) {\n      return this.#hcmUrl;\n    }\n\n    this.#hcmKey = key;\n    this.#hcmUrl = \"none\";\n    this.#hcmFilter?.remove();\n\n    if (!fgColor || !bgColor) {\n      return this.#hcmUrl;\n    }\n\n    const fgRGB = this.#getRGB(fgColor);\n    fgColor = Util.makeHexColor(...fgRGB);\n    const bgRGB = this.#getRGB(bgColor);\n    bgColor = Util.makeHexColor(...bgRGB);\n    this.#defs.style.color = \"\";\n\n    if (\n      (fgColor === \"#000000\" && bgColor === \"#ffffff\") ||\n      fgColor === bgColor\n    ) {\n      return this.#hcmUrl;\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_Colors_and_Luminance\n    //\n    // Relative luminance:\n    // https://www.w3.org/TR/WCAG20/#relativeluminancedef\n    //\n    // We compute the rounded luminance of the default background color.\n    // Then for every color in the pdf, if its rounded luminance is the\n    // same as the background one then it's replaced by the new\n    // background color else by the foreground one.\n    const map = new Array(256);\n    for (let i = 0; i <= 255; i++) {\n      const x = i / 255;\n      map[i] = x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;\n    }\n    const table = map.join(\",\");\n\n    const id = `g_${this.#docId}_hcm_filter`;\n    const filter = (this.#hcmHighlightFilter = this.#createFilter(id));\n    this.#addTransferMapConversion(table, table, table, filter);\n    this.#addGrayConversion(filter);\n\n    const getSteps = (c, n) => {\n      const start = fgRGB[c] / 255;\n      const end = bgRGB[c] / 255;\n      const arr = new Array(n + 1);\n      for (let i = 0; i <= n; i++) {\n        arr[i] = start + (i / n) * (end - start);\n      }\n      return arr.join(\",\");\n    };\n    this.#addTransferMapConversion(\n      getSteps(0, 5),\n      getSteps(1, 5),\n      getSteps(2, 5),\n      filter\n    );\n\n    this.#hcmUrl = `url(#${id})`;\n    return this.#hcmUrl;\n  }\n\n  addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n    const key = `${fgColor}-${bgColor}-${newFgColor}-${newBgColor}`;\n    if (this.#hcmHighlightKey === key) {\n      return this.#hcmHighlightUrl;\n    }\n\n    this.#hcmHighlightKey = key;\n    this.#hcmHighlightUrl = \"none\";\n    this.#hcmHighlightFilter?.remove();\n\n    if (!fgColor || !bgColor) {\n      return this.#hcmHighlightUrl;\n    }\n\n    const [fgRGB, bgRGB] = [fgColor, bgColor].map(this.#getRGB.bind(this));\n    let fgGray = Math.round(\n      0.2126 * fgRGB[0] + 0.7152 * fgRGB[1] + 0.0722 * fgRGB[2]\n    );\n    let bgGray = Math.round(\n      0.2126 * bgRGB[0] + 0.7152 * bgRGB[1] + 0.0722 * bgRGB[2]\n    );\n    let [newFgRGB, newBgRGB] = [newFgColor, newBgColor].map(\n      this.#getRGB.bind(this)\n    );\n    if (bgGray < fgGray) {\n      [fgGray, bgGray, newFgRGB, newBgRGB] = [\n        bgGray,\n        fgGray,\n        newBgRGB,\n        newFgRGB,\n      ];\n    }\n    this.#defs.style.color = \"\";\n\n    // Now we can create the filters to highlight some canvas parts.\n    // The colors in the pdf will almost be Canvas and CanvasText, hence we\n    // want to filter them to finally get Highlight and HighlightText.\n    // Since we're in HCM the background color and the foreground color should\n    // be really different when converted to grayscale (if they're not then it\n    // means that we've a poor contrast). Once the canvas colors are converted\n    // to grayscale we can easily map them on their new colors.\n    // The grayscale step is important because if we've something like:\n    //   fgColor = #FF....\n    //   bgColor = #FF....\n    //   then we are enable to map the red component on the new red components\n    //   which can be different.\n\n    const getSteps = (fg, bg, n) => {\n      const arr = new Array(256);\n      const step = (bgGray - fgGray) / n;\n      const newStart = fg / 255;\n      const newStep = (bg - fg) / (255 * n);\n      let prev = 0;\n      for (let i = 0; i <= n; i++) {\n        const k = Math.round(fgGray + i * step);\n        const value = newStart + i * newStep;\n        for (let j = prev; j <= k; j++) {\n          arr[j] = value;\n        }\n        prev = k + 1;\n      }\n      for (let i = prev; i < 256; i++) {\n        arr[i] = arr[prev - 1];\n      }\n      return arr.join(\",\");\n    };\n\n    const id = `g_${this.#docId}_hcm_highlight_filter`;\n    const filter = (this.#hcmHighlightFilter = this.#createFilter(id));\n\n    this.#addGrayConversion(filter);\n    this.#addTransferMapConversion(\n      getSteps(newFgRGB[0], newBgRGB[0], 5),\n      getSteps(newFgRGB[1], newBgRGB[1], 5),\n      getSteps(newFgRGB[2], newBgRGB[2], 5),\n      filter\n    );\n\n    this.#hcmHighlightUrl = `url(#${id})`;\n    return this.#hcmHighlightUrl;\n  }\n\n  destroy(keepHCM = false) {\n    if (keepHCM && (this.#hcmUrl || this.#hcmHighlightUrl)) {\n      return;\n    }\n    if (this.#_defs) {\n      this.#_defs.parentNode.parentNode.remove();\n      this.#_defs = null;\n    }\n    if (this.#_cache) {\n      this.#_cache.clear();\n      this.#_cache = null;\n    }\n    this.#id = 0;\n  }\n\n  #addGrayConversion(filter) {\n    const feColorMatrix = this.#document.createElementNS(\n      SVG_NS,\n      \"feColorMatrix\"\n    );\n    feColorMatrix.setAttribute(\"type\", \"matrix\");\n    feColorMatrix.setAttribute(\n      \"values\",\n      \"0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0\"\n    );\n    filter.append(feColorMatrix);\n  }\n\n  #createFilter(id) {\n    const filter = this.#document.createElementNS(SVG_NS, \"filter\");\n    filter.setAttribute(\"color-interpolation-filters\", \"sRGB\");\n    filter.setAttribute(\"id\", id);\n    this.#defs.append(filter);\n\n    return filter;\n  }\n\n  #appendFeFunc(feComponentTransfer, func, table) {\n    const feFunc = this.#document.createElementNS(SVG_NS, func);\n    feFunc.setAttribute(\"type\", \"discrete\");\n    feFunc.setAttribute(\"tableValues\", table);\n    feComponentTransfer.append(feFunc);\n  }\n\n  #addTransferMapConversion(rTable, gTable, bTable, filter) {\n    const feComponentTransfer = this.#document.createElementNS(\n      SVG_NS,\n      \"feComponentTransfer\"\n    );\n    filter.append(feComponentTransfer);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncR\", rTable);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncG\", gTable);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncB\", bTable);\n  }\n\n  #getRGB(color) {\n    this.#defs.style.color = color;\n    return getRGB(getComputedStyle(this.#defs).getPropertyValue(\"color\"));\n  }\n}\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  /**\n   * @ignore\n   */\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\nasync function fetchData(url, asTypedArray = false) {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    isValidFetchUrl(url, document.baseURI)\n  ) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray\n      ? new Uint8Array(await response.arrayBuffer())\n      : stringToBytes(await response.text());\n  }\n\n  // The Fetch API is not supported.\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, /* asTypedArray = */ true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = stringToBytes(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url, compressionType) {\n    return fetchData(url, /* asTypedArray = */ this.isCompressed).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url) {\n    return fetchData(url, /* asTypedArray = */ true);\n  }\n}\n\nclass DOMSVGFactory extends BaseSVGFactory {\n  /**\n   * @ignore\n   */\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = (viewBox[3] - viewBox[1]) * scale;\n      height = (viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = (viewBox[2] - viewBox[0]) * scale;\n      height = (viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * The original, un-scaled, viewport dimensions.\n   * @type {Object}\n   */\n  get rawDims() {\n    const { viewBox } = this;\n    return shadow(this, \"rawDims\", {\n      pageWidth: viewBox[2] - viewBox[0],\n      pageHeight: viewBox[3] - viewBox[1],\n      pageX: viewBox[0],\n      pageY: viewBox[1],\n    });\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Array} Array containing `x`- and `y`-coordinates of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Array} Array containing `x`- and `y`-coordinates of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, extraDelay = 0) {\n    super(msg, \"RenderingCancelledException\");\n    this.extraDelay = extraDelay;\n  }\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @param {boolean} [onlyStripPath]\n * @returns {string}\n */\nfunction getFilenameFromUrl(url, onlyStripPath = false) {\n  if (!onlyStripPath) {\n    [url] = url.split(/[#?]/, 1);\n  }\n  return url.substring(url.lastIndexOf(\"/\") + 1);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  started = Object.create(null);\n\n  times = [];\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const { name } of this.times) {\n      longest = Math.max(name.length, longest);\n    }\n    for (const { name, start, end } of this.times) {\n      outBuf.push(`${name.padEnd(longest)} ${end - start}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n    throw new Error(\"Not implemented: isValidFetchUrl\");\n  }\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * Event handler to suppress context menu.\n */\nfunction noContextMenu(e) {\n  e.preventDefault();\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).append(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || typeof input !== \"string\") {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    pdfDateStringRegex ||= new RegExp(\n      \"^D:\" + // Prefix (required)\n        \"(\\\\d{4})\" + // Year (required)\n        \"(\\\\d{2})?\" + // Month (optional)\n        \"(\\\\d{2})?\" + // Day (optional)\n        \"(\\\\d{2})?\" + // Hour (optional)\n        \"(\\\\d{2})?\" + // Minute (optional)\n        \"(\\\\d{2})?\" + // Second (optional)\n        \"([Z|+|-])?\" + // Universal time relation (optional)\n        \"(\\\\d{2})?\" + // Offset hour (optional)\n        \"'?\" + // Splitting apostrophe (optional)\n        \"(\\\\d{2})?\" + // Offset minute (optional)\n        \"'?\" // Trailing apostrophe (optional)\n    );\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\n/**\n * NOTE: This is (mostly) intended to support printing of XFA forms.\n */\nfunction getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n  const { width, height } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation,\n  });\n}\n\nfunction getRGB(color) {\n  if (color.startsWith(\"#\")) {\n    const colorRGB = parseInt(color.slice(1), 16);\n    return [\n      (colorRGB & 0xff0000) >> 16,\n      (colorRGB & 0x00ff00) >> 8,\n      colorRGB & 0x0000ff,\n    ];\n  }\n\n  if (color.startsWith(\"rgb(\")) {\n    // getComputedStyle(...).color returns a `rgb(R, G, B)` color.\n    return color\n      .slice(/* \"rgb(\".length */ 4, -1) // Strip out \"rgb(\" and \")\".\n      .split(\",\")\n      .map(x => parseInt(x));\n  }\n\n  if (color.startsWith(\"rgba(\")) {\n    return color\n      .slice(/* \"rgba(\".length */ 5, -1) // Strip out \"rgba(\" and \")\".\n      .split(\",\")\n      .map(x => parseInt(x))\n      .slice(0, 3);\n  }\n\n  warn(`Not a valid color format: \"${color}\"`);\n  return [0, 0, 0];\n}\n\nfunction getColorValues(colors) {\n  const span = document.createElement(\"span\");\n  span.style.visibility = \"hidden\";\n  document.body.append(span);\n  for (const name of colors.keys()) {\n    span.style.color = name;\n    const computedColor = window.getComputedStyle(span).color;\n    colors.set(name, getRGB(computedColor));\n  }\n  span.remove();\n}\n\nfunction getCurrentTransform(ctx) {\n  const { a, b, c, d, e, f } = ctx.getTransform();\n  return [a, b, c, d, e, f];\n}\n\nfunction getCurrentTransformInverse(ctx) {\n  const { a, b, c, d, e, f } = ctx.getTransform().invertSelf();\n  return [a, b, c, d, e, f];\n}\n\n/**\n * @param {HTMLDivElement} div\n * @param {PageViewport} viewport\n * @param {boolean} mustFlip\n * @param {boolean} mustRotate\n */\nfunction setLayerDimensions(\n  div,\n  viewport,\n  mustFlip = false,\n  mustRotate = true\n) {\n  if (viewport instanceof PageViewport) {\n    const { pageWidth, pageHeight } = viewport.rawDims;\n    const { style } = div;\n    const useRound = FeatureTest.isCSSRoundSupported;\n\n    const w = `var(--scale-factor) * ${pageWidth}px`,\n      h = `var(--scale-factor) * ${pageHeight}px`;\n    const widthStr = useRound ? `round(${w}, 1px)` : `calc(${w})`,\n      heightStr = useRound ? `round(${h}, 1px)` : `calc(${h})`;\n\n    if (!mustFlip || viewport.rotation % 180 === 0) {\n      style.width = widthStr;\n      style.height = heightStr;\n    } else {\n      style.width = heightStr;\n      style.height = widthStr;\n    }\n  }\n\n  if (mustRotate) {\n    div.setAttribute(\"data-main-rotation\", viewport.rotation);\n  }\n}\n\nexport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMFilterFactory,\n  DOMStandardFontDataFactory,\n  DOMSVGFactory,\n  getColorValues,\n  getCurrentTransform,\n  getCurrentTransformInverse,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getRGB,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  isValidFetchUrl,\n  loadScript,\n  noContextMenu,\n  PageViewport,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  setLayerDimensions,\n  StatTimer,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CMapCompressionType, unreachable } from \"../shared/util.js\";\n\nclass BaseFilterFactory {\n  constructor() {\n    if (this.constructor === BaseFilterFactory) {\n      unreachable(\"Cannot initialize BaseFilterFactory.\");\n    }\n  }\n\n  addFilter(maps) {\n    return \"none\";\n  }\n\n  addHCMFilter(fgColor, bgColor) {\n    return \"none\";\n  }\n\n  addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n    return \"none\";\n  }\n\n  destroy(keepHCM = false) {}\n}\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\"),\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n  /**\n   * @ignore\n   */\n  _createCanvas(width, height) {\n    unreachable(\"Abstract method `_createCanvas` called.\");\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = true }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseStandardFontDataFactory {\n  constructor({ baseUrl = null }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({ filename }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The standard font \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"standardFontDataUrl\" API parameter is provided.'\n      );\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  _fetchData(url) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      unreachable(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n\n  create(width, height, skipDimensions = false) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n\n    if (!skipDimensions) {\n      svg.setAttribute(\"width\", `${width}px`);\n      svg.setAttribute(\"height\", `${height}px`);\n    }\n\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n    return svg;\n  }\n\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n\n  /**\n   * @ignore\n   */\n  _createSVG(type) {\n    unreachable(\"Abstract method `_createSVG` called.\");\n  }\n}\n\nexport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseFilterFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n};\n","/* Copyright 2014 Opera Software ASA\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n * Based on https://code.google.com/p/smhasher/wiki/MurmurHash3.\n * Hashes roughly 100 KB per millisecond on i7 3.4 GHz.\n */\n\nimport { isArrayBuffer } from \"./util.js\";\n\nconst SEED = 0xc3d2e1f0;\n// Workaround for missing math precision in JS.\nconst MASK_HIGH = 0xffff0000;\nconst MASK_LOW = 0xffff;\n\nclass MurmurHash3_64 {\n  constructor(seed) {\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n\n  update(input) {\n    let data, length;\n    if (typeof input === \"string\") {\n      data = new Uint8Array(input.length * 2);\n      length = 0;\n      for (let i = 0, ii = input.length; i < ii; i++) {\n        const code = input.charCodeAt(i);\n        if (code <= 0xff) {\n          data[length++] = code;\n        } else {\n          data[length++] = code >>> 8;\n          data[length++] = code & 0xff;\n        }\n      }\n    } else if (isArrayBuffer(input)) {\n      data = input.slice();\n      length = data.byteLength;\n    } else {\n      throw new Error(\n        \"Wrong data format in MurmurHash3_64_update. \" +\n          \"Input must be a string or array.\"\n      );\n    }\n\n    const blockCounts = length >> 2;\n    const tailLength = length - blockCounts * 4;\n    // We don't care about endianness here.\n    const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n    let k1 = 0,\n      k2 = 0;\n    let h1 = this.h1,\n      h2 = this.h2;\n    const C1 = 0xcc9e2d51,\n      C2 = 0x1b873593;\n    const C1_LOW = C1 & MASK_LOW,\n      C2_LOW = C2 & MASK_LOW;\n\n    for (let i = 0; i < blockCounts; i++) {\n      if (i & 1) {\n        k1 = dataUint32[i];\n        k1 = ((k1 * C1) & MASK_HIGH) | ((k1 * C1_LOW) & MASK_LOW);\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((k1 * C2) & MASK_HIGH) | ((k1 * C2_LOW) & MASK_LOW);\n        h1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n        h1 = h1 * 5 + 0xe6546b64;\n      } else {\n        k2 = dataUint32[i];\n        k2 = ((k2 * C1) & MASK_HIGH) | ((k2 * C1_LOW) & MASK_LOW);\n        k2 = (k2 << 15) | (k2 >>> 17);\n        k2 = ((k2 * C2) & MASK_HIGH) | ((k2 * C2_LOW) & MASK_LOW);\n        h2 ^= k2;\n        h2 = (h2 << 13) | (h2 >>> 19);\n        h2 = h2 * 5 + 0xe6546b64;\n      }\n    }\n\n    k1 = 0;\n\n    switch (tailLength) {\n      case 3:\n        k1 ^= data[blockCounts * 4 + 2] << 16;\n      /* falls through */\n      case 2:\n        k1 ^= data[blockCounts * 4 + 1] << 8;\n      /* falls through */\n      case 1:\n        k1 ^= data[blockCounts * 4];\n        /* falls through */\n\n        k1 = ((k1 * C1) & MASK_HIGH) | ((k1 * C1_LOW) & MASK_LOW);\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((k1 * C2) & MASK_HIGH) | ((k1 * C2_LOW) & MASK_LOW);\n        if (blockCounts & 1) {\n          h1 ^= k1;\n        } else {\n          h2 ^= k1;\n        }\n    }\n\n    this.h1 = h1;\n    this.h2 = h2;\n  }\n\n  hexdigest() {\n    let h1 = this.h1,\n      h2 = this.h2;\n\n    h1 ^= h2 >>> 1;\n    h1 = ((h1 * 0xed558ccd) & MASK_HIGH) | ((h1 * 0x8ccd) & MASK_LOW);\n    h2 =\n      ((h2 * 0xff51afd7) & MASK_HIGH) |\n      (((((h2 << 16) | (h1 >>> 16)) * 0xafd7ed55) & MASK_HIGH) >>> 16);\n    h1 ^= h2 >>> 1;\n    h1 = ((h1 * 0x1a85ec53) & MASK_HIGH) | ((h1 * 0xec53) & MASK_LOW);\n    h2 =\n      ((h2 * 0xc4ceb9fe) & MASK_HIGH) |\n      (((((h2 << 16) | (h1 >>> 16)) * 0xb9fe1a85) & MASK_HIGH) >>> 16);\n    h1 ^= h2 >>> 1;\n\n    return (\n      (h1 >>> 0).toString(16).padStart(8, \"0\") +\n      (h2 >>> 0).toString(16).padStart(8, \"0\")\n    );\n  }\n}\n\nexport { MurmurHash3_64 };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  FeatureTest,\n  isNodeJS,\n  shadow,\n  string32,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\n\nclass FontLoader {\n  #systemFonts = new Set();\n\n  constructor({\n    ownerDocument = globalThis.document,\n    styleElement = null, // For testing only.\n  }) {\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = new Set();\n    this.styleElement =\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")\n        ? styleElement\n        : null;\n\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n      this.loadingRequests = [];\n      this.loadTestFontId = 0;\n    }\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.add(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  removeNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.delete(nativeFontFace);\n    this._document.fonts.delete(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    if (!this.styleElement) {\n      this.styleElement = this._document.createElement(\"style\");\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .append(this.styleElement);\n    }\n    const styleSheet = this.styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.clear();\n    this.#systemFonts.clear();\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async loadSystemFont(info) {\n    if (!info || this.#systemFonts.has(info.loadedName)) {\n      return;\n    }\n    assert(\n      !this.disableFontFace,\n      \"loadSystemFont shouldn't be called when `disableFontFace` is set.\"\n    );\n\n    if (this.isFontLoadingAPISupported) {\n      const { loadedName, src, style } = info;\n      const fontFace = new FontFace(loadedName, src, style);\n      this.addNativeFontFace(fontFace);\n      try {\n        await fontFace.load();\n        this.#systemFonts.add(loadedName);\n      } catch {\n        warn(\n          `Cannot load system font: ${info.baseFontName}, installing it could help to improve PDF rendering.`\n        );\n\n        this.removeNativeFontFace(fontFace);\n      }\n      return;\n    }\n\n    unreachable(\n      \"Not implemented: loadSystemFont without the Font Loading API.\"\n    );\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || (font.missingFile && !font.systemFontInfo)) {\n      return;\n    }\n    font.attached = true;\n\n    if (font.systemFontInfo) {\n      await this.loadSystemFont(font.systemFontInfo);\n      return;\n    }\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n        throw new Error(\"Not implemented: async font loading\");\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent(font, request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      return shadow(\n        this,\n        \"isFontLoadingAPISupported\",\n        hasFonts && !this.styleElement\n      );\n    }\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  get isSyncFontLoadingSupported() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n\n    let supported = false;\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n      if (isNodeJS) {\n        // Node.js - we can pretend that sync font loading is supported.\n        supported = true;\n      } else if (\n        typeof navigator !== \"undefined\" &&\n        // User agent string sniffing is bad, but there is no reliable way to\n        // tell if the font is fully loaded and ready to be used with canvas.\n        /Mozilla\\/5.0.*?rv:\\d+.*? Gecko/.test(navigator.userAgent)\n      ) {\n        // Firefox, from version 14, supports synchronous font loading.\n        supported = true;\n      }\n    }\n    return shadow(this, \"isSyncFontLoadingSupported\", supported);\n  }\n\n  _queueLoadingCallback(callback) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: _queueLoadingCallback\");\n    }\n\n    function completeRequest() {\n      assert(!request.done, \"completeRequest() cannot be called twice.\");\n      request.done = true;\n\n      // Sending all completed requests in order of how they were queued.\n      while (loadingRequests.length > 0 && loadingRequests[0].done) {\n        const otherRequest = loadingRequests.shift();\n        setTimeout(otherRequest.callback, 0);\n      }\n    }\n\n    const { loadingRequests } = this;\n    const request = {\n      done: false,\n      complete: completeRequest,\n      callback,\n    };\n    loadingRequests.push(request);\n    return request;\n  }\n\n  get _loadTestFont() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: _loadTestFont\");\n    }\n\n    // This is a CFF font with 1 glyph for '.' that fills its entire width\n    // and height.\n    const testFont = atob(\n      \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n        \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n        \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n        \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n        \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n        \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n        \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n        \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n        \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n        \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n        \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n        \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n        \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n        \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n        \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n        \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n        \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n    );\n    return shadow(this, \"_loadTestFont\", testFont);\n  }\n\n  _prepareFontLoadEvent(font, request) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: _prepareFontLoadEvent\");\n    }\n\n    /** Hack begin */\n    // There's currently no event when a font has finished downloading so the\n    // following code is a dirty hack to 'guess' when a font is ready.\n    // It's assumed fonts are loaded in order, so add a known test font after\n    // the desired fonts and then test for the loading of that test font.\n\n    function int32(data, offset) {\n      return (\n        (data.charCodeAt(offset) << 24) |\n        (data.charCodeAt(offset + 1) << 16) |\n        (data.charCodeAt(offset + 2) << 8) |\n        (data.charCodeAt(offset + 3) & 0xff)\n      );\n    }\n    function spliceString(s, offset, remove, insert) {\n      const chunk1 = s.substring(0, offset);\n      const chunk2 = s.substring(offset + remove);\n      return chunk1 + insert + chunk2;\n    }\n    let i, ii;\n\n    // The temporary canvas is used to determine if fonts are loaded.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext(\"2d\");\n\n    let called = 0;\n    function isFontReady(name, callback) {\n      // With setTimeout clamping this gives the font ~100ms to load.\n      if (++called > 30) {\n        warn(\"Load test font never loaded.\");\n        callback();\n        return;\n      }\n      ctx.font = \"30px \" + name;\n      ctx.fillText(\".\", 0, 20);\n      const imageData = ctx.getImageData(0, 0, 1, 1);\n      if (imageData.data[3] > 0) {\n        callback();\n        return;\n      }\n      setTimeout(isFontReady.bind(null, name, callback));\n    }\n\n    const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n    // Chromium seems to cache fonts based on a hash of the actual font data,\n    // so the font must be modified for each load test else it will appear to\n    // be loaded already.\n    // TODO: This could maybe be made faster by avoiding the btoa of the full\n    // font by splitting it in chunks before hand and padding the font id.\n    let data = this._loadTestFont;\n    const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n    data = spliceString(\n      data,\n      COMMENT_OFFSET,\n      loadTestFontId.length,\n      loadTestFontId\n    );\n    // CFF checksum is important for IE, adjusting it\n    const CFF_CHECKSUM_OFFSET = 16;\n    const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n    let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n    for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n      checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n    }\n    if (i < loadTestFontId.length) {\n      // align to 4 bytes boundary\n      checksum = (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n    }\n    data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n    const url = `url(data:font/opentype;base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n    this.insertRule(rule);\n\n    const div = this._document.createElement(\"div\");\n    div.style.visibility = \"hidden\";\n    div.style.width = div.style.height = \"10px\";\n    div.style.position = \"absolute\";\n    div.style.top = div.style.left = \"0px\";\n\n    for (const name of [font.loadedName, loadTestFontId]) {\n      const span = this._document.createElement(\"span\");\n      span.textContent = \"Hi\";\n      span.style.fontFamily = name;\n      div.append(span);\n    }\n    this._document.body.append(div);\n\n    isFontReady(loadTestFontId, () => {\n      div.remove();\n      request.complete();\n    });\n    /** Hack end */\n  }\n}\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      inspectFont = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._inspectFont = inspectFont;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    this._inspectFont?.(this);\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    this._inspectFont?.(this, url);\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && FeatureTest.isEvalSupported) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        // eslint-disable-next-line prefer-spread\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseFilterFactory,\n  BaseStandardFontDataFactory,\n} from \"./base_factory.js\";\nimport { isNodeJS, warn } from \"../shared/util.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_utils.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nif (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"SKIP_BABEL\")) {\n  (function checkDOMMatrix() {\n    if (globalThis.DOMMatrix || !isNodeJS) {\n      return;\n    }\n    try {\n      globalThis.DOMMatrix = __non_webpack_require__(\"canvas\").DOMMatrix;\n    } catch (ex) {\n      warn(`Cannot polyfill \\`DOMMatrix\\`, rendering may be broken: \"${ex}\".`);\n    }\n  })();\n\n  (function checkPath2D() {\n    if (globalThis.Path2D || !isNodeJS) {\n      return;\n    }\n    try {\n      const { CanvasRenderingContext2D } = __non_webpack_require__(\"canvas\");\n      const { polyfillPath2D } = __non_webpack_require__(\"path2d-polyfill\");\n\n      globalThis.CanvasRenderingContext2D = CanvasRenderingContext2D;\n      polyfillPath2D(globalThis);\n    } catch (ex) {\n      warn(`Cannot polyfill \\`Path2D\\`, rendering may be broken: \"${ex}\".`);\n    }\n  })();\n}\n\nconst fetchData = function (url) {\n  return new Promise((resolve, reject) => {\n    const fs = __non_webpack_require__(\"fs\");\n    fs.readFile(url, (error, data) => {\n      if (error || !data) {\n        reject(new Error(error));\n        return;\n      }\n      resolve(new Uint8Array(data));\n    });\n  });\n};\n\nclass NodeFilterFactory extends BaseFilterFactory {}\n\nclass NodeCanvasFactory extends BaseCanvasFactory {\n  /**\n   * @ignore\n   */\n  _createCanvas(width, height) {\n    const Canvas = __non_webpack_require__(\"canvas\");\n    return Canvas.createCanvas(width, height);\n  }\n}\n\nclass NodeCMapReaderFactory extends BaseCMapReaderFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url, compressionType) {\n    return fetchData(url).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass NodeStandardFontDataFactory extends BaseStandardFontDataFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url) {\n    return fetchData(url);\n  }\n}\n\nexport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeFilterFactory,\n  NodeStandardFontDataFactory,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FeatureTest,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  isNodeJS,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  getCurrentTransform,\n  getCurrentTransformInverse,\n  PixelsPerInch,\n} from \"./display_utils.js\";\nimport {\n  getShadingPattern,\n  PathType,\n  TilingPattern,\n} from \"./pattern_helper.js\";\nimport { convertBlackAndWhiteToRGBA } from \"../shared/image_utils.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\n// Defines the time the `executeOperatorList`-method is going to be executing\n// before it stops and schedules a continue of execution.\nconst EXECUTION_TIME = 15; // ms\n// Defines the number of steps before checking the execution time.\nconst EXECUTION_STEPS = 10;\n\n// To disable Type3 compilation, set the value to `-1`.\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n/**\n * Overrides certain methods on a 2d ctx so that when they are called they\n * will also call the same method on the destCtx. The methods that are\n * overridden are all the transformation state modifiers, path creation, and\n * save/restore. We only forward these specific methods because they are the\n * only state modifiers that we cannot copy over when we switch contexts.\n *\n * To remove mirroring call `ctx._removeMirroring()`.\n *\n * @param {Object} ctx - The 2d canvas context that will duplicate its calls on\n *   the destCtx.\n * @param {Object} destCtx - The 2d canvas context that will receive the\n *   forwarded calls.\n */\nfunction mirrorContextOperations(ctx, destCtx) {\n  if (ctx._removeMirroring) {\n    throw new Error(\"Context is already forwarding operations.\");\n  }\n  ctx.__originalSave = ctx.save;\n  ctx.__originalRestore = ctx.restore;\n  ctx.__originalRotate = ctx.rotate;\n  ctx.__originalScale = ctx.scale;\n  ctx.__originalTranslate = ctx.translate;\n  ctx.__originalTransform = ctx.transform;\n  ctx.__originalSetTransform = ctx.setTransform;\n  ctx.__originalResetTransform = ctx.resetTransform;\n  ctx.__originalClip = ctx.clip;\n  ctx.__originalMoveTo = ctx.moveTo;\n  ctx.__originalLineTo = ctx.lineTo;\n  ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n  ctx.__originalRect = ctx.rect;\n  ctx.__originalClosePath = ctx.closePath;\n  ctx.__originalBeginPath = ctx.beginPath;\n\n  ctx._removeMirroring = () => {\n    ctx.save = ctx.__originalSave;\n    ctx.restore = ctx.__originalRestore;\n    ctx.rotate = ctx.__originalRotate;\n    ctx.scale = ctx.__originalScale;\n    ctx.translate = ctx.__originalTranslate;\n    ctx.transform = ctx.__originalTransform;\n    ctx.setTransform = ctx.__originalSetTransform;\n    ctx.resetTransform = ctx.__originalResetTransform;\n\n    ctx.clip = ctx.__originalClip;\n    ctx.moveTo = ctx.__originalMoveTo;\n    ctx.lineTo = ctx.__originalLineTo;\n    ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n    ctx.rect = ctx.__originalRect;\n    ctx.closePath = ctx.__originalClosePath;\n    ctx.beginPath = ctx.__originalBeginPath;\n    delete ctx._removeMirroring;\n  };\n\n  ctx.save = function ctxSave() {\n    destCtx.save();\n    this.__originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    destCtx.restore();\n    this.__originalRestore();\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    destCtx.translate(x, y);\n    this.__originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    destCtx.scale(x, y);\n    this.__originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    destCtx.transform(a, b, c, d, e, f);\n    this.__originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    destCtx.setTransform(a, b, c, d, e, f);\n    this.__originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    destCtx.resetTransform();\n    this.__originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    destCtx.rotate(angle);\n    this.__originalRotate(angle);\n  };\n\n  ctx.clip = function ctxRotate(rule) {\n    destCtx.clip(rule);\n    this.__originalClip(rule);\n  };\n\n  ctx.moveTo = function (x, y) {\n    destCtx.moveTo(x, y);\n    this.__originalMoveTo(x, y);\n  };\n\n  ctx.lineTo = function (x, y) {\n    destCtx.lineTo(x, y);\n    this.__originalLineTo(x, y);\n  };\n\n  ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n  };\n\n  ctx.rect = function (x, y, width, height) {\n    destCtx.rect(x, y, width, height);\n    this.__originalRect(x, y, width, height);\n  };\n\n  ctx.closePath = function () {\n    destCtx.closePath();\n    this.__originalClosePath();\n  };\n\n  ctx.beginPath = function () {\n    destCtx.beginPath();\n    this.__originalBeginPath();\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    return canvasEntry;\n  }\n\n  delete(id) {\n    delete this.cache[id];\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\nfunction drawImageAtIntegerCoords(\n  ctx,\n  srcImg,\n  srcX,\n  srcY,\n  srcW,\n  srcH,\n  destX,\n  destY,\n  destW,\n  destH\n) {\n  const [a, b, c, d, tx, ty] = getCurrentTransform(ctx);\n  if (b === 0 && c === 0) {\n    // top-left corner is at (X, Y) and\n    // bottom-right one is at (X + width, Y + height).\n\n    // If leftX is 4.321 then it's rounded to 4.\n    // If width is 10.432 then it's rounded to 11 because\n    // rightX = leftX + width = 14.753 which is rounded to 15\n    // so after rounding the total width is 11 (15 - 4).\n    // It's why we can't just floor/ceil uniformly, it just depends\n    // on the values we've.\n\n    const tlX = destX * a + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destY * d + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destX + destW) * a + tx;\n\n    // Some pdf contains images with 1x1 images so in case of 0-width after\n    // scaling we must fallback on 1 to be sure there is something.\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destY + destH) * d + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n\n    // We must apply a transformation in order to apply it on the image itself.\n    // For example if a == 1 && d == -1, it means that the image itself is\n    // mirrored w.r.t. the x-axis.\n    ctx.setTransform(Math.sign(a), 0, 0, Math.sign(d), rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rWidth, rHeight);\n    ctx.setTransform(a, b, c, d, tx, ty);\n\n    return [rWidth, rHeight];\n  }\n\n  if (a === 0 && d === 0) {\n    // This path is taken in issue9462.pdf (page 3).\n    const tlX = destY * c + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destX * b + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destY + destH) * c + tx;\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destX + destW) * b + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n\n    ctx.setTransform(0, Math.sign(b), Math.sign(c), 0, rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rHeight, rWidth);\n    ctx.setTransform(a, b, c, d, tx, ty);\n\n    return [rHeight, rWidth];\n  }\n\n  // Not a scale matrix so let the render handle the case without rounding.\n  ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n\n  const scaleX = Math.hypot(a, b);\n  const scaleY = Math.hypot(c, d);\n  return [scaleX * destW, scaleY * destH];\n}\n\nfunction compileType3Glyph(imgData) {\n  const { width, height } = imgData;\n  if (width > MAX_SIZE_TO_COMPILE || height > MAX_SIZE_TO_COMPILE) {\n    return null;\n  }\n\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width1 = width + 1;\n  let points = new Uint8Array(width1 * (height + 1));\n  let i, j, j0;\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7;\n  let data = new Uint8Array(lineSize * height),\n    pos = 0;\n  for (const elem of imgData.data) {\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const path = new Path2D();\n\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    path.moveTo(p % width1, i);\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n      path.lineTo(p % width1, (p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    --i;\n  }\n\n  // Immediately release the, potentially large, `Uint8Array`s after parsing.\n  data = null;\n  points = null;\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.fill(path);\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor(width, height) {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.transferMaps = \"none\";\n\n    this.startNewPathAndClipBox([0, 0, width, height]);\n  }\n\n  clone() {\n    const clone = Object.create(this);\n    clone.clipBox = this.clipBox.slice();\n    return clone;\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  updatePathMinMax(transform, x, y) {\n    [x, y] = Util.applyTransform([x, y], transform);\n    this.minX = Math.min(this.minX, x);\n    this.minY = Math.min(this.minY, y);\n    this.maxX = Math.max(this.maxX, x);\n    this.maxY = Math.max(this.maxY, y);\n  }\n\n  updateRectMinMax(transform, rect) {\n    const p1 = Util.applyTransform(rect, transform);\n    const p2 = Util.applyTransform(rect.slice(2), transform);\n    this.minX = Math.min(this.minX, p1[0], p2[0]);\n    this.minY = Math.min(this.minY, p1[1], p2[1]);\n    this.maxX = Math.max(this.maxX, p1[0], p2[0]);\n    this.maxY = Math.max(this.maxY, p1[1], p2[1]);\n  }\n\n  updateScalingPathMinMax(transform, minMax) {\n    Util.scaleMinMax(transform, minMax);\n    this.minX = Math.min(this.minX, minMax[0]);\n    this.maxX = Math.max(this.maxX, minMax[1]);\n    this.minY = Math.min(this.minY, minMax[2]);\n    this.maxY = Math.max(this.maxY, minMax[3]);\n  }\n\n  updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3, minMax) {\n    const box = Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n    if (minMax) {\n      minMax[0] = Math.min(minMax[0], box[0], box[2]);\n      minMax[1] = Math.max(minMax[1], box[0], box[2]);\n      minMax[2] = Math.min(minMax[2], box[1], box[3]);\n      minMax[3] = Math.max(minMax[3], box[1], box[3]);\n      return;\n    }\n    this.updateRectMinMax(transform, box);\n  }\n\n  getPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    const box = [this.minX, this.minY, this.maxX, this.maxY];\n    if (pathType === PathType.STROKE) {\n      if (!transform) {\n        unreachable(\"Stroke bounding box must include transform.\");\n      }\n      // Stroked paths can be outside of the path bounding box by 1/2 the line\n      // width.\n      const scale = Util.singularValueDecompose2dScale(transform);\n      const xStrokePad = (scale[0] * this.lineWidth) / 2;\n      const yStrokePad = (scale[1] * this.lineWidth) / 2;\n      box[0] -= xStrokePad;\n      box[1] -= yStrokePad;\n      box[2] += xStrokePad;\n      box[3] += yStrokePad;\n    }\n    return box;\n  }\n\n  updateClipFromPath() {\n    const intersect = Util.intersect(this.clipBox, this.getPathBoundingBox());\n    this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n  }\n\n  isEmptyClip() {\n    return this.minX === Infinity;\n  }\n\n  startNewPathAndClipBox(box) {\n    this.clipBox = box;\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = 0;\n    this.maxY = 0;\n  }\n\n  getClippedPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    return Util.intersect(\n      this.clipBox,\n      this.getPathBoundingBox(pathType, transform)\n    );\n  }\n}\n\nfunction putBinaryImageData(ctx, imgData) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n\n  // Put the image data to the canvas in chunks, rather than putting the\n  // whole image at once.  This saves JS memory, because the ImageData object\n  // is smaller. It also possibly saves C++ memory within the implementation\n  // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n  // the data passed to putImageData()). |n| shouldn't be too small, however,\n  // because too many putImageData() calls will slow things down.\n  //\n  // Note: as written, if the last chunk is partial, the putImageData() call\n  // will (conceptually) put pixels past the bounds of the canvas.  But\n  // that's ok; any such pixels are ignored.\n\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n\n  // There are multiple forms in which the pixel data can be passed, and\n  // imgData.kind tells us which one this is.\n  if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n    // Grayscale, 1 bit per pixel (i.e. black-and-white).\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = (width + 7) >> 3;\n    const white = 0xffffffff;\n    const black = FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      // We ran out of input. Make all remaining pixels transparent.\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n    // RGBA, 32-bits per pixel.\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === ImageKind.RGB_24BPP) {\n    // RGB, 24-bits per pixel.\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n\n      destPos = 0;\n      for (j = elemsInThisChunk; j--; ) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\n\nfunction putBinaryImageMask(ctx, imgData) {\n  if (imgData.bitmap) {\n    // The bitmap has been created in the worker.\n    ctx.drawImage(imgData.bitmap, 0, 0);\n    return;\n  }\n\n  // Slow path: OffscreenCanvas isn't available in the worker.\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight =\n      i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n    // Expand the mask so it can be used by the canvas.  Any required\n    // inversion has already been handled.\n\n    ({ srcPos } = convertBlackAndWhiteToRGBA({\n      src,\n      srcPos,\n      dest,\n      width,\n      height: thisChunkHeight,\n      nonBlackColor: 0,\n    }));\n\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\n\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\n    \"strokeStyle\",\n    \"fillStyle\",\n    \"fillRule\",\n    \"globalAlpha\",\n    \"lineWidth\",\n    \"lineCap\",\n    \"lineJoin\",\n    \"miterLimit\",\n    \"globalCompositeOperation\",\n    \"font\",\n    \"filter\",\n  ];\n  for (const property of properties) {\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\n\nfunction resetCtxToDefault(ctx) {\n  ctx.strokeStyle = ctx.fillStyle = \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    !isNodeJS\n  ) {\n    const { filter } = ctx;\n    if (filter !== \"none\" && filter !== \"\") {\n      ctx.filter = \"none\";\n    }\n  }\n}\n\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n      bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n      bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n    }\n  }\n}\n\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = (layerData[i] * alpha * scale) | 0;\n  }\n}\n\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  for (let i = 3; i < length; i += 4) {\n    const y =\n      maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n      maskData[i - 2] * 152 + // * 0.59 ....\n      maskData[i - 1] * 28; // * 0.11 ....\n    layerData[i] = transferMap\n      ? (layerData[i] * transferMap[y >> 8]) >> 8\n      : (layerData[i] * y) >> 16;\n  }\n}\n\nfunction genericComposeSMask(\n  maskCtx,\n  layerCtx,\n  width,\n  height,\n  subtype,\n  backdrop,\n  transferMap,\n  layerOffsetX,\n  layerOffsetY,\n  maskOffsetX,\n  maskOffsetY\n) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n\n  const composeFn =\n    subtype === \"Luminosity\" ? composeSMaskLuminosity : composeSMaskAlpha;\n\n  // processing image in chunks to save memory\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(\n      layerOffsetX - maskOffsetX,\n      row + (layerOffsetY - maskOffsetY),\n      width,\n      chunkHeight\n    );\n    const layerData = layerCtx.getImageData(\n      layerOffsetX,\n      row + layerOffsetY,\n      width,\n      chunkHeight\n    );\n\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n    composeFn(maskData.data, layerData.data, transferMap);\n\n    layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n  }\n}\n\nfunction composeSMask(ctx, smask, layerCtx, layerBox) {\n  const layerOffsetX = layerBox[0];\n  const layerOffsetY = layerBox[1];\n  const layerWidth = layerBox[2] - layerOffsetX;\n  const layerHeight = layerBox[3] - layerOffsetY;\n  if (layerWidth === 0 || layerHeight === 0) {\n    return;\n  }\n  genericComposeSMask(\n    smask.context,\n    layerCtx,\n    layerWidth,\n    layerHeight,\n    smask.subtype,\n    smask.backdrop,\n    smask.transferMap,\n    layerOffsetX,\n    layerOffsetY,\n    smask.offsetX,\n    smask.offsetY\n  );\n  ctx.save();\n  ctx.globalAlpha = 1;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.drawImage(layerCtx.canvas, 0, 0);\n  ctx.restore();\n}\n\nfunction getImageSmoothingEnabled(transform, interpolate) {\n  const scale = Util.singularValueDecompose2dScale(transform);\n  // Round to a 32bit float so that `<=` check below will pass for numbers that\n  // are very close, but not exactly the same 64bit floats.\n  scale[0] = Math.fround(scale[0]);\n  scale[1] = Math.fround(scale[1]);\n  const actualScale = Math.fround(\n    (globalThis.devicePixelRatio || 1) * PixelsPerInch.PDF_TO_CSS_UNITS\n  );\n  if (interpolate !== undefined) {\n    // If the value is explicitly set use it.\n    return interpolate;\n  } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n    // Smooth when downscaling.\n    return true;\n  }\n  // Don't smooth when upscaling.\n  return false;\n}\n\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\n\nclass CanvasGraphics {\n  constructor(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    filterFactory,\n    { optionalContentConfig, markedContentStack = null },\n    annotationCanvasMap,\n    pageColors\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.filterFactory = filterFactory;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see\n    // PDF spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.suspendedCtx = null;\n    this.contentVisible = true;\n    this.markedContentStack = markedContentStack || [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedPatterns = new Map();\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.viewportScale = 1;\n    this.outputScaleX = 1;\n    this.outputScaleY = 1;\n    this.pageColors = pageColors;\n\n    this._cachedScaleForStroking = [-1, 0];\n    this._cachedGetSinglePixelWidth = null;\n    this._cachedBitmapsMap = new Map();\n  }\n\n  getObject(data, fallback = null) {\n    if (typeof data === \"string\") {\n      return data.startsWith(\"g_\")\n        ? this.commonObjs.get(data)\n        : this.objs.get(data);\n    }\n    return fallback;\n  }\n\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null,\n  }) {\n    // For pdfs that use blend modes we have to clear the canvas else certain\n    // blend modes can look wrong since we'd be blending with a white\n    // backdrop. The problem with a transparent backdrop though is we then\n    // don't get sub pixel anti aliasing on text, creating temporary\n    // transparent canvas when we have blend modes.\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n\n    const savedFillStyle = this.ctx.fillStyle;\n    this.ctx.fillStyle = background || \"#ffffff\";\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.fillStyle = savedFillStyle;\n\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\n        \"transparent\",\n        width,\n        height\n      );\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      // The transform can be applied before rendering, transferring it to\n      // the new canvas.\n      this.ctx.transform(...getCurrentTransform(this.compositeCtx));\n    }\n\n    this.ctx.save();\n    resetCtxToDefault(this.ctx);\n    if (transform) {\n      this.ctx.transform(...transform);\n      this.outputScaleX = transform[0];\n      this.outputScaleY = transform[0];\n    }\n    this.ctx.transform(...viewport.transform);\n    this.viewportScale = viewport.scale;\n\n    this.baseTransform = getCurrentTransform(this.ctx);\n  }\n\n  executeOperatorList(\n    operatorList,\n    executionStartIdx,\n    continueCallback,\n    stepper\n  ) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n\n    // Sometimes the OperatorList to execute is empty.\n    if (argsArrayLen === i) {\n      return i;\n    }\n\n    const chunkOperations =\n      argsArrayLen - i > EXECUTION_STEPS &&\n      typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n\n      fnId = fnArray[i];\n\n      if (fnId !== OPS.dependency) {\n        // eslint-disable-next-line prefer-spread\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n          // If the promise isn't resolved yet, add the continueCallback\n          // to the promise and bail out.\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n\n      i++;\n\n      // If the entire operatorList was executed, stop as were done.\n      if (i === argsArrayLen) {\n        return i;\n      }\n\n      // If the execution took longer then a certain amount of time and\n      // `continueCallback` is specified, interrupt the execution.\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n\n      // If the operatorList isn't executed completely yet OR the execution\n      // time was short enough, do another execution round.\n    }\n  }\n\n  #restoreInitialState() {\n    // Finishing all opened operations such as SMask group painting.\n    while (this.stateStack.length || this.inSMaskMode) {\n      this.restore();\n    }\n\n    this.ctx.restore();\n\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n  }\n\n  endDrawing() {\n    this.#restoreInitialState();\n\n    this.cachedCanvases.clear();\n    this.cachedPatterns.clear();\n\n    for (const cache of this._cachedBitmapsMap.values()) {\n      for (const canvas of cache.values()) {\n        if (\n          typeof HTMLCanvasElement !== \"undefined\" &&\n          canvas instanceof HTMLCanvasElement\n        ) {\n          canvas.width = canvas.height = 0;\n        }\n      }\n      cache.clear();\n    }\n    this._cachedBitmapsMap.clear();\n    this.#drawFilter();\n  }\n\n  #drawFilter() {\n    if (this.pageColors) {\n      const hcmFilterId = this.filterFactory.addHCMFilter(\n        this.pageColors.foreground,\n        this.pageColors.background\n      );\n      if (hcmFilterId !== \"none\") {\n        const savedFilter = this.ctx.filter;\n        this.ctx.filter = hcmFilterId;\n        this.ctx.drawImage(this.ctx.canvas, 0, 0);\n        this.ctx.filter = savedFilter;\n      }\n    }\n  }\n\n  _scaleImage(img, inverseTransform) {\n    // Vertical or horizontal scaling shall not be more than 2 to not lose the\n    // pixels during drawImage operation, painting on the temporary canvas(es)\n    // that are twice smaller in size.\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(\n      Math.hypot(inverseTransform[0], inverseTransform[1]),\n      1\n    );\n    let heightScale = Math.max(\n      Math.hypot(inverseTransform[2], inverseTransform[3]),\n      1\n    );\n\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (\n      (widthScale > 2 && paintWidth > 1) ||\n      (heightScale > 2 && paintHeight > 1)\n    ) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        // See bug 1820511 (Windows specific bug).\n        // TODO: once the above bug is fixed we could revert to:\n        // newWidth = Math.ceil(paintWidth / 2);\n        newWidth =\n          paintWidth >= 16384\n            ? Math.floor(paintWidth / 2) - 1 || 1\n            : Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        // TODO: see the comment above.\n        newHeight =\n          paintHeight >= 16384\n            ? Math.floor(paintHeight / 2) - 1 || 1\n            : Math.ceil(paintHeight) / 2;\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(\n        tmpCanvasId,\n        newWidth,\n        newHeight\n      );\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(\n        img,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight,\n    };\n  }\n\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const { width, height } = img;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const currentTransform = getCurrentTransform(ctx);\n\n    let cache, cacheKey, scaled, maskCanvas;\n    if ((img.bitmap || img.data) && img.count > 1) {\n      const mainKey = img.bitmap || img.data.buffer;\n      // We're reusing the same image several times, so we can cache it.\n      // In case we've a pattern fill we just keep the scaled version of\n      // the image.\n      // Only the scaling part matters, the translation part is just used\n      // to compute offsets (but not when filling patterns see #15573).\n      // TODO: handle the case of a pattern fill if it's possible.\n      cacheKey = JSON.stringify(\n        isPatternFill\n          ? currentTransform\n          : [currentTransform.slice(0, 4), fillColor]\n      );\n\n      cache = this._cachedBitmapsMap.get(mainKey);\n      if (!cache) {\n        cache = new Map();\n        this._cachedBitmapsMap.set(mainKey, cache);\n      }\n      const cachedImage = cache.get(cacheKey);\n      if (cachedImage && !isPatternFill) {\n        const offsetX = Math.round(\n          Math.min(currentTransform[0], currentTransform[2]) +\n            currentTransform[4]\n        );\n        const offsetY = Math.round(\n          Math.min(currentTransform[1], currentTransform[3]) +\n            currentTransform[5]\n        );\n        return {\n          canvas: cachedImage,\n          offsetX,\n          offsetY,\n        };\n      }\n      scaled = cachedImage;\n    }\n\n    if (!scaled) {\n      maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n      putBinaryImageMask(maskCanvas.context, img);\n    }\n\n    // Create the mask canvas at the size it will be drawn at and also set\n    // its transform to match the current transform so if there are any\n    // patterns applied they will be applied relative to the correct\n    // transform.\n\n    let maskToCanvas = Util.transform(currentTransform, [\n      1 / width,\n      0,\n      0,\n      -1 / height,\n      0,\n      0,\n    ]);\n    maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const cord1 = Util.applyTransform([0, 0], maskToCanvas);\n    const cord2 = Util.applyTransform([width, height], maskToCanvas);\n    const rect = Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n    const drawnWidth = Math.round(rect[2] - rect[0]) || 1;\n    const drawnHeight = Math.round(rect[3] - rect[1]) || 1;\n    const fillCanvas = this.cachedCanvases.getCanvas(\n      \"fillCanvas\",\n      drawnWidth,\n      drawnHeight\n    );\n    const fillCtx = fillCanvas.context;\n\n    // The offset will be the top-left cordinate mask.\n    // If objToCanvas is [a,b,c,d,e,f] then:\n    //   - offsetX = min(a, c) + e\n    //   - offsetY = min(b, d) + f\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform(...maskToCanvas);\n\n    if (!scaled) {\n      // Pre-scale if needed to improve image smoothing.\n      scaled = this._scaleImage(\n        maskCanvas.canvas,\n        getCurrentTransformInverse(fillCtx)\n      );\n      scaled = scaled.img;\n      if (cache && isPatternFill) {\n        cache.set(cacheKey, scaled);\n      }\n    }\n\n    fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      getCurrentTransform(fillCtx),\n      img.interpolate\n    );\n\n    drawImageAtIntegerCoords(\n      fillCtx,\n      scaled,\n      0,\n      0,\n      scaled.width,\n      scaled.height,\n      0,\n      0,\n      width,\n      height\n    );\n    fillCtx.globalCompositeOperation = \"source-in\";\n\n    const inverse = Util.transform(getCurrentTransformInverse(fillCtx), [\n      1,\n      0,\n      0,\n      1,\n      -offsetX,\n      -offsetY,\n    ]);\n    fillCtx.fillStyle = isPatternFill\n      ? fillColor.getPattern(ctx, this, inverse, PathType.FILL)\n      : fillColor;\n\n    fillCtx.fillRect(0, 0, width, height);\n\n    if (cache && !isPatternFill) {\n      // The fill canvas is put in the cache associated to the mask image\n      // so we must remove from the cached canvas: it mustn't be used again.\n      this.cachedCanvases.delete(\"fillCanvas\");\n      cache.set(cacheKey, fillCanvas.canvas);\n    }\n\n    // Round the offsets to avoid drawing fractional pixels.\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY),\n    };\n  }\n\n  // Graphics state\n  setLineWidth(width) {\n    if (width !== this.current.lineWidth) {\n      this._cachedScaleForStroking[0] = -1;\n    }\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (const [key, value] of states) {\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n        case \"CA\":\n          this.current.strokeAlpha = value;\n          break;\n        case \"ca\":\n          this.current.fillAlpha = value;\n          this.ctx.globalAlpha = value;\n          break;\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          this.current.activeSMask = value ? this.tempSMask : null;\n          this.tempSMask = null;\n          this.checkSMaskState();\n          break;\n        case \"TR\":\n          this.ctx.filter = this.current.transferMaps =\n            this.filterFactory.addFilter(value);\n          break;\n      }\n    }\n  }\n\n  get inSMaskMode() {\n    return !!this.suspendedCtx;\n  }\n\n  checkSMaskState() {\n    const inSMaskMode = this.inSMaskMode;\n    if (this.current.activeSMask && !inSMaskMode) {\n      this.beginSMaskMode();\n    } else if (!this.current.activeSMask && inSMaskMode) {\n      this.endSMaskMode();\n    }\n    // Else, the state is okay and nothing needs to be done.\n  }\n\n  /**\n   * Soft mask mode takes the current main drawing canvas and replaces it with\n   * a temporary canvas. Any drawing operations that happen on the temporary\n   * canvas need to be composed with the main canvas that was suspended (see\n   * `compose()`). The temporary canvas also duplicates many of its operations\n   * on the suspended canvas to keep them in sync, so that when the soft mask\n   * mode ends any clipping paths or transformations will still be active and in\n   * the right order on the canvas' graphics state stack.\n   */\n  beginSMaskMode() {\n    if (this.inSMaskMode) {\n      throw new Error(\"beginSMaskMode called while already in smask mode\");\n    }\n    const drawnWidth = this.ctx.canvas.width;\n    const drawnHeight = this.ctx.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight\n    );\n    this.suspendedCtx = this.ctx;\n    this.ctx = scratchCanvas.context;\n    const ctx = this.ctx;\n    ctx.setTransform(...getCurrentTransform(this.suspendedCtx));\n    copyCtxState(this.suspendedCtx, ctx);\n    mirrorContextOperations(ctx, this.suspendedCtx);\n\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n  }\n\n  endSMaskMode() {\n    if (!this.inSMaskMode) {\n      throw new Error(\"endSMaskMode called while not in smask mode\");\n    }\n    // The soft mask is done, now restore the suspended canvas as the main\n    // drawing canvas.\n    this.ctx._removeMirroring();\n    copyCtxState(this.ctx, this.suspendedCtx);\n    this.ctx = this.suspendedCtx;\n\n    this.suspendedCtx = null;\n  }\n\n  compose(dirtyBox) {\n    if (!this.current.activeSMask) {\n      return;\n    }\n\n    if (!dirtyBox) {\n      dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n    } else {\n      dirtyBox[0] = Math.floor(dirtyBox[0]);\n      dirtyBox[1] = Math.floor(dirtyBox[1]);\n      dirtyBox[2] = Math.ceil(dirtyBox[2]);\n      dirtyBox[3] = Math.ceil(dirtyBox[3]);\n    }\n    const smask = this.current.activeSMask;\n    const suspendedCtx = this.suspendedCtx;\n\n    composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n    // Whatever was drawn has been moved to the suspended canvas, now clear it\n    // out of the current canvas.\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.restore();\n  }\n\n  save() {\n    if (this.inSMaskMode) {\n      // SMask mode may be turned on/off causing us to lose graphics state.\n      // Copy the temporary canvas state to the main(suspended) canvas to keep\n      // it in sync.\n      copyCtxState(this.ctx, this.suspendedCtx);\n      // Don't bother calling save on the temporary canvas since state is not\n      // saved there.\n      this.suspendedCtx.save();\n    } else {\n      this.ctx.save();\n    }\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n  }\n\n  restore() {\n    if (this.stateStack.length === 0 && this.inSMaskMode) {\n      this.endSMaskMode();\n    }\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n      if (this.inSMaskMode) {\n        // Graphics state is stored on the main(suspended) canvas. Restore its\n        // state then copy it over to the temporary canvas.\n        this.suspendedCtx.restore();\n        copyCtxState(this.suspendedCtx, this.ctx);\n      } else {\n        this.ctx.restore();\n      }\n      this.checkSMaskState();\n\n      // Ensure that the clipping path is reset (fixes issue6413.pdf).\n      this.pendingClip = null;\n\n      this._cachedScaleForStroking[0] = -1;\n      this._cachedGetSinglePixelWidth = null;\n    }\n  }\n\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n\n    this._cachedScaleForStroking[0] = -1;\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  // Path\n  constructPath(ops, args, minMax) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let startX, startY;\n    const currentTransform = getCurrentTransform(ctx);\n\n    // Most of the time the current transform is a scaling matrix\n    // so we don't need to transform points before computing min/max:\n    // we can compute min/max first and then smartly \"apply\" the\n    // transform (see Util.scaleMinMax).\n    // For rectangle, moveTo and lineTo, min/max are computed in the\n    // worker (see evaluator.js).\n    const isScalingMatrix =\n      (currentTransform[0] === 0 && currentTransform[3] === 0) ||\n      (currentTransform[1] === 0 && currentTransform[2] === 0);\n    const minMaxForBezier = isScalingMatrix ? minMax.slice(0) : null;\n\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n          if (!isScalingMatrix) {\n            current.updateRectMinMax(currentTransform, [x, y, xw, yh]);\n          }\n          ctx.closePath();\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n          if (!isScalingMatrix) {\n            current.updatePathMinMax(currentTransform, x, y);\n          }\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n          if (!isScalingMatrix) {\n            current.updatePathMinMax(currentTransform, x, y);\n          }\n          break;\n        case OPS.curveTo:\n          startX = x;\n          startY = y;\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          current.updateCurvePathMinMax(\n            currentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y,\n            minMaxForBezier\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          startX = x;\n          startY = y;\n          ctx.bezierCurveTo(\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          current.updateCurvePathMinMax(\n            currentTransform,\n            startX,\n            startY,\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            minMaxForBezier\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          startX = x;\n          startY = y;\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          current.updateCurvePathMinMax(\n            currentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            x,\n            y,\n            x,\n            y,\n            minMaxForBezier\n          );\n          j += 4;\n          break;\n        case OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n\n    if (isScalingMatrix) {\n      current.updateScalingPathMinMax(currentTransform, minMaxForBezier);\n    }\n\n    current.setCurrentPoint(x, y);\n  }\n\n  closePath() {\n    this.ctx.closePath();\n  }\n\n  stroke(consumePath = true) {\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    // For stroke we want to temporarily change the global alpha to the\n    // stroking alpha.\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(\n          ctx,\n          this,\n          getCurrentTransformInverse(ctx),\n          PathType.STROKE\n        );\n        this.rescaleAndStroke(/* saveRestore */ false);\n        ctx.restore();\n      } else {\n        this.rescaleAndStroke(/* saveRestore */ true);\n      }\n    }\n    if (consumePath) {\n      this.consumePath(this.current.getClippedPathBoundingBox());\n    }\n    // Restore the global alpha to the fill alpha\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  fill(consumePath = true) {\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(\n        ctx,\n        this,\n        getCurrentTransformInverse(ctx),\n        PathType.FILL\n      );\n      needRestore = true;\n    }\n\n    const intersect = this.current.getClippedPathBoundingBox();\n    if (this.contentVisible && intersect !== null) {\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n    }\n\n    if (needRestore) {\n      ctx.restore();\n    }\n    if (consumePath) {\n      this.consumePath(intersect);\n    }\n  }\n\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n\n    this.consumePath();\n  }\n\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n\n  endPath() {\n    this.consumePath();\n  }\n\n  // Clipping\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n\n  // Text\n  beginText() {\n    this.current.textMatrix = IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    for (const path of paths) {\n      ctx.setTransform(...path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    // A valid matrix needs all main diagonal elements to be non-zero\n    // This also ensures we bypass FF bugzilla bug #719844.\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      warn(\"Invalid font matrix for font \" + fontRefName);\n    }\n\n    // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n    // and in some docs this can be negative (inverted x-y axes).\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n\n    if (fontObj.isType3Font) {\n      return; // we don't need ctx.font for Type3 fonts\n    }\n\n    const name = fontObj.loadedName || \"sans-serif\";\n    const typeface =\n      fontObj.systemFontInfo?.css || `\"${name}\", ${fontObj.fallbackName}`;\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n    // Some font backends cannot handle fonts below certain size.\n    // Keeping the font at minimal size and using the fontSizeScale to change\n    // the current transformation matrix before the fillText/strokeText.\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  paintChar(character, x, y, patternTransform) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode =\n      textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(\n      textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n    );\n    const patternFill = current.patternFill && !font.missingFile;\n\n    let addToPath;\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n      if (patternTransform) {\n        ctx.setTransform(...patternTransform);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fill();\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.stroke();\n      }\n      ctx.restore();\n    } else {\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fillText(character, x, y);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.strokeText(character, x, y);\n      }\n    }\n\n    if (isAddToPathSet) {\n      const paths = (this.pendingTextPaths ||= []);\n      paths.push({\n        transform: getCurrentTransform(ctx),\n        x,\n        y,\n        fontSize,\n        addToPath,\n      });\n    }\n  }\n\n  get isFontSubpixelAAEnabled() {\n    // Checks if anti-aliasing is enabled when scaled text is painted.\n    // On Windows GDI scaled fonts looks bad.\n    const { context: ctx } = this.cachedCanvases.getCanvas(\n      \"isFontSubpixelAAEnabled\",\n      10,\n      10\n    );\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return undefined;\n    }\n\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    const simpleFillText =\n      current.textRenderingMode === TextRenderingMode.FILL &&\n      !font.disableFontFace &&\n      !current.patternFill;\n\n    ctx.save();\n    ctx.transform(...current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n\n    let patternTransform;\n    if (current.patternFill) {\n      ctx.save();\n      const pattern = current.fillColor.getPattern(\n        ctx,\n        this,\n        getCurrentTransformInverse(ctx),\n        PathType.FILL\n      );\n      patternTransform = getCurrentTransform(ctx);\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n\n    let lineWidth = current.lineWidth;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        lineWidth = this.getSinglePixelWidth();\n      }\n    } else {\n      lineWidth /= scale;\n    }\n\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n\n    ctx.lineWidth = lineWidth;\n\n    if (font.isInvalidPDFjsFont) {\n      const chars = [];\n      let width = 0;\n      for (const glyph of glyphs) {\n        chars.push(glyph.unicode);\n        width += glyph.width;\n      }\n      ctx.fillText(chars.join(\"\"), 0, 0);\n      current.x += width * widthAdvanceScale * textHScale;\n      ctx.restore();\n      this.compose();\n\n      return undefined;\n    }\n\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx =\n          -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (font.remeasure && width > 0) {\n        // Some standard fonts may not have the exact width: rescale per\n        // character if measured width is greater than expected glyph width\n        // and subpixel-aa is enabled, otherwise just center the glyph.\n        const measuredWidth =\n          ((ctx.measureText(character).width * 1000) / fontSize) *\n          fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX +=\n            (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n        }\n      }\n\n      // Only attempt to draw the glyph if it is actually in the embedded font\n      // file or if there isn't a font file so the fallback font is shown.\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          // common case\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(character, scaledX, scaledY, patternTransform);\n          if (accent) {\n            const scaledAccentX =\n              scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n            const scaledAccentY =\n              scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n            this.paintChar(\n              accent.fontChar,\n              scaledAccentX,\n              scaledAccentY,\n              patternTransform\n            );\n          }\n        }\n      }\n\n      const charWidth = vertical\n        ? width * widthAdvanceScale - spacing * fontDirection\n        : width * widthAdvanceScale + spacing * fontDirection;\n      x += charWidth;\n\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    this.compose();\n\n    return undefined;\n  }\n\n  showType3Text(glyphs) {\n    // Type3 fonts - each glyph is a \"mini-PDF\"\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible =\n      current.textRenderingMode === TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedScaleForStroking[0] = -1;\n    this._cachedGetSinglePixelWidth = null;\n\n    ctx.save();\n    ctx.transform(...current.textMatrix);\n    ctx.translate(current.x, current.y);\n\n    ctx.scale(textHScale, fontDirection);\n\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        spacingLength = (spacingDir * glyph * fontSize) / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform(...fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n\n      const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n      width = transformed[0] * fontSize + spacing;\n\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    this.processingType3 = null;\n  }\n\n  // Type3 fonts\n  setCharWidth(xWidth, yWidth) {\n    // We can safely ignore this since the width should be the same\n    // as the width in the Widths array.\n  }\n\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.ctx.clip();\n    this.endPath();\n  }\n\n  // Color\n  getColorN_Pattern(IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform = this.baseTransform || getCurrentTransform(this.ctx);\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(\n            ctx,\n            this.commonObjs,\n            this.objs,\n            this.canvasFactory,\n            this.filterFactory,\n            {\n              optionalContentConfig: this.optionalContentConfig,\n              markedContentStack: this.markedContentStack,\n            }\n          );\n        },\n      };\n      pattern = new TilingPattern(\n        IR,\n        color,\n        this.ctx,\n        canvasGraphicsFactory,\n        baseTransform\n      );\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n    return pattern;\n  }\n\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n\n  setFillRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n\n  _getPattern(objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = getShadingPattern(this.getObject(objId));\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    this.save();\n    const pattern = this._getPattern(objId);\n    ctx.fillStyle = pattern.getPattern(\n      ctx,\n      this,\n      getCurrentTransformInverse(ctx),\n      PathType.SHADING\n    );\n\n    const inv = getCurrentTransformInverse(ctx);\n    if (inv) {\n      const { width, height } = ctx.canvas;\n      const [x0, y0, x1, y1] = Util.getAxialAlignedBoundingBox(\n        [0, 0, width, height],\n        inv\n      );\n\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      // HACK to draw the gradient onto an infinite rectangle.\n      // PDF gradients are drawn across the entire image while\n      // Canvas only allows gradients to be drawn in a rectangle\n      // The following bug should allow us to remove this.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n\n    this.compose(this.current.getClippedPathBoundingBox());\n    this.restore();\n  }\n\n  // Images\n  beginInlineImage() {\n    unreachable(\"Should not call beginInlineImage\");\n  }\n\n  beginImageData() {\n    unreachable(\"Should not call beginImageData\");\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform(...matrix);\n    }\n\n    this.baseTransform = getCurrentTransform(this.ctx);\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.current.updateRectMinMax(getCurrentTransform(this.ctx), bbox);\n      this.clip();\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.save();\n    // If there's an active soft mask we don't want it enabled for the group, so\n    // clear it out. The mask and suspended canvas will be restored in endGroup.\n    if (this.inSMaskMode) {\n      this.endSMaskMode();\n      this.current.activeSMask = null;\n    }\n\n    const currentCtx = this.ctx;\n    // TODO non-isolated groups - according to Rik at adobe non-isolated\n    // group results aren't usually that different and they even have tools\n    // that ignore this setting. Notes from Rik on implementing:\n    // - When you encounter an transparency group, create a new canvas with\n    // the dimensions of the bbox\n    // - copy the content from the previous canvas to the new canvas\n    // - draw as usual\n    // - remove the backdrop alpha:\n    // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n    // value of your transparency group and 'alphaBackdrop' the alpha of the\n    // backdrop\n    // - remove background color:\n    // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n    if (!group.isolated) {\n      info(\"TODO: Support non-isolated groups.\");\n    }\n\n    // TODO knockout - supposedly possible with the clever use of compositing\n    // modes.\n    if (group.knockout) {\n      warn(\"Knockout groups not supported.\");\n    }\n\n    const currentTransform = getCurrentTransform(currentCtx);\n    if (group.matrix) {\n      currentCtx.transform(...group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n\n    // Based on the current transform figure out how big the bounding box\n    // will actually be.\n    let bounds = Util.getAxialAlignedBoundingBox(\n      group.bbox,\n      getCurrentTransform(currentCtx)\n    );\n    // Clip the bounding box to the current canvas.\n    const canvasBounds = [\n      0,\n      0,\n      currentCtx.canvas.width,\n      currentCtx.canvas.height,\n    ];\n    bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    // Use ceil in case we're between sizes so we don't create canvas that is\n    // too small and make the canvas at least 1x1 pixels.\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n      scaleY = 1;\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n\n    this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      // Using two cache entries is case if masks are used one after another.\n      cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight\n    );\n    const groupCtx = scratchCanvas.context;\n\n    // Since we created a new canvas that is just the size of the bounding box\n    // we have to translate the group ctx.\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform(...currentTransform);\n\n    if (group.smask) {\n      // Saving state and cached mask to be used in setGState.\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null, // used during suspend operation\n      });\n    } else {\n      // Setup the current ctx so when the group is popped we draw it at the\n      // right location.\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n      currentCtx.save();\n    }\n    // The transparency group inherits all off the current graphics state\n    // except the blend mode, soft mask, and alpha constants.\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    const ctx = this.groupStack.pop();\n    this.ctx = ctx;\n    // Turn off image smoothing to avoid sub pixel interpolation which can\n    // look kind of blurry for some pdfs.\n    this.ctx.imageSmoothingEnabled = false;\n\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n      this.restore();\n    } else {\n      this.ctx.restore();\n      const currentMtx = getCurrentTransform(this.ctx);\n      this.restore();\n      this.ctx.save();\n      this.ctx.setTransform(...currentMtx);\n      const dirtyBox = Util.getAxialAlignedBoundingBox(\n        [0, 0, groupCtx.canvas.width, groupCtx.canvas.height],\n        currentMtx\n      );\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      this.ctx.restore();\n      this.compose(dirtyBox);\n    }\n  }\n\n  beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n    // The annotations are drawn just after the page content.\n    // The page content drawing can potentially have set a transform,\n    // a clipping path, whatever...\n    // So in order to have something clean, we restore the initial state.\n    this.#restoreInitialState();\n    resetCtxToDefault(this.ctx);\n\n    this.ctx.save();\n    this.save();\n\n    if (this.baseTransform) {\n      this.ctx.setTransform(...this.baseTransform);\n    }\n\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n\n      if (hasOwnCanvas && this.annotationCanvasMap) {\n        transform = transform.slice();\n        transform[4] -= rect[0];\n        transform[5] -= rect[1];\n\n        rect = rect.slice();\n        rect[0] = rect[1] = 0;\n        rect[2] = width;\n        rect[3] = height;\n\n        const [scaleX, scaleY] = Util.singularValueDecompose2dScale(\n          getCurrentTransform(this.ctx)\n        );\n        const { viewportScale } = this;\n        const canvasWidth = Math.ceil(\n          width * this.outputScaleX * viewportScale\n        );\n        const canvasHeight = Math.ceil(\n          height * this.outputScaleY * viewportScale\n        );\n\n        this.annotationCanvas = this.canvasFactory.create(\n          canvasWidth,\n          canvasHeight\n        );\n        const { canvas, context } = this.annotationCanvas;\n        this.annotationCanvasMap.set(id, canvas);\n        this.annotationCanvas.savedCtx = this.ctx;\n        this.ctx = context;\n        this.ctx.save();\n        this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n\n        resetCtxToDefault(this.ctx);\n      } else {\n        resetCtxToDefault(this.ctx);\n\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.ctx.clip();\n        this.endPath();\n      }\n    }\n\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n\n    this.transform(...transform);\n    this.transform(...matrix);\n  }\n\n  endAnnotation() {\n    if (this.annotationCanvas) {\n      this.ctx.restore();\n      this.#drawFilter();\n\n      this.ctx = this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas;\n    }\n  }\n\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const count = img.count;\n    img = this.getObject(img.data, img);\n    img.count = count;\n\n    const ctx = this.ctx;\n    const glyph = this.processingType3;\n\n    if (glyph) {\n      if (glyph.compiled === undefined) {\n        glyph.compiled = compileType3Glyph(img);\n      }\n\n      if (glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n    }\n    const mask = this._createMaskCanvas(img);\n    const maskCanvas = mask.canvas;\n\n    ctx.save();\n    // The mask is drawn with the transform applied. Reset the current\n    // transform to draw to the identity.\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectRepeat(\n    img,\n    scaleX,\n    skewX = 0,\n    skewY = 0,\n    scaleY,\n    positions\n  ) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    img = this.getObject(img.data, img);\n\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = getCurrentTransform(ctx);\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(img);\n\n    ctx.setTransform(\n      1,\n      0,\n      0,\n      1,\n      mask.offsetX - currentTransform[4],\n      mask.offsetY - currentTransform[5]\n    );\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = Util.transform(currentTransform, [\n        scaleX,\n        skewX,\n        skewY,\n        scaleY,\n        positions[i],\n        positions[i + 1],\n      ]);\n\n      const [x, y] = Util.applyTransform([0, 0], trans);\n      ctx.drawImage(mask.canvas, x, y);\n    }\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n\n    for (const image of images) {\n      const { data, width, height, transform } = image;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      const img = this.getObject(data, image);\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(\n            maskCtx,\n            this,\n            getCurrentTransformInverse(ctx),\n            PathType.FILL\n          )\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      ctx.save();\n      ctx.transform(...transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(\n        ctx,\n        maskCanvas.canvas,\n        0,\n        0,\n        width,\n        height,\n        0,\n        -1,\n        1,\n        1\n      );\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height,\n      });\n    }\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n\n  applyTransferMapsToCanvas(ctx) {\n    if (this.current.transferMaps !== \"none\") {\n      ctx.filter = this.current.transferMaps;\n      ctx.drawImage(ctx.canvas, 0, 0);\n      ctx.filter = \"none\";\n    }\n    return ctx.canvas;\n  }\n\n  applyTransferMapsToBitmap(imgData) {\n    if (this.current.transferMaps === \"none\") {\n      return imgData.bitmap;\n    }\n    const { bitmap, width, height } = imgData;\n    const tmpCanvas = this.cachedCanvases.getCanvas(\n      \"inlineImage\",\n      width,\n      height\n    );\n    const tmpCtx = tmpCanvas.context;\n    tmpCtx.filter = this.current.transferMaps;\n    tmpCtx.drawImage(bitmap, 0, 0);\n    tmpCtx.filter = \"none\";\n\n    return tmpCanvas.canvas;\n  }\n\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n\n    this.save();\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      !isNodeJS\n    ) {\n      // The filter, if any, will be applied in applyTransferMapsToBitmap.\n      // It must be applied to the image before rescaling else some artifacts\n      // could appear.\n      // The final restore will reset it to its value.\n      const { filter } = ctx;\n      if (filter !== \"none\" && filter !== \"\") {\n        ctx.filter = \"none\";\n      }\n    }\n\n    // scale the image to the unit square\n    ctx.scale(1 / width, -1 / height);\n\n    let imgToPaint;\n    if (imgData.bitmap) {\n      imgToPaint = this.applyTransferMapsToBitmap(imgData);\n    } else if (\n      (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n      !imgData.data\n    ) {\n      // typeof check is needed due to node.js support, see issue #8489\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\n        \"inlineImage\",\n        width,\n        height\n      );\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n      imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n    }\n\n    const scaled = this._scaleImage(\n      imgToPaint,\n      getCurrentTransformInverse(ctx)\n    );\n    ctx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      getCurrentTransform(ctx),\n      imgData.interpolate\n    );\n\n    drawImageAtIntegerCoords(\n      ctx,\n      scaled.img,\n      0,\n      0,\n      scaled.paintWidth,\n      scaled.paintHeight,\n      0,\n      -height,\n      width,\n      height\n    );\n    this.compose();\n    this.restore();\n  }\n\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    let imgToPaint;\n    if (imgData.bitmap) {\n      imgToPaint = imgData.bitmap;\n    } else {\n      const w = imgData.width;\n      const h = imgData.height;\n\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n      imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n    }\n\n    for (const entry of map) {\n      ctx.save();\n      ctx.transform(...entry.transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(\n        ctx,\n        imgToPaint,\n        entry.x,\n        entry.y,\n        entry.w,\n        entry.h,\n        0,\n        -1,\n        1,\n        1\n      );\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.ctx.fillRect(0, 0, 1, 1);\n    this.compose();\n  }\n\n  // Marked content\n\n  markPoint(tag) {\n    // TODO Marked content.\n  }\n\n  markPointProps(tag, properties) {\n    // TODO Marked content.\n  }\n\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true,\n    });\n  }\n\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties),\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n\n  // Compatibility\n\n  beginCompat() {\n    // TODO ignore undefined operators (should we do that anyway?)\n  }\n\n  endCompat() {\n    // TODO stop ignoring undefined operators\n  }\n\n  // Helper functions\n\n  consumePath(clipBox) {\n    const isEmpty = this.current.isEmptyClip();\n    if (this.pendingClip) {\n      this.current.updateClipFromPath();\n    }\n    if (!this.pendingClip) {\n      this.compose(clipBox);\n    }\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (!isEmpty) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n      }\n      this.pendingClip = null;\n    }\n    this.current.startNewPathAndClipBox(this.current.clipBox);\n    ctx.beginPath();\n  }\n\n  getSinglePixelWidth() {\n    if (!this._cachedGetSinglePixelWidth) {\n      const m = getCurrentTransform(this.ctx);\n      if (m[1] === 0 && m[2] === 0) {\n        // Fast path\n        this._cachedGetSinglePixelWidth =\n          1 / Math.min(Math.abs(m[0]), Math.abs(m[3]));\n      } else {\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const normX = Math.hypot(m[0], m[2]);\n        const normY = Math.hypot(m[1], m[3]);\n        this._cachedGetSinglePixelWidth = Math.max(normX, normY) / absDet;\n      }\n    }\n    return this._cachedGetSinglePixelWidth;\n  }\n\n  getScaleForStroking() {\n    // A pixel has thicknessX = thicknessY = 1;\n    // A transformed pixel is a parallelogram and the thicknesses\n    // corresponds to the heights.\n    // The goal of this function is to rescale before setting the\n    // lineWidth in order to have both thicknesses greater or equal\n    // to 1 after transform.\n    if (this._cachedScaleForStroking[0] === -1) {\n      const { lineWidth } = this.current;\n      const { a, b, c, d } = this.ctx.getTransform();\n      let scaleX, scaleY;\n\n      if (b === 0 && c === 0) {\n        // Fast path\n        const normX = Math.abs(a);\n        const normY = Math.abs(d);\n        if (normX === normY) {\n          if (lineWidth === 0) {\n            scaleX = scaleY = 1 / normX;\n          } else {\n            const scaledLineWidth = normX * lineWidth;\n            scaleX = scaleY = scaledLineWidth < 1 ? 1 / scaledLineWidth : 1;\n          }\n        } else if (lineWidth === 0) {\n          scaleX = 1 / normX;\n          scaleY = 1 / normY;\n        } else {\n          const scaledXLineWidth = normX * lineWidth;\n          const scaledYLineWidth = normY * lineWidth;\n          scaleX = scaledXLineWidth < 1 ? 1 / scaledXLineWidth : 1;\n          scaleY = scaledYLineWidth < 1 ? 1 / scaledYLineWidth : 1;\n        }\n      } else {\n        // A pixel (base (x, y)) is transformed by M into a parallelogram:\n        //  - its area is |det(M)|;\n        //  - heightY (orthogonal to Mx) has a length: |det(M)| / norm(Mx);\n        //  - heightX (orthogonal to My) has a length: |det(M)| / norm(My).\n        // heightX and heightY are the thicknesses of the transformed pixel\n        // and they must be both greater or equal to 1.\n        const absDet = Math.abs(a * d - b * c);\n        const normX = Math.hypot(a, b);\n        const normY = Math.hypot(c, d);\n        if (lineWidth === 0) {\n          scaleX = normY / absDet;\n          scaleY = normX / absDet;\n        } else {\n          const baseArea = lineWidth * absDet;\n          scaleX = normY > baseArea ? normY / baseArea : 1;\n          scaleY = normX > baseArea ? normX / baseArea : 1;\n        }\n      }\n      this._cachedScaleForStroking[0] = scaleX;\n      this._cachedScaleForStroking[1] = scaleY;\n    }\n    return this._cachedScaleForStroking;\n  }\n\n  // Rescale before stroking in order to have a final lineWidth\n  // with both thicknesses greater or equal to 1.\n  rescaleAndStroke(saveRestore) {\n    const { ctx } = this;\n    const { lineWidth } = this.current;\n    const [scaleX, scaleY] = this.getScaleForStroking();\n\n    ctx.lineWidth = lineWidth || 1;\n\n    if (scaleX === 1 && scaleY === 1) {\n      ctx.stroke();\n      return;\n    }\n\n    const dashes = ctx.getLineDash();\n    if (saveRestore) {\n      ctx.save();\n    }\n\n    ctx.scale(scaleX, scaleY);\n\n    // How the dashed line is rendered depends on the current transform...\n    // so we added a rescale to handle too thin lines and consequently\n    // the way the line is dashed will be modified.\n    // If scaleX === scaleY, the dashed lines will be rendered correctly\n    // else we'll have some bugs (but only with too thin lines).\n    // Here we take the max... why not taking the min... or something else.\n    // Anyway, as said it's buggy when scaleX !== scaleY.\n    if (dashes.length > 0) {\n      const scale = Math.max(scaleX, scaleY);\n      ctx.setLineDash(dashes.map(x => x / scale));\n      ctx.lineDashOffset /= scale;\n    }\n\n    ctx.stroke();\n\n    if (saveRestore) {\n      ctx.restore();\n    }\n  }\n\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfor (const op in OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, unreachable, Util } from \"../shared/util.js\";\nimport { getCurrentTransform } from \"./display_utils.js\";\n\nconst PathType = {\n  FILL: \"Fill\",\n  STROKE: \"Stroke\",\n  SHADING: \"Shading\",\n};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox) {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n  }\n\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    let pattern;\n    if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n      const ownerBBox = owner.current.getClippedPathBoundingBox(\n        pathType,\n        getCurrentTransform(ctx)\n      ) || [0, 0, 0, 0];\n      // Create a canvas that is only as big as the current path. This doesn't\n      // allow us to cache the pattern, but it generally creates much smaller\n      // canvases and saves memory use. See bug 1722807 for an example.\n      const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n      const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        width,\n        height,\n        true\n      );\n\n      const tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.beginPath();\n      tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      // Non shading fill patterns are positioned relative to the base transform\n      // (usually the page's initial transform), but we may have created a\n      // smaller canvas based on the path, so we must account for the shift.\n      tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n      inverse = Util.transform(inverse, [\n        1,\n        0,\n        0,\n        1,\n        ownerBBox[0],\n        ownerBBox[1],\n      ]);\n\n      tmpCtx.transform(...owner.baseTransform);\n      if (this.matrix) {\n        tmpCtx.transform(...this.matrix);\n      }\n      applyBoundingBox(tmpCtx, this._bbox);\n\n      tmpCtx.fillStyle = this._createGradient(tmpCtx);\n      tmpCtx.fill();\n\n      pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n      const domMatrix = new DOMMatrix(inverse);\n      pattern.setTransform(domMatrix);\n    } else {\n      // Shading fills are applied relative to the current matrix which is also\n      // how canvas gradients work, so there's no need to do anything special\n      // here.\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      const k = y < y1 ? 0 : (y1 - y) / (y1 - y2);\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (pathType === PathType.SHADING) {\n      scale = Util.singularValueDecompose2dScale(getCurrentTransform(ctx));\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this.matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      pathType === PathType.SHADING ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (pathType !== PathType.SHADING) {\n      ctx.setTransform(...owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform(...this.matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static MAX_PATTERN_SIZE = 3000;\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    // Some bounding boxes have negative x0/y0 coordinates which will cause the\n    // some of the drawing to be off of the canvas. To avoid this shift the\n    // bounding box over.\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    // To match CanvasGraphics beginDrawing we must save the context here or\n    // else we end up with unbalanced save/restores.\n    tmpCtx.save();\n\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n\n    graphics.baseTransform = getCurrentTransform(graphics.ctx);\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.current.updateRectMinMax(getCurrentTransform(graphics.ctx), [\n      x0,\n      y0,\n      x1,\n      y1,\n    ]);\n    graphics.clip();\n    graphics.endPath();\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = inverse;\n    if (pathType !== PathType.SHADING) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = new DOMMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    pattern.setTransform(domMatrix);\n\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, PathType, TilingPattern };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FeatureTest, ImageKind } from \"./util.js\";\n\nfunction convertToRGBA(params) {\n  switch (params.kind) {\n    case ImageKind.GRAYSCALE_1BPP:\n      return convertBlackAndWhiteToRGBA(params);\n    case ImageKind.RGB_24BPP:\n      return convertRGBToRGBA(params);\n  }\n\n  return null;\n}\n\nfunction convertBlackAndWhiteToRGBA({\n  src,\n  srcPos = 0,\n  dest,\n  width,\n  height,\n  nonBlackColor = 0xffffffff,\n  inverseDecode = false,\n}) {\n  const black = FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n  const [zeroMapping, oneMapping] = inverseDecode\n    ? [nonBlackColor, black]\n    : [black, nonBlackColor];\n  const widthInSource = width >> 3;\n  const widthRemainder = width & 7;\n  const srcLength = src.length;\n  dest = new Uint32Array(dest.buffer);\n  let destPos = 0;\n\n  for (let i = 0; i < height; i++) {\n    for (const max = srcPos + widthInSource; srcPos < max; srcPos++) {\n      const elem = srcPos < srcLength ? src[srcPos] : 255;\n      dest[destPos++] = elem & 0b10000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1 ? oneMapping : zeroMapping;\n    }\n    if (widthRemainder === 0) {\n      continue;\n    }\n    const elem = srcPos < srcLength ? src[srcPos++] : 255;\n    for (let j = 0; j < widthRemainder; j++) {\n      dest[destPos++] = elem & (1 << (7 - j)) ? oneMapping : zeroMapping;\n    }\n  }\n  return { srcPos, destPos };\n}\n\nfunction convertRGBToRGBA({\n  src,\n  srcPos = 0,\n  dest,\n  destPos = 0,\n  width,\n  height,\n}) {\n  let i = 0;\n  const len32 = src.length >> 2;\n  const src32 = new Uint32Array(src.buffer, srcPos, len32);\n\n  if (FeatureTest.isLittleEndian) {\n    // It's a way faster to do the shuffle manually instead of working\n    // component by component with some Uint8 arrays.\n    for (; i < len32 - 2; i += 3, destPos += 4) {\n      const s1 = src32[i]; // R2B1G1R1\n      const s2 = src32[i + 1]; // G3R3B2G2\n      const s3 = src32[i + 2]; // B4G4R4B3\n\n      dest[destPos] = s1 | 0xff000000;\n      dest[destPos + 1] = (s1 >>> 24) | (s2 << 8) | 0xff000000;\n      dest[destPos + 2] = (s2 >>> 16) | (s3 << 16) | 0xff000000;\n      dest[destPos + 3] = (s3 >>> 8) | 0xff000000;\n    }\n\n    for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n      dest[destPos++] =\n        src[j] | (src[j + 1] << 8) | (src[j + 2] << 16) | 0xff000000;\n    }\n  } else {\n    for (; i < len32 - 2; i += 3, destPos += 4) {\n      const s1 = src32[i]; // R1G1B1R2\n      const s2 = src32[i + 1]; // G2B2R3G3\n      const s3 = src32[i + 2]; // B3R4G4B4\n\n      dest[destPos] = s1 | 0xff;\n      dest[destPos + 1] = (s1 << 24) | (s2 >>> 8) | 0xff;\n      dest[destPos + 2] = (s2 << 16) | (s3 >>> 16) | 0xff;\n      dest[destPos + 3] = (s3 << 8) | 0xff;\n    }\n\n    for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n      dest[destPos++] =\n        (src[j] << 24) | (src[j + 1] << 16) | (src[j + 2] << 8) | 0xff;\n    }\n  }\n\n  return { srcPos, destPos };\n}\n\nfunction grayToRGBA(src, dest) {\n  if (FeatureTest.isLittleEndian) {\n    for (let i = 0, ii = src.length; i < ii; i++) {\n      dest[i] = (src[i] * 0x10101) | 0xff000000;\n    }\n  } else {\n    for (let i = 0, ii = src.length; i < ii; i++) {\n      dest[i] = (src[i] * 0x1010100) | 0x000000ff;\n    }\n  }\n}\n\nexport { convertBlackAndWhiteToRGBA, convertToRGBA, grayToRGBA };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort = null;\nGlobalWorkerOptions.workerSrc = \"\";\n\nexport { GlobalWorkerOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  MissingPDFException,\n  PasswordException,\n  PromiseCapability,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    !(\n      reason instanceof Error ||\n      (typeof reason === \"object\" && reason !== null)\n    )\n  ) {\n    unreachable(\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"PasswordException\":\n      return new PasswordException(reason.message, reason.code);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this.#processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this.#createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this.comObj.postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = new PromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this.comObj.postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++,\n      sourceName = this.sourceName,\n      targetName = this.targetName,\n      comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = new PromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          comObj.postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = new PromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = new PromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  #createStreamSink(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const self = this,\n      action = this.actionHandler[data.action];\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = new PromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        comObj.postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: new PromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  #processStreamMessage(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const streamController = this.streamControllers[streamId],\n      streamSink = this.streamSinks[streamId];\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          streamController.startCall.resolve();\n        } else {\n          streamController.startCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          streamController.pullCall.resolve();\n        } else {\n          streamController.pullCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!streamSink) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink, so when it changes\n        // from negative to positive, set ready property as resolved promise.\n        if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n          streamSink.sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        streamSink.desiredSize = data.desiredSize;\n\n        new Promise(function (resolve) {\n          resolve(streamSink.onPull?.());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(streamController, \"enqueue should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(streamController, \"close should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.isClosed = true;\n        streamController.controller.close();\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(streamController, \"error should have stream controller\");\n        streamController.controller.error(wrapReason(data.reason));\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          streamController.cancelCall.resolve();\n        } else {\n          streamController.cancelCall.reject(wrapReason(data.reason));\n        }\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!streamSink) {\n          break;\n        }\n\n        new Promise(function (resolve) {\n          resolve(streamSink.onCancel?.(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        streamSink.sinkCapability.reject(wrapReason(data.reason));\n        streamSink.isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  async #deleteStreamController(streamController, streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled([\n      streamController.startCall?.promise,\n      streamController.pullCall?.promise,\n      streamController.cancelCall?.promise,\n    ]);\n    delete this.streamControllers[streamId];\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  #metadataMap;\n\n  #data;\n\n  constructor({ parsedData, rawData }) {\n    this.#metadataMap = parsedData;\n    this.#data = rawData;\n  }\n\n  getRaw() {\n    return this.#data;\n  }\n\n  get(name) {\n    return this.#metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this.#metadataMap);\n  }\n\n  has(name) {\n    return this.#metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap, unreachable, warn } from \"../shared/util.js\";\nimport { MurmurHash3_64 } from \"../shared/murmurhash3.js\";\n\nconst INTERNAL = Symbol(\"INTERNAL\");\n\nclass OptionalContentGroup {\n  #visible = true;\n\n  constructor(name, intent) {\n    this.name = name;\n    this.intent = intent;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get visible() {\n    return this.#visible;\n  }\n\n  /**\n   * @ignore\n   */\n  _setVisible(internal, visible) {\n    if (internal !== INTERNAL) {\n      unreachable(\"Internal method `_setVisible` called.\");\n    }\n    this.#visible = visible;\n  }\n}\n\nclass OptionalContentConfig {\n  #cachedGetHash = null;\n\n  #groups = new Map();\n\n  #initialHash = null;\n\n  #order = null;\n\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this.#order = data.order;\n    for (const group of data.groups) {\n      this.#groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this.#groups.values()) {\n        group._setVisible(INTERNAL, false);\n      }\n    }\n\n    for (const on of data.on) {\n      this.#groups.get(on)._setVisible(INTERNAL, true);\n    }\n\n    for (const off of data.off) {\n      this.#groups.get(off)._setVisible(INTERNAL, false);\n    }\n\n    // The following code must always run *last* in the constructor.\n    this.#initialHash = this.getHash();\n  }\n\n  #evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this.#evaluateVisibilityExpression(element);\n      } else if (this.#groups.has(element)) {\n        state = this.#groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (this.#groups.size === 0) {\n      return true;\n    }\n    if (!group) {\n      warn(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this.#groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this.#groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this.#evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this.#groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this.#groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this.#groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this.#groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this.#groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this.#groups.get(id)._setVisible(INTERNAL, !!visible);\n\n    this.#cachedGetHash = null;\n  }\n\n  get hasInitialVisibility() {\n    return this.#initialHash === null || this.getHash() === this.#initialHash;\n  }\n\n  getOrder() {\n    if (!this.#groups.size) {\n      return null;\n    }\n    if (this.#order) {\n      return this.#order.slice();\n    }\n    return [...this.#groups.keys()];\n  }\n\n  getGroups() {\n    return this.#groups.size > 0 ? objectFromMap(this.#groups) : null;\n  }\n\n  getGroup(id) {\n    return this.#groups.get(id) || null;\n  }\n\n  getHash() {\n    if (this.#cachedGetHash !== null) {\n      return this.#cachedGetHash;\n    }\n    const hash = new MurmurHash3_64();\n\n    for (const [id, group] of this.#groups) {\n      hash.update(`${id}:${group.visible}`);\n    }\n    return (this.#cachedGetHash = hash.hexdigest());\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"../interfaces\").IPDFStream} IPDFStream */\n/** @typedef {import(\"../interfaces\").IPDFStreamReader} IPDFStreamReader */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../interfaces\").IPDFStreamRangeReader} IPDFStreamRangeReader */\n\nimport { assert, PromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(\n    {\n      length,\n      initialData,\n      progressiveDone = false,\n      contentDispositionFilename = null,\n      disableRange = false,\n      disableStream = false,\n    },\n    pdfDataRangeTransport\n  ) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = progressiveDone;\n    this._contentDispositionFilename = contentDispositionFilename;\n\n    if (initialData?.length > 0) {\n      // Prevent any possible issues by only transferring a Uint8Array that\n      // completely \"utilizes\" its underlying ArrayBuffer.\n      const buffer =\n        initialData instanceof Uint8Array &&\n        initialData.byteLength === initialData.buffer.byteLength\n          ? initialData.buffer\n          : new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !disableStream;\n    this._isRangeSupported = !disableRange;\n    this._contentLength = length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData({ begin, chunk }) {\n    // Prevent any possible issues by only transferring a Uint8Array that\n    // completely \"utilizes\" its underlying ArrayBuffer.\n    const buffer =\n      chunk instanceof Uint8Array &&\n      chunk.byteLength === chunk.buffer.byteLength\n        ? chunk.buffer\n        : new Uint8Array(chunk).buffer;\n\n    if (begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      this._rangeReaders[0]?.onProgress?.({ loaded: evt.loaded });\n    } else {\n      this._fullRequestReader?.onProgress?.({\n        loaded: evt.loaded,\n        total: evt.total,\n      });\n    }\n  }\n\n  _onProgressiveDone() {\n    this._fullRequestReader?.progressiveDone();\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = new PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = new PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  PromiseCapability,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (value === undefined) {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\nfunction getArrayBuffer(val) {\n  if (val instanceof Uint8Array) {\n    return val.buffer;\n  }\n  if (val instanceof ArrayBuffer) {\n    return val;\n  }\n  warn(`getArrayBuffer - unexpected data format: ${val}`);\n  return new Uint8Array(val).buffer;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = new PromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._abortController = new AbortController();\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    this.onProgress?.({\n      loaded: this._loaded,\n      total: this._contentLength,\n    });\n\n    return { value: getArrayBuffer(value), done: false };\n  }\n\n  cancel(reason) {\n    this._reader?.cancel(reason);\n    this._abortController.abort();\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = new PromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    this._abortController = new AbortController();\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(this._readCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    this.onProgress?.({ loaded: this._loaded });\n\n    return { value: getArrayBuffer(value), done: false };\n  }\n\n  cancel(reason) {\n    this._reader?.cancel(reason);\n    this._abortController.abort();\n  }\n}\n\nexport { PDFFetchStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    assert(\n      Number.isInteger(rangeChunkSize) && rangeChunkSize > 0,\n      \"rangeChunkSize must be an integer larger than zero.\"\n    );\n  }\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch {\n        // TextDecoder constructor threw - unrecognized encoding.\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replaceAll(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replaceAll(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replaceAll(\"_\", \" \");\n          text = text.replaceAll(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, PromiseCapability, stringToBytes } from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  return stringToBytes(data).buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args = {}) {\n    this.url = url;\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || Object.create(null);\n    this.withCredentials = args.withCredentials || false;\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = new XMLHttpRequest();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = { xhr });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (value === undefined) {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n    pendingRequest.onProgress?.(evt);\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else {\n      pendingRequest.onError?.(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = new PromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(data) {\n    if (data) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: data.chunk, done: false });\n      } else {\n        this._cachedChunks.push(data.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    this._headersReceivedCapability.reject(this._storedError);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(evt) {\n    this.onProgress?.({\n      loaded: evt.loaded,\n      total: evt.lengthComputable ? evt.total : this._contentLength,\n    });\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = new PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n\n    const args = {\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = manager.url;\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this._storedError = undefined;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    this.onClosed?.(this);\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._queuedChunk = null;\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported) {\n      this.onProgress?.({ loaded: evt.loaded });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = new PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  MissingPDFException,\n  PromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const url = __non_webpack_require__(\"url\");\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = new PromiseCapability();\n    this._headersCapability = new PromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = new PromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    this.onProgress?.({\n      loaded: this._loaded,\n      total: this._contentLength,\n    });\n\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = new PromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = new PromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    this.onProgress?.({ loaded: this._loaded });\n\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      const http = __non_webpack_require__(\"http\");\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      const https = __non_webpack_require__(\"https\");\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (value === undefined) {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      const http = __non_webpack_require__(\"http\");\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      const https = __non_webpack_require__(\"https\");\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    const fs = __non_webpack_require__(\"fs\");\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    const fs = __non_webpack_require__(\"fs\");\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport { deprecated, DOMSVGFactory } from \"./display_utils.js\";\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNodeJS,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"GENERIC\")) {\n  throw new Error(\n    'Module \"SVGGraphics\" shall not be used outside GENERIC builds.'\n  );\n}\n\nconst SVG_DEFAULTS = {\n  fontStyle: \"normal\",\n  fontWeight: \"normal\",\n  fillColor: \"#000000\",\n};\nconst XML_NS = \"http://www.w3.org/XML/1998/namespace\";\nconst XLINK_NS = \"http://www.w3.org/1999/xlink\";\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\nconst createObjectURL = function (\n  data,\n  contentType = \"\",\n  forceDataSchema = false\n) {\n  if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n};\n\nconst convertImgDataToPng = (function () {\n  const PNG_HEADER = new Uint8Array([\n    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n  ]);\n  const CHUNK_WRAPPER_SIZE = 12;\n\n  const crcTable = new Int32Array(256);\n  for (let i = 0; i < 256; i++) {\n    let c = i;\n    for (let h = 0; h < 8; h++) {\n      c = c & 1 ? 0xedb88320 ^ ((c >> 1) & 0x7fffffff) : (c >> 1) & 0x7fffffff;\n    }\n    crcTable[i] = c;\n  }\n\n  function crc32(data, start, end) {\n    let crc = -1;\n    for (let i = start; i < end; i++) {\n      const a = (crc ^ data[i]) & 0xff;\n      const b = crcTable[a];\n      crc = (crc >>> 8) ^ b;\n    }\n    return crc ^ -1;\n  }\n\n  function writePngChunk(type, body, data, offset) {\n    let p = offset;\n    const len = body.length;\n\n    data[p] = (len >> 24) & 0xff;\n    data[p + 1] = (len >> 16) & 0xff;\n    data[p + 2] = (len >> 8) & 0xff;\n    data[p + 3] = len & 0xff;\n    p += 4;\n\n    data[p] = type.charCodeAt(0) & 0xff;\n    data[p + 1] = type.charCodeAt(1) & 0xff;\n    data[p + 2] = type.charCodeAt(2) & 0xff;\n    data[p + 3] = type.charCodeAt(3) & 0xff;\n    p += 4;\n\n    data.set(body, p);\n    p += body.length;\n\n    const crc = crc32(data, offset + 4, p);\n    data[p] = (crc >> 24) & 0xff;\n    data[p + 1] = (crc >> 16) & 0xff;\n    data[p + 2] = (crc >> 8) & 0xff;\n    data[p + 3] = crc & 0xff;\n  }\n\n  function adler32(data, start, end) {\n    let a = 1;\n    let b = 0;\n    for (let i = start; i < end; ++i) {\n      a = (a + (data[i] & 0xff)) % 65521;\n      b = (b + a) % 65521;\n    }\n    return (b << 16) | a;\n  }\n\n  /**\n   * @param {Uint8Array} literals The input data.\n   * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n   *   This is the required format for compressed streams in the PNG format:\n   *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n   */\n  function deflateSync(literals) {\n    if (!isNodeJS) {\n      // zlib is certainly not available outside of Node.js. We can either use\n      // the pako library for client-side DEFLATE compression, or use the\n      // canvas API of the browser to obtain a more optimal PNG file.\n      return deflateSyncUncompressed(literals);\n    }\n    try {\n      // NOTE: This implementation is far from perfect, but already way better\n      // than not applying any compression.\n      //\n      // A better algorithm will try to choose a good predictor/filter and\n      // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n      //\n      // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n      // Node v3.0.0   Buffer inherits from Uint8Array.\n      // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n      const input =\n        // eslint-disable-next-line no-undef\n        parseInt(process.versions.node) >= 8 ? literals : Buffer.from(literals);\n      const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n        level: 9,\n      });\n      return output instanceof Uint8Array ? output : new Uint8Array(output);\n    } catch (e) {\n      warn(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n    }\n\n    return deflateSyncUncompressed(literals);\n  }\n\n  // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n  function deflateSyncUncompressed(literals) {\n    let len = literals.length;\n    const maxBlockLength = 0xffff;\n\n    const deflateBlocks = Math.ceil(len / maxBlockLength);\n    const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n    let pi = 0;\n    idat[pi++] = 0x78; // compression method and flags\n    idat[pi++] = 0x9c; // flags\n\n    let pos = 0;\n    while (len > maxBlockLength) {\n      // writing non-final DEFLATE blocks type 0 and length of 65535\n      idat[pi++] = 0x00;\n      idat[pi++] = 0xff;\n      idat[pi++] = 0xff;\n      idat[pi++] = 0x00;\n      idat[pi++] = 0x00;\n      idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n      pi += maxBlockLength;\n      pos += maxBlockLength;\n      len -= maxBlockLength;\n    }\n\n    // writing non-final DEFLATE blocks type 0\n    idat[pi++] = 0x01;\n    idat[pi++] = len & 0xff;\n    idat[pi++] = (len >> 8) & 0xff;\n    idat[pi++] = ~len & 0xffff & 0xff;\n    idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n    idat.set(literals.subarray(pos), pi);\n    pi += literals.length - pos;\n\n    const adler = adler32(literals, 0, literals.length); // checksum\n    idat[pi++] = (adler >> 24) & 0xff;\n    idat[pi++] = (adler >> 16) & 0xff;\n    idat[pi++] = (adler >> 8) & 0xff;\n    idat[pi++] = adler & 0xff;\n    return idat;\n  }\n\n  function encode(imgData, kind, forceDataSchema, isMask) {\n    const width = imgData.width;\n    const height = imgData.height;\n    let bitDepth, colorType, lineSize;\n    const bytes = imgData.data;\n\n    switch (kind) {\n      case ImageKind.GRAYSCALE_1BPP:\n        colorType = 0;\n        bitDepth = 1;\n        lineSize = (width + 7) >> 3;\n        break;\n      case ImageKind.RGB_24BPP:\n        colorType = 2;\n        bitDepth = 8;\n        lineSize = width * 3;\n        break;\n      case ImageKind.RGBA_32BPP:\n        colorType = 6;\n        bitDepth = 8;\n        lineSize = width * 4;\n        break;\n      default:\n        throw new Error(\"invalid format\");\n    }\n\n    // prefix every row with predictor 0\n    const literals = new Uint8Array((1 + lineSize) * height);\n    let offsetLiterals = 0,\n      offsetBytes = 0;\n    for (let y = 0; y < height; ++y) {\n      literals[offsetLiterals++] = 0; // no prediction\n      literals.set(\n        bytes.subarray(offsetBytes, offsetBytes + lineSize),\n        offsetLiterals\n      );\n      offsetBytes += lineSize;\n      offsetLiterals += lineSize;\n    }\n\n    if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n      // inverting for image masks\n      offsetLiterals = 0;\n      for (let y = 0; y < height; y++) {\n        offsetLiterals++; // skipping predictor\n        for (let i = 0; i < lineSize; i++) {\n          literals[offsetLiterals++] ^= 0xff;\n        }\n      }\n    }\n\n    const ihdr = new Uint8Array([\n      (width >> 24) & 0xff,\n      (width >> 16) & 0xff,\n      (width >> 8) & 0xff,\n      width & 0xff,\n      (height >> 24) & 0xff,\n      (height >> 16) & 0xff,\n      (height >> 8) & 0xff,\n      height & 0xff,\n      bitDepth, // bit depth\n      colorType, // color type\n      0x00, // compression method\n      0x00, // filter method\n      0x00, // interlace method\n    ]);\n    const idat = deflateSync(literals);\n\n    // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n    const pngLength =\n      PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n    const data = new Uint8Array(pngLength);\n    let offset = 0;\n    data.set(PNG_HEADER, offset);\n    offset += PNG_HEADER.length;\n    writePngChunk(\"IHDR\", ihdr, data, offset);\n    offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n    writePngChunk(\"IDATA\", idat, data, offset);\n    offset += CHUNK_WRAPPER_SIZE + idat.length;\n    writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n    return createObjectURL(data, \"image/png\", forceDataSchema);\n  }\n\n  // eslint-disable-next-line no-shadow\n  return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n    const kind =\n      imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n    return encode(imgData, kind, forceDataSchema, isMask);\n  };\n})();\n\nclass SVGExtraState {\n  constructor() {\n    this.fontSizeScale = 1;\n    this.fontWeight = SVG_DEFAULTS.fontWeight;\n    this.fontSize = 0;\n\n    this.textMatrix = IDENTITY_MATRIX;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textMatrixScale = 1;\n\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n\n    // Default foreground and background colors\n    this.fillColor = SVG_DEFAULTS.fillColor;\n    this.strokeColor = \"#000000\";\n\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.lineJoin = \"\";\n    this.lineCap = \"\";\n    this.miterLimit = 0;\n\n    this.dashArray = [];\n    this.dashPhase = 0;\n\n    this.dependencies = [];\n\n    // Clipping\n    this.activeClipUrl = null;\n    this.clipGroup = null;\n\n    this.maskId = \"\";\n  }\n\n  clone() {\n    return Object.create(this);\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nfunction opListToTree(opList) {\n  let opTree = [];\n  const tmp = [];\n\n  for (const opListElement of opList) {\n    if (opListElement.fn === \"save\") {\n      opTree.push({ fnId: 92, fn: \"group\", items: [] });\n      tmp.push(opTree);\n      opTree = opTree.at(-1).items;\n      continue;\n    }\n\n    if (opListElement.fn === \"restore\") {\n      opTree = tmp.pop();\n    } else {\n      opTree.push(opListElement);\n    }\n  }\n  return opTree;\n}\n\n/**\n * Format a float number as a string.\n *\n * @param value {number} - The float number to format.\n * @returns {string}\n */\nfunction pf(value) {\n  if (Number.isInteger(value)) {\n    return value.toString();\n  }\n  const s = value.toFixed(10);\n  let i = s.length - 1;\n  if (s[i] !== \"0\") {\n    return s;\n  }\n\n  // Remove trailing zeros.\n  do {\n    i--;\n  } while (s[i] === \"0\");\n  return s.substring(0, s[i] === \".\" ? i : i + 1);\n}\n\n/**\n * Format a transform matrix as a string. The standard rotation, scale and\n * translation matrices are replaced by their shorter forms, and for\n * identity matrices an empty string is returned to save memory.\n *\n * @param m {Array} - The transform matrix to format.\n * @returns {string}\n */\nfunction pm(m) {\n  if (m[4] === 0 && m[5] === 0) {\n    if (m[1] === 0 && m[2] === 0) {\n      if (m[0] === 1 && m[3] === 1) {\n        return \"\";\n      }\n      return `scale(${pf(m[0])} ${pf(m[3])})`;\n    }\n    if (m[0] === m[3] && m[1] === -m[2]) {\n      const a = (Math.acos(m[0]) * 180) / Math.PI;\n      return `rotate(${pf(a)})`;\n    }\n  } else if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n    return `translate(${pf(m[4])} ${pf(m[5])})`;\n  }\n  return (\n    `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n    `${pf(m[5])})`\n  );\n}\n\n// The counts below are relevant for all pages, so they have to be global\n// instead of being members of `SVGGraphics` (which is recreated for\n// each page).\nlet clipCount = 0;\nlet maskCount = 0;\nlet shadingCount = 0;\n\nclass SVGGraphics {\n  constructor(commonObjs, objs, forceDataSchema = false) {\n    deprecated(\n      \"The SVG back-end is no longer maintained and *may* be removed in the future.\"\n    );\n    this.svgFactory = new DOMSVGFactory();\n\n    this.current = new SVGExtraState();\n    this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n    this.transformStack = [];\n    this.extraStack = [];\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n\n    this.embedFonts = false;\n    this.embeddedFonts = Object.create(null);\n    this.cssStyle = null;\n    this.forceDataSchema = !!forceDataSchema;\n\n    // In `src/shared/util.js` the operator names are mapped to IDs.\n    // The list below represents the reverse of that, i.e., it maps IDs\n    // to operator names.\n    this._operatorIdMapping = [];\n    for (const op in OPS) {\n      this._operatorIdMapping[OPS[op]] = op;\n    }\n  }\n\n  getObject(data, fallback = null) {\n    if (typeof data === \"string\") {\n      return data.startsWith(\"g_\")\n        ? this.commonObjs.get(data)\n        : this.objs.get(data);\n    }\n    return fallback;\n  }\n\n  save() {\n    this.transformStack.push(this.transformMatrix);\n    const old = this.current;\n    this.extraStack.push(old);\n    this.current = old.clone();\n  }\n\n  restore() {\n    this.transformMatrix = this.transformStack.pop();\n    this.current = this.extraStack.pop();\n    this.pendingClip = null;\n    this.tgrp = null;\n  }\n\n  group(items) {\n    this.save();\n    this.executeOpTree(items);\n    this.restore();\n  }\n\n  loadDependencies(operatorList) {\n    const fnArray = operatorList.fnArray;\n    const argsArray = operatorList.argsArray;\n\n    for (let i = 0, ii = fnArray.length; i < ii; i++) {\n      if (fnArray[i] !== OPS.dependency) {\n        continue;\n      }\n\n      for (const obj of argsArray[i]) {\n        const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n        const promise = new Promise(resolve => {\n          objsPool.get(obj, resolve);\n        });\n        this.current.dependencies.push(promise);\n      }\n    }\n    return Promise.all(this.current.dependencies);\n  }\n\n  transform(a, b, c, d, e, f) {\n    const transformMatrix = [a, b, c, d, e, f];\n    this.transformMatrix = Util.transform(\n      this.transformMatrix,\n      transformMatrix\n    );\n    this.tgrp = null;\n  }\n\n  getSVG(operatorList, viewport) {\n    this.viewport = viewport;\n\n    const svgElement = this._initialize(viewport);\n    return this.loadDependencies(operatorList).then(() => {\n      this.transformMatrix = IDENTITY_MATRIX;\n      this.executeOpTree(this.convertOpList(operatorList));\n      return svgElement;\n    });\n  }\n\n  convertOpList(operatorList) {\n    const operatorIdMapping = this._operatorIdMapping;\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    const opList = [];\n    for (let i = 0, ii = fnArray.length; i < ii; i++) {\n      const fnId = fnArray[i];\n      opList.push({\n        fnId,\n        fn: operatorIdMapping[fnId],\n        args: argsArray[i],\n      });\n    }\n    return opListToTree(opList);\n  }\n\n  executeOpTree(opTree) {\n    for (const opTreeElement of opTree) {\n      const fn = opTreeElement.fn;\n      const fnId = opTreeElement.fnId;\n      const args = opTreeElement.args;\n\n      switch (fnId | 0) {\n        case OPS.beginText:\n          this.beginText();\n          break;\n        case OPS.dependency:\n          // Handled in `loadDependencies`, so no warning should be shown.\n          break;\n        case OPS.setLeading:\n          this.setLeading(args);\n          break;\n        case OPS.setLeadingMoveText:\n          this.setLeadingMoveText(args[0], args[1]);\n          break;\n        case OPS.setFont:\n          this.setFont(args);\n          break;\n        case OPS.showText:\n          this.showText(args[0]);\n          break;\n        case OPS.showSpacedText:\n          this.showText(args[0]);\n          break;\n        case OPS.endText:\n          this.endText();\n          break;\n        case OPS.moveText:\n          this.moveText(args[0], args[1]);\n          break;\n        case OPS.setCharSpacing:\n          this.setCharSpacing(args[0]);\n          break;\n        case OPS.setWordSpacing:\n          this.setWordSpacing(args[0]);\n          break;\n        case OPS.setHScale:\n          this.setHScale(args[0]);\n          break;\n        case OPS.setTextMatrix:\n          this.setTextMatrix(\n            args[0],\n            args[1],\n            args[2],\n            args[3],\n            args[4],\n            args[5]\n          );\n          break;\n        case OPS.setTextRise:\n          this.setTextRise(args[0]);\n          break;\n        case OPS.setTextRenderingMode:\n          this.setTextRenderingMode(args[0]);\n          break;\n        case OPS.setLineWidth:\n          this.setLineWidth(args[0]);\n          break;\n        case OPS.setLineJoin:\n          this.setLineJoin(args[0]);\n          break;\n        case OPS.setLineCap:\n          this.setLineCap(args[0]);\n          break;\n        case OPS.setMiterLimit:\n          this.setMiterLimit(args[0]);\n          break;\n        case OPS.setFillRGBColor:\n          this.setFillRGBColor(args[0], args[1], args[2]);\n          break;\n        case OPS.setStrokeRGBColor:\n          this.setStrokeRGBColor(args[0], args[1], args[2]);\n          break;\n        case OPS.setStrokeColorN:\n          this.setStrokeColorN(args);\n          break;\n        case OPS.setFillColorN:\n          this.setFillColorN(args);\n          break;\n        case OPS.shadingFill:\n          this.shadingFill(args[0]);\n          break;\n        case OPS.setDash:\n          this.setDash(args[0], args[1]);\n          break;\n        case OPS.setRenderingIntent:\n          this.setRenderingIntent(args[0]);\n          break;\n        case OPS.setFlatness:\n          this.setFlatness(args[0]);\n          break;\n        case OPS.setGState:\n          this.setGState(args[0]);\n          break;\n        case OPS.fill:\n          this.fill();\n          break;\n        case OPS.eoFill:\n          this.eoFill();\n          break;\n        case OPS.stroke:\n          this.stroke();\n          break;\n        case OPS.fillStroke:\n          this.fillStroke();\n          break;\n        case OPS.eoFillStroke:\n          this.eoFillStroke();\n          break;\n        case OPS.clip:\n          this.clip(\"nonzero\");\n          break;\n        case OPS.eoClip:\n          this.clip(\"evenodd\");\n          break;\n        case OPS.paintSolidColorImageMask:\n          this.paintSolidColorImageMask();\n          break;\n        case OPS.paintImageXObject:\n          this.paintImageXObject(args[0]);\n          break;\n        case OPS.paintInlineImageXObject:\n          this.paintInlineImageXObject(args[0]);\n          break;\n        case OPS.paintImageMaskXObject:\n          this.paintImageMaskXObject(args[0]);\n          break;\n        case OPS.paintFormXObjectBegin:\n          this.paintFormXObjectBegin(args[0], args[1]);\n          break;\n        case OPS.paintFormXObjectEnd:\n          this.paintFormXObjectEnd();\n          break;\n        case OPS.closePath:\n          this.closePath();\n          break;\n        case OPS.closeStroke:\n          this.closeStroke();\n          break;\n        case OPS.closeFillStroke:\n          this.closeFillStroke();\n          break;\n        case OPS.closeEOFillStroke:\n          this.closeEOFillStroke();\n          break;\n        case OPS.nextLine:\n          this.nextLine();\n          break;\n        case OPS.transform:\n          this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n          break;\n        case OPS.constructPath:\n          this.constructPath(args[0], args[1]);\n          break;\n        case OPS.endPath:\n          this.endPath();\n          break;\n        case 92:\n          this.group(opTreeElement.items);\n          break;\n        default:\n          warn(`Unimplemented operator ${fn}`);\n          break;\n      }\n    }\n  }\n\n  setWordSpacing(wordSpacing) {\n    this.current.wordSpacing = wordSpacing;\n  }\n\n  setCharSpacing(charSpacing) {\n    this.current.charSpacing = charSpacing;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    const current = this.current;\n    current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n    current.textMatrixScale = Math.hypot(a, b);\n\n    current.x = current.lineX = 0;\n    current.y = current.lineY = 0;\n\n    current.xcoords = [];\n    current.ycoords = [];\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n    current.tspan.setAttributeNS(\n      null,\n      \"font-size\",\n      `${pf(current.fontSize)}px`\n    );\n    current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n    current.txtElement = this.svgFactory.createElement(\"svg:text\");\n    current.txtElement.append(current.tspan);\n  }\n\n  beginText() {\n    const current = this.current;\n    current.x = current.lineX = 0;\n    current.y = current.lineY = 0;\n    current.textMatrix = IDENTITY_MATRIX;\n    current.lineMatrix = IDENTITY_MATRIX;\n    current.textMatrixScale = 1;\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.txtElement = this.svgFactory.createElement(\"svg:text\");\n    current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n    current.xcoords = [];\n    current.ycoords = [];\n  }\n\n  moveText(x, y) {\n    const current = this.current;\n    current.x = current.lineX += x;\n    current.y = current.lineY += y;\n\n    current.xcoords = [];\n    current.ycoords = [];\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n    current.tspan.setAttributeNS(\n      null,\n      \"font-size\",\n      `${pf(current.fontSize)}px`\n    );\n    current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return;\n    }\n\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    let x = 0;\n    for (const glyph of glyphs) {\n      if (glyph === null) {\n        // Word break\n        x += fontDirection * wordSpacing;\n        continue;\n      } else if (typeof glyph === \"number\") {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        let vx;\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n        vx = -vx * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (glyph.isInFont || font.missingFile) {\n        current.xcoords.push(current.x + scaledX);\n        if (vertical) {\n          current.ycoords.push(-current.y + scaledY);\n        }\n        current.tspan.textContent += character;\n      } else {\n        // TODO: To assist with text selection, we should replace the missing\n        // character with a space character if charWidth is not zero.\n        // But we cannot just do \"character = ' '\", because the ' ' character\n        // might actually map to a different glyph.\n      }\n\n      const charWidth = vertical\n        ? width * widthAdvanceScale - spacing * fontDirection\n        : width * widthAdvanceScale + spacing * fontDirection;\n\n      x += charWidth;\n    }\n    current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n    if (vertical) {\n      current.tspan.setAttributeNS(\n        null,\n        \"y\",\n        current.ycoords.map(pf).join(\" \")\n      );\n    } else {\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n\n    current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n    current.tspan.setAttributeNS(\n      null,\n      \"font-size\",\n      `${pf(current.fontSize)}px`\n    );\n    if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n      current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n    }\n    if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n      current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n    }\n\n    const fillStrokeMode =\n      current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    if (\n      fillStrokeMode === TextRenderingMode.FILL ||\n      fillStrokeMode === TextRenderingMode.FILL_STROKE\n    ) {\n      if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n        current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n      }\n      if (current.fillAlpha < 1) {\n        current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n      }\n    } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n      // Workaround for Firefox: We must set fill=\"transparent\" because\n      // fill=\"none\" would generate an empty clipping path.\n      current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n    } else {\n      current.tspan.setAttributeNS(null, \"fill\", \"none\");\n    }\n\n    if (\n      fillStrokeMode === TextRenderingMode.STROKE ||\n      fillStrokeMode === TextRenderingMode.FILL_STROKE\n    ) {\n      const lineWidthScale = 1 / (current.textMatrixScale || 1);\n      this._setStrokeAttributes(current.tspan, lineWidthScale);\n    }\n\n    // Include the text rise in the text matrix since the `pm` function\n    // creates the SVG element's `translate` entry (work on a copy to avoid\n    // altering the original text matrix).\n    let textMatrix = current.textMatrix;\n    if (current.textRise !== 0) {\n      textMatrix = textMatrix.slice();\n      textMatrix[5] += current.textRise;\n    }\n\n    current.txtElement.setAttributeNS(\n      null,\n      \"transform\",\n      `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n    );\n    current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n    current.txtElement.append(current.tspan);\n    current.txtgrp.append(current.txtElement);\n\n    this._ensureTransformGroup().append(current.txtElement);\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  addFontStyle(fontObj) {\n    if (!fontObj.data) {\n      throw new Error(\n        \"addFontStyle: No font data available, \" +\n          'ensure that the \"fontExtraProperties\" API parameter is set.'\n      );\n    }\n    if (!this.cssStyle) {\n      this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n      this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n      this.defs.append(this.cssStyle);\n    }\n\n    const url = createObjectURL(\n      fontObj.data,\n      fontObj.mimetype,\n      this.forceDataSchema\n    );\n    this.cssStyle.textContent +=\n      `@font-face { font-family: \"${fontObj.loadedName}\";` +\n      ` src: url(${url}); }\\n`;\n  }\n\n  setFont(details) {\n    const current = this.current;\n    const fontObj = this.commonObjs.get(details[0]);\n    let size = details[1];\n    current.font = fontObj;\n\n    if (\n      this.embedFonts &&\n      !fontObj.missingFile &&\n      !this.embeddedFonts[fontObj.loadedName]\n    ) {\n      this.addFontStyle(fontObj);\n      this.embeddedFonts[fontObj.loadedName] = fontObj;\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n    current.fontSize = size;\n    current.fontFamily = fontObj.loadedName;\n    current.fontWeight = bold;\n    current.fontStyle = italic;\n\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    current.xcoords = [];\n    current.ycoords = [];\n  }\n\n  endText() {\n    const current = this.current;\n    if (\n      current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n      current.txtElement?.hasChildNodes()\n    ) {\n      // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n      current.element = current.txtElement;\n      this.clip(\"nonzero\");\n      this.endPath();\n    }\n  }\n\n  // Path properties\n  setLineWidth(width) {\n    if (width > 0) {\n      this.current.lineWidth = width;\n    }\n  }\n\n  setLineCap(style) {\n    this.current.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.current.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.current.miterLimit = limit;\n  }\n\n  setStrokeAlpha(strokeAlpha) {\n    this.current.strokeAlpha = strokeAlpha;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    this.current.strokeColor = Util.makeHexColor(r, g, b);\n  }\n\n  setFillAlpha(fillAlpha) {\n    this.current.fillAlpha = fillAlpha;\n  }\n\n  setFillRGBColor(r, g, b) {\n    this.current.fillColor = Util.makeHexColor(r, g, b);\n    this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    this.current.xcoords = [];\n    this.current.ycoords = [];\n  }\n\n  setStrokeColorN(args) {\n    this.current.strokeColor = this._makeColorN_Pattern(args);\n  }\n\n  setFillColorN(args) {\n    this.current.fillColor = this._makeColorN_Pattern(args);\n  }\n\n  shadingFill(args) {\n    const { width, height } = this.viewport;\n    const inv = Util.inverseTransform(this.transformMatrix);\n    const [x0, y0, x1, y1] = Util.getAxialAlignedBoundingBox(\n      [0, 0, width, height],\n      inv\n    );\n\n    const rect = this.svgFactory.createElement(\"svg:rect\");\n    rect.setAttributeNS(null, \"x\", x0);\n    rect.setAttributeNS(null, \"y\", y0);\n    rect.setAttributeNS(null, \"width\", x1 - x0);\n    rect.setAttributeNS(null, \"height\", y1 - y0);\n    rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n    if (this.current.fillAlpha < 1) {\n      rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n    }\n    this._ensureTransformGroup().append(rect);\n  }\n\n  /**\n   * @private\n   */\n  _makeColorN_Pattern(args) {\n    if (args[0] === \"TilingPattern\") {\n      return this._makeTilingPattern(args);\n    }\n    return this._makeShadingPattern(args);\n  }\n\n  /**\n   * @private\n   */\n  _makeTilingPattern(args) {\n    const color = args[1];\n    const operatorList = args[2];\n    const matrix = args[3] || IDENTITY_MATRIX;\n    const [x0, y0, x1, y1] = args[4];\n    const xstep = args[5];\n    const ystep = args[6];\n    const paintType = args[7];\n\n    const tilingId = `shading${shadingCount++}`;\n    const [tx0, ty0, tx1, ty1] = Util.normalizeRect([\n      ...Util.applyTransform([x0, y0], matrix),\n      ...Util.applyTransform([x1, y1], matrix),\n    ]);\n    const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n    const txstep = xstep * xscale;\n    const tystep = ystep * yscale;\n\n    const tiling = this.svgFactory.createElement(\"svg:pattern\");\n    tiling.setAttributeNS(null, \"id\", tilingId);\n    tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n    tiling.setAttributeNS(null, \"width\", txstep);\n    tiling.setAttributeNS(null, \"height\", tystep);\n    tiling.setAttributeNS(null, \"x\", `${tx0}`);\n    tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n    // Save current state.\n    const svg = this.svg;\n    const transformMatrix = this.transformMatrix;\n    const fillColor = this.current.fillColor;\n    const strokeColor = this.current.strokeColor;\n\n    const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n    this.svg = bbox;\n    this.transformMatrix = matrix;\n    if (paintType === 2) {\n      const cssColor = Util.makeHexColor(...color);\n      this.current.fillColor = cssColor;\n      this.current.strokeColor = cssColor;\n    }\n    this.executeOpTree(this.convertOpList(operatorList));\n\n    // Restore saved state.\n    this.svg = svg;\n    this.transformMatrix = transformMatrix;\n    this.current.fillColor = fillColor;\n    this.current.strokeColor = strokeColor;\n\n    tiling.append(bbox.childNodes[0]);\n    this.defs.append(tiling);\n    return `url(#${tilingId})`;\n  }\n\n  /**\n   * @private\n   */\n  _makeShadingPattern(args) {\n    if (typeof args === \"string\") {\n      args = this.objs.get(args);\n    }\n    switch (args[0]) {\n      case \"RadialAxial\":\n        const shadingId = `shading${shadingCount++}`;\n        const colorStops = args[3];\n        let gradient;\n\n        switch (args[1]) {\n          case \"axial\":\n            const point0 = args[4];\n            const point1 = args[5];\n            gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n            gradient.setAttributeNS(null, \"id\", shadingId);\n            gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n            gradient.setAttributeNS(null, \"x1\", point0[0]);\n            gradient.setAttributeNS(null, \"y1\", point0[1]);\n            gradient.setAttributeNS(null, \"x2\", point1[0]);\n            gradient.setAttributeNS(null, \"y2\", point1[1]);\n            break;\n          case \"radial\":\n            const focalPoint = args[4];\n            const circlePoint = args[5];\n            const focalRadius = args[6];\n            const circleRadius = args[7];\n            gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n            gradient.setAttributeNS(null, \"id\", shadingId);\n            gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n            gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n            gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n            gradient.setAttributeNS(null, \"r\", circleRadius);\n            gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n            gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n            gradient.setAttributeNS(null, \"fr\", focalRadius);\n            break;\n          default:\n            throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n        }\n        for (const colorStop of colorStops) {\n          const stop = this.svgFactory.createElement(\"svg:stop\");\n          stop.setAttributeNS(null, \"offset\", colorStop[0]);\n          stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n          gradient.append(stop);\n        }\n        this.defs.append(gradient);\n        return `url(#${shadingId})`;\n      case \"Mesh\":\n        warn(\"Unimplemented pattern Mesh\");\n        return null;\n      case \"Dummy\":\n        return \"hotpink\";\n      default:\n        throw new Error(`Unknown IR type: ${args[0]}`);\n    }\n  }\n\n  setDash(dashArray, dashPhase) {\n    this.current.dashArray = dashArray;\n    this.current.dashPhase = dashPhase;\n  }\n\n  constructPath(ops, args) {\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let d = [];\n    let j = 0;\n\n    for (const op of ops) {\n      switch (op | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n          const xw = x + width;\n          const yh = y + height;\n          d.push(\n            \"M\",\n            pf(x),\n            pf(y),\n            \"L\",\n            pf(xw),\n            pf(y),\n            \"L\",\n            pf(xw),\n            pf(yh),\n            \"L\",\n            pf(x),\n            pf(yh),\n            \"Z\"\n          );\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          d.push(\"M\", pf(x), pf(y));\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          d.push(\"L\", pf(x), pf(y));\n          break;\n        case OPS.curveTo:\n          x = args[j + 4];\n          y = args[j + 5];\n          d.push(\n            \"C\",\n            pf(args[j]),\n            pf(args[j + 1]),\n            pf(args[j + 2]),\n            pf(args[j + 3]),\n            pf(x),\n            pf(y)\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          d.push(\n            \"C\",\n            pf(x),\n            pf(y),\n            pf(args[j]),\n            pf(args[j + 1]),\n            pf(args[j + 2]),\n            pf(args[j + 3])\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          x = args[j + 2];\n          y = args[j + 3];\n          d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n          j += 4;\n          break;\n        case OPS.closePath:\n          d.push(\"Z\");\n          break;\n      }\n    }\n\n    d = d.join(\" \");\n\n    if (\n      current.path &&\n      ops.length > 0 &&\n      ops[0] !== OPS.rectangle &&\n      ops[0] !== OPS.moveTo\n    ) {\n      // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n      // probably been divided into two OPS.constructPath operators by\n      // OperatorList. Append the commands to the previous path element.\n      d = current.path.getAttributeNS(null, \"d\") + d;\n    } else {\n      current.path = this.svgFactory.createElement(\"svg:path\");\n      this._ensureTransformGroup().append(current.path);\n    }\n\n    current.path.setAttributeNS(null, \"d\", d);\n    current.path.setAttributeNS(null, \"fill\", \"none\");\n\n    // Saving a reference in current.element so that it can be addressed\n    // in 'fill' and 'stroke'\n    current.element = current.path;\n    current.setCurrentPoint(x, y);\n  }\n\n  endPath() {\n    const current = this.current;\n\n    // Painting operators end a path.\n    current.path = null;\n\n    if (!this.pendingClip) {\n      return;\n    }\n    if (!current.element) {\n      this.pendingClip = null;\n      return;\n    }\n\n    // Add the current path to a clipping path.\n    const clipId = `clippath${clipCount++}`;\n    const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n    clipPath.setAttributeNS(null, \"id\", clipId);\n    clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n    // A deep clone is needed when text is used as a clipping path.\n    const clipElement = current.element.cloneNode(true);\n    if (this.pendingClip === \"evenodd\") {\n      clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n    } else {\n      clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n    }\n    this.pendingClip = null;\n    clipPath.append(clipElement);\n    this.defs.append(clipPath);\n\n    if (current.activeClipUrl) {\n      // The previous clipping group content can go out of order -- resetting\n      // cached clipGroups.\n      current.clipGroup = null;\n      for (const prev of this.extraStack) {\n        prev.clipGroup = null;\n      }\n      // Intersect with the previous clipping path.\n      clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n    }\n    current.activeClipUrl = `url(#${clipId})`;\n\n    this.tgrp = null;\n  }\n\n  clip(type) {\n    this.pendingClip = type;\n  }\n\n  closePath() {\n    const current = this.current;\n    if (current.path) {\n      const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n      current.path.setAttributeNS(null, \"d\", d);\n    }\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setTextRise(textRise) {\n    this.current.textRise = textRise;\n  }\n\n  setTextRenderingMode(textRenderingMode) {\n    this.current.textRenderingMode = textRenderingMode;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (const [key, value] of states) {\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value);\n          break;\n        case \"CA\":\n          this.setStrokeAlpha(value);\n          break;\n        case \"ca\":\n          this.setFillAlpha(value);\n          break;\n        default:\n          warn(`Unimplemented graphic state operator ${key}`);\n          break;\n      }\n    }\n  }\n\n  fill() {\n    const current = this.current;\n    if (current.element) {\n      current.element.setAttributeNS(null, \"fill\", current.fillColor);\n      current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n      this.endPath();\n    }\n  }\n\n  stroke() {\n    const current = this.current;\n    if (current.element) {\n      this._setStrokeAttributes(current.element);\n      current.element.setAttributeNS(null, \"fill\", \"none\");\n      this.endPath();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setStrokeAttributes(element, lineWidthScale = 1) {\n    const current = this.current;\n    let dashArray = current.dashArray;\n    if (lineWidthScale !== 1 && dashArray.length > 0) {\n      dashArray = dashArray.map(function (value) {\n        return lineWidthScale * value;\n      });\n    }\n    element.setAttributeNS(null, \"stroke\", current.strokeColor);\n    element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n    element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n    element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n    element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n    element.setAttributeNS(\n      null,\n      \"stroke-width\",\n      pf(lineWidthScale * current.lineWidth) + \"px\"\n    );\n    element.setAttributeNS(\n      null,\n      \"stroke-dasharray\",\n      dashArray.map(pf).join(\" \")\n    );\n    element.setAttributeNS(\n      null,\n      \"stroke-dashoffset\",\n      pf(lineWidthScale * current.dashPhase) + \"px\"\n    );\n  }\n\n  eoFill() {\n    this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n    this.fill();\n  }\n\n  fillStroke() {\n    // Order is important since stroke wants fill to be none.\n    // First stroke, then if fill needed, it will be overwritten.\n    this.stroke();\n    this.fill();\n  }\n\n  eoFillStroke() {\n    this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n    this.fillStroke();\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.closePath();\n    this.eoFillStroke();\n  }\n\n  paintSolidColorImageMask() {\n    const rect = this.svgFactory.createElement(\"svg:rect\");\n    rect.setAttributeNS(null, \"x\", \"0\");\n    rect.setAttributeNS(null, \"y\", \"0\");\n    rect.setAttributeNS(null, \"width\", \"1px\");\n    rect.setAttributeNS(null, \"height\", \"1px\");\n    rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n    this._ensureTransformGroup().append(rect);\n  }\n\n  paintImageXObject(objId) {\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      warn(`Dependent image with object ID ${objId} is not ready yet`);\n      return;\n    }\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintInlineImageXObject(imgData, mask) {\n    const width = imgData.width;\n    const height = imgData.height;\n\n    const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n    const cliprect = this.svgFactory.createElement(\"svg:rect\");\n    cliprect.setAttributeNS(null, \"x\", \"0\");\n    cliprect.setAttributeNS(null, \"y\", \"0\");\n    cliprect.setAttributeNS(null, \"width\", pf(width));\n    cliprect.setAttributeNS(null, \"height\", pf(height));\n    this.current.element = cliprect;\n    this.clip(\"nonzero\");\n\n    const imgEl = this.svgFactory.createElement(\"svg:image\");\n    imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n    imgEl.setAttributeNS(null, \"x\", \"0\");\n    imgEl.setAttributeNS(null, \"y\", pf(-height));\n    imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n    imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n    imgEl.setAttributeNS(\n      null,\n      \"transform\",\n      `scale(${pf(1 / width)} ${pf(-1 / height)})`\n    );\n    if (mask) {\n      mask.append(imgEl);\n    } else {\n      this._ensureTransformGroup().append(imgEl);\n    }\n  }\n\n  paintImageMaskXObject(img) {\n    const imgData = this.getObject(img.data, img);\n    if (imgData.bitmap) {\n      warn(\n        \"paintImageMaskXObject: ImageBitmap support is not implemented, \" +\n          \"ensure that the `isOffscreenCanvasSupported` API parameter is disabled.\"\n      );\n      return;\n    }\n    const current = this.current;\n    const width = imgData.width;\n    const height = imgData.height;\n    const fillColor = current.fillColor;\n\n    current.maskId = `mask${maskCount++}`;\n    const mask = this.svgFactory.createElement(\"svg:mask\");\n    mask.setAttributeNS(null, \"id\", current.maskId);\n\n    const rect = this.svgFactory.createElement(\"svg:rect\");\n    rect.setAttributeNS(null, \"x\", \"0\");\n    rect.setAttributeNS(null, \"y\", \"0\");\n    rect.setAttributeNS(null, \"width\", pf(width));\n    rect.setAttributeNS(null, \"height\", pf(height));\n    rect.setAttributeNS(null, \"fill\", fillColor);\n    rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n    this.defs.append(mask);\n    this._ensureTransformGroup().append(rect);\n\n    this.paintInlineImageXObject(imgData, mask);\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform(\n        matrix[0],\n        matrix[1],\n        matrix[2],\n        matrix[3],\n        matrix[4],\n        matrix[5]\n      );\n    }\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", bbox[0]);\n      cliprect.setAttributeNS(null, \"y\", bbox[1]);\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {}\n\n  /**\n   * @private\n   */\n  _initialize(viewport) {\n    const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n    // Create the definitions element.\n    const definitions = this.svgFactory.createElement(\"svg:defs\");\n    svg.append(definitions);\n    this.defs = definitions;\n\n    // Create the root group element, which acts a container for all other\n    // groups and applies the viewport transform.\n    const rootGroup = this.svgFactory.createElement(\"svg:g\");\n    rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n    svg.append(rootGroup);\n\n    // For the construction of the SVG image we are only interested in the\n    // root group, so we expose it as the entry point of the SVG image for\n    // the other code in this class.\n    this.svg = rootGroup;\n\n    return svg;\n  }\n\n  /**\n   * @private\n   */\n  _ensureClipGroup() {\n    if (!this.current.clipGroup) {\n      const clipGroup = this.svgFactory.createElement(\"svg:g\");\n      clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n      this.svg.append(clipGroup);\n      this.current.clipGroup = clipGroup;\n    }\n    return this.current.clipGroup;\n  }\n\n  /**\n   * @private\n   */\n  _ensureTransformGroup() {\n    if (!this.tgrp) {\n      this.tgrp = this.svgFactory.createElement(\"svg:g\");\n      this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n      if (this.current.activeClipUrl) {\n        this._ensureClipGroup().append(this.tgrp);\n      } else {\n        this.svg.append(this.tgrp);\n      }\n    }\n    return this.tgrp;\n  }\n}\n\nexport { SVGGraphics };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./api\").TextContent} TextContent */\n\nclass XfaText {\n  /**\n   * Walk an XFA tree and create an array of text nodes that is compatible\n   * with a regular PDFs TextContent. Currently, only TextItem.str is supported,\n   * all other fields and styles haven't been implemented.\n   *\n   * @param {Object} xfa - An XFA fake DOM object.\n   *\n   * @returns {TextContent}\n   */\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null),\n    };\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n      let str = null;\n      const name = node.name;\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n      if (str !== null) {\n        items.push({\n          str,\n        });\n      }\n      if (!node.children) {\n        return;\n      }\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n    walk(xfa);\n    return output;\n  }\n\n  /**\n   * @param {string} name - DOM node name. (lower case)\n   *\n   * @returns {boolean} true if the DOM node should have a corresponding text\n   * node.\n   */\n  static shouldBuildText(name) {\n    return !(\n      name === \"textarea\" ||\n      name === \"input\" ||\n      name === \"option\" ||\n      name === \"select\"\n    );\n  }\n}\n\nexport { XfaText };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"./api\").TextContent} TextContent */\n\nimport {\n  AbortException,\n  FeatureTest,\n  PromiseCapability,\n  Util,\n} from \"../shared/util.js\";\nimport { deprecated, setLayerDimensions } from \"./display_utils.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {ReadableStream | TextContent} textContentSource - Text content to\n *   render, i.e. the value returned by the page's `streamTextContent` or\n *   `getTextContent` method.\n * @property {HTMLElement} container - The DOM node that will contain the text\n *   runs.\n * @property {PageViewport} viewport - The target viewport to properly layout\n *   the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that correspond to\n *   the text items of the textContent input.\n *   This is output and shall initially be set to an empty array.\n * @property {WeakMap<HTMLElement,Object>} [textDivProperties] - Some properties\n *   weakly mapped to the HTML elements used to render the text.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *   the `str` property of the text items of the textContent input.\n *   This is output and shall initially be set to an empty array.\n * @property {boolean} [isOffscreenCanvasSupported] true if we can use\n *   OffscreenCanvas to measure string widths.\n */\n\n/**\n * Text layer update parameters.\n *\n * @typedef {Object} TextLayerUpdateParameters\n * @property {HTMLElement} container - The DOM node that will contain the text\n *   runs.\n * @property {PageViewport} viewport - The target viewport to properly layout\n *   the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that correspond to\n *   the text items of the textContent input.\n *   This is output and shall initially be set to an empty array.\n * @property {WeakMap<HTMLElement,Object>} [textDivProperties] - Some properties\n *   weakly mapped to the HTML elements used to render the text.\n * @property {boolean} [isOffscreenCanvasSupported] true if we can use\n *   OffscreenCanvas to measure string widths.\n * @property {boolean} [mustRotate] true if the text layer must be rotated.\n * @property {boolean} [mustRescale] true if the text layer contents must be\n *   rescaled.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\n\nfunction getCtx(size, isOffscreenCanvasSupported) {\n  let ctx;\n  if (isOffscreenCanvasSupported && FeatureTest.isOffscreenCanvasSupported) {\n    ctx = new OffscreenCanvas(size, size).getContext(\"2d\", { alpha: false });\n  } else {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = size;\n    ctx = canvas.getContext(\"2d\", { alpha: false });\n  }\n\n  return ctx;\n}\n\nfunction getAscent(fontFamily, isOffscreenCanvasSupported) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  const ctx = getCtx(DEFAULT_FONT_SIZE, isOffscreenCanvasSupported);\n\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n  let ascent = metrics.fontBoundingBoxAscent;\n  let descent = Math.abs(metrics.fontBoundingBoxDescent);\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n\n    ctx.canvas.width = ctx.canvas.height = 0;\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.canvas.width = ctx.canvas.height = 0;\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = {\n    angle: 0,\n    canvasWidth: 0,\n    hasText: geom.str !== \"\",\n    hasEOL: geom.hasEOL,\n    fontSize: 0,\n  };\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent =\n    fontHeight * getAscent(style.fontFamily, task._isOffscreenCanvasSupported);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n\n  const scaleFactorStr = \"calc(var(--scale-factor)*\";\n  const divStyle = textDiv.style;\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  if (task._container === task._rootContainer) {\n    divStyle.left = `${((100 * left) / task._pageWidth).toFixed(2)}%`;\n    divStyle.top = `${((100 * top) / task._pageHeight).toFixed(2)}%`;\n  } else {\n    // We're in a marked content span, hence we can't use percents.\n    divStyle.left = `${scaleFactorStr}${left.toFixed(2)}px)`;\n    divStyle.top = `${scaleFactorStr}${top.toFixed(2)}px)`;\n  }\n  divStyle.fontSize = `${scaleFactorStr}${fontHeight.toFixed(2)}px)`;\n  divStyle.fontFamily = style.fontFamily;\n\n  textDivProperties.fontSize = fontHeight;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (geom.str.length > 1) {\n    shouldScaleText = true;\n  } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    textDivProperties.canvasWidth = style.vertical ? geom.height : geom.width;\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._isReadableStream) {\n    task._layoutText(textDiv);\n  }\n}\n\nfunction layout(params) {\n  const { div, scale, properties, ctx, prevFontSize, prevFontFamily } = params;\n  const { style } = div;\n  let transform = \"\";\n  if (properties.canvasWidth !== 0 && properties.hasText) {\n    const { fontFamily } = style;\n    const { canvasWidth, fontSize } = properties;\n\n    if (prevFontSize !== fontSize || prevFontFamily !== fontFamily) {\n      ctx.font = `${fontSize * scale}px ${fontFamily}`;\n      params.prevFontSize = fontSize;\n      params.prevFontFamily = fontFamily;\n    }\n\n    // Only measure the width for multi-char text divs, see `appendText`.\n    const { width } = ctx.measureText(div.textContent);\n\n    if (width > 0) {\n      transform = `scaleX(${(canvasWidth * scale) / width})`;\n    }\n  }\n  if (properties.angle !== 0) {\n    transform = `rotate(${properties.angle}deg) ${transform}`;\n  }\n  if (transform.length > 0) {\n    style.transform = transform;\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    capability.resolve();\n    return;\n  }\n\n  if (!task._isReadableStream) {\n    for (const textDiv of textDivs) {\n      task._layoutText(textDiv);\n    }\n  }\n  capability.resolve();\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContentSource,\n    container,\n    viewport,\n    textDivs,\n    textDivProperties,\n    textContentItemsStr,\n    isOffscreenCanvasSupported,\n  }) {\n    this._textContentSource = textContentSource;\n    this._isReadableStream = textContentSource instanceof ReadableStream;\n    this._container = this._rootContainer = container;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._isOffscreenCanvasSupported = isOffscreenCanvasSupported;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._textDivProperties = textDivProperties || new WeakMap();\n    this._canceled = false;\n    this._capability = new PromiseCapability();\n    this._layoutTextParams = {\n      prevFontSize: null,\n      prevFontFamily: null,\n      div: null,\n      scale: viewport.scale * (globalThis.devicePixelRatio || 1),\n      properties: null,\n      ctx: getCtx(0, isOffscreenCanvasSupported),\n    };\n    const { pageWidth, pageHeight, pageX, pageY } = viewport.rawDims;\n    this._transform = [1, 0, 0, -1, -pageX, pageY + pageHeight];\n    this._pageWidth = pageWidth;\n    this._pageHeight = pageHeight;\n\n    setLayerDimensions(container, viewport);\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        this._layoutTextParams = null;\n      })\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader\n        .cancel(new AbortException(\"TextLayer task cancelled.\"))\n        .catch(() => {\n          // Avoid \"Uncaught promise\" messages in the console.\n        });\n      this._reader = null;\n    }\n    this._capability.reject(new AbortException(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (const item of items) {\n      if (item.str === undefined) {\n        if (\n          item.type === \"beginMarkedContentProps\" ||\n          item.type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (item.id !== null) {\n            this._container.setAttribute(\"id\", `${item.id}`);\n          }\n          parent.append(this._container);\n        } else if (item.type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(item.str);\n      appendText(this, item, styleCache);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = (this._layoutTextParams.properties =\n      this._textDivProperties.get(textDiv));\n    this._layoutTextParams.div = textDiv;\n    layout(this._layoutTextParams);\n\n    if (textDivProperties.hasText) {\n      this._container.append(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.append(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render() {\n    const capability = new PromiseCapability();\n    let styleCache = Object.create(null);\n\n    if (this._isReadableStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentSource.getReader();\n      pump();\n    } else if (this._textContentSource) {\n      const { items, styles } = this._textContentSource;\n      this._processItems(items, styles);\n      capability.resolve();\n    } else {\n      throw new Error('No \"textContentSource\" parameter specified.');\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      render(this);\n    }, this._capability.reject);\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} params\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(params) {\n  if (\n    (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n    !params.textContentSource &&\n    (params.textContent || params.textContentStream)\n  ) {\n    deprecated(\n      \"The TextLayerRender `textContent`/`textContentStream` parameters \" +\n        \"will be removed in the future, please use `textContentSource` instead.\"\n    );\n    params.textContentSource = params.textContent || params.textContentStream;\n  }\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC && !TESTING\")) {\n    const { container, viewport } = params;\n    const style = getComputedStyle(container);\n    const visibility = style.getPropertyValue(\"visibility\");\n    const scaleFactor = parseFloat(style.getPropertyValue(\"--scale-factor\"));\n\n    if (\n      visibility === \"visible\" &&\n      (!scaleFactor || Math.abs(scaleFactor - viewport.scale) > 1e-5)\n    ) {\n      console.error(\n        \"The `--scale-factor` CSS-variable must be set, \" +\n          \"to the same value as `viewport.scale`, \" +\n          \"either on the `container`-element itself or higher up in the DOM.\"\n      );\n    }\n  }\n  const task = new TextLayerRenderTask(params);\n  task._render();\n  return task;\n}\n\n/**\n * @param {TextLayerUpdateParameters} params\n * @returns {undefined}\n */\nfunction updateTextLayer({\n  container,\n  viewport,\n  textDivs,\n  textDivProperties,\n  isOffscreenCanvasSupported,\n  mustRotate = true,\n  mustRescale = true,\n}) {\n  if (mustRotate) {\n    setLayerDimensions(container, { rotation: viewport.rotation });\n  }\n\n  if (mustRescale) {\n    const ctx = getCtx(0, isOffscreenCanvasSupported);\n    const scale = viewport.scale * (globalThis.devicePixelRatio || 1);\n    const params = {\n      prevFontSize: null,\n      prevFontFamily: null,\n      div: null,\n      scale,\n      properties: null,\n      ctx,\n    };\n    for (const div of textDivs) {\n      params.properties = textDivProperties.get(div);\n      params.div = div;\n      layout(params);\n    }\n  }\n}\n\nexport { renderTextLayer, TextLayerRenderTask, updateTextLayer };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./tools.js\").AnnotationEditorUIManager} AnnotationEditorUIManager */\n/** @typedef {import(\"../display_utils.js\").PageViewport} PageViewport */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../../../web/text_accessibility.js\").TextAccessibilityManager} TextAccessibilityManager */\n/** @typedef {import(\"../../../web/interfaces\").IL10n} IL10n */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../annotation_layer.js\").AnnotationLayer} AnnotationLayer */\n\nimport { AnnotationEditorType, FeatureTest } from \"../../shared/util.js\";\nimport { AnnotationEditor } from \"./editor.js\";\nimport { FreeTextEditor } from \"./freetext.js\";\nimport { InkEditor } from \"./ink.js\";\nimport { setLayerDimensions } from \"../display_utils.js\";\nimport { StampEditor } from \"./stamp.js\";\n\n/**\n * @typedef {Object} AnnotationEditorLayerOptions\n * @property {Object} mode\n * @property {HTMLDivElement} div\n * @property {AnnotationEditorUIManager} uiManager\n * @property {boolean} enabled\n * @property {TextAccessibilityManager} [accessibilityManager]\n * @property {number} pageIndex\n * @property {IL10n} l10n\n * @property {AnnotationLayer} [annotationLayer]\n * @property {PageViewport} viewport\n */\n\n/**\n * @typedef {Object} RenderEditorLayerOptions\n * @property {PageViewport} viewport\n */\n\n/**\n * Manage all the different editors on a page.\n */\nclass AnnotationEditorLayer {\n  #accessibilityManager;\n\n  #allowClick = false;\n\n  #annotationLayer = null;\n\n  #boundPointerup = this.pointerup.bind(this);\n\n  #boundPointerdown = this.pointerdown.bind(this);\n\n  #editors = new Map();\n\n  #hadPointerDown = false;\n\n  #isCleaningUp = false;\n\n  #isDisabling = false;\n\n  #uiManager;\n\n  static _initialized = false;\n\n  /**\n   * @param {AnnotationEditorLayerOptions} options\n   */\n  constructor({\n    uiManager,\n    pageIndex,\n    div,\n    accessibilityManager,\n    annotationLayer,\n    viewport,\n    l10n,\n  }) {\n    const editorTypes = [FreeTextEditor, InkEditor, StampEditor];\n    if (!AnnotationEditorLayer._initialized) {\n      AnnotationEditorLayer._initialized = true;\n      for (const editorType of editorTypes) {\n        editorType.initialize(l10n);\n      }\n    }\n    uiManager.registerEditorTypes(editorTypes);\n\n    this.#uiManager = uiManager;\n    this.pageIndex = pageIndex;\n    this.div = div;\n    this.#accessibilityManager = accessibilityManager;\n    this.#annotationLayer = annotationLayer;\n    this.viewport = viewport;\n\n    this.#uiManager.addLayer(this);\n  }\n\n  get isEmpty() {\n    return this.#editors.size === 0;\n  }\n\n  /**\n   * Update the toolbar if it's required to reflect the tool currently used.\n   * @param {number} mode\n   */\n  updateToolbar(mode) {\n    this.#uiManager.updateToolbar(mode);\n  }\n\n  /**\n   * The mode has changed: it must be updated.\n   * @param {number} mode\n   */\n  updateMode(mode = this.#uiManager.getMode()) {\n    this.#cleanup();\n    if (mode === AnnotationEditorType.INK) {\n      // We always want to an ink editor ready to draw in.\n      this.addInkEditorIfNeeded(false);\n      this.disableClick();\n    } else {\n      this.enableClick();\n    }\n\n    if (mode !== AnnotationEditorType.NONE) {\n      this.div.classList.toggle(\n        \"freeTextEditing\",\n        mode === AnnotationEditorType.FREETEXT\n      );\n      this.div.classList.toggle(\n        \"inkEditing\",\n        mode === AnnotationEditorType.INK\n      );\n      this.div.classList.toggle(\n        \"stampEditing\",\n        mode === AnnotationEditorType.STAMP\n      );\n      this.div.hidden = false;\n    }\n  }\n\n  addInkEditorIfNeeded(isCommitting) {\n    if (\n      !isCommitting &&\n      this.#uiManager.getMode() !== AnnotationEditorType.INK\n    ) {\n      return;\n    }\n\n    if (!isCommitting) {\n      // We're removing an editor but an empty one can already exist so in this\n      // case we don't need to create a new one.\n      for (const editor of this.#editors.values()) {\n        if (editor.isEmpty()) {\n          editor.setInBackground();\n          return;\n        }\n      }\n    }\n\n    const editor = this.#createAndAddNewEditor(\n      { offsetX: 0, offsetY: 0 },\n      /* isCentered = */ false\n    );\n    editor.setInBackground();\n  }\n\n  /**\n   * Set the editing state.\n   * @param {boolean} isEditing\n   */\n  setEditingState(isEditing) {\n    this.#uiManager.setEditingState(isEditing);\n  }\n\n  /**\n   * Add some commands into the CommandManager (undo/redo stuff).\n   * @param {Object} params\n   */\n  addCommands(params) {\n    this.#uiManager.addCommands(params);\n  }\n\n  /**\n   * Enable pointer events on the main div in order to enable\n   * editor creation.\n   */\n  enable() {\n    this.div.style.pointerEvents = \"auto\";\n    const annotationElementIds = new Set();\n    for (const editor of this.#editors.values()) {\n      editor.enableEditing();\n      if (editor.annotationElementId) {\n        annotationElementIds.add(editor.annotationElementId);\n      }\n    }\n\n    if (!this.#annotationLayer) {\n      return;\n    }\n\n    const editables = this.#annotationLayer.getEditableAnnotations();\n    for (const editable of editables) {\n      // The element must be hidden whatever its state is.\n      editable.hide();\n      if (this.#uiManager.isDeletedAnnotationElement(editable.data.id)) {\n        continue;\n      }\n      if (annotationElementIds.has(editable.data.id)) {\n        continue;\n      }\n      const editor = this.deserialize(editable);\n      if (!editor) {\n        continue;\n      }\n      this.addOrRebuild(editor);\n      editor.enableEditing();\n    }\n  }\n\n  /**\n   * Disable editor creation.\n   */\n  disable() {\n    this.#isDisabling = true;\n    this.div.style.pointerEvents = \"none\";\n    const hiddenAnnotationIds = new Set();\n    for (const editor of this.#editors.values()) {\n      editor.disableEditing();\n      if (!editor.annotationElementId || editor.serialize() !== null) {\n        hiddenAnnotationIds.add(editor.annotationElementId);\n        continue;\n      }\n      this.getEditableAnnotation(editor.annotationElementId)?.show();\n      editor.remove();\n    }\n\n    if (this.#annotationLayer) {\n      // Show the annotations that were hidden in enable().\n      const editables = this.#annotationLayer.getEditableAnnotations();\n      for (const editable of editables) {\n        const { id } = editable.data;\n        if (\n          hiddenAnnotationIds.has(id) ||\n          this.#uiManager.isDeletedAnnotationElement(id)\n        ) {\n          continue;\n        }\n        editable.show();\n      }\n    }\n\n    this.#cleanup();\n    if (this.isEmpty) {\n      this.div.hidden = true;\n    }\n    this.#isDisabling = false;\n  }\n\n  getEditableAnnotation(id) {\n    return this.#annotationLayer?.getEditableAnnotation(id) || null;\n  }\n\n  /**\n   * Set the current editor.\n   * @param {AnnotationEditor} editor\n   */\n  setActiveEditor(editor) {\n    const currentActive = this.#uiManager.getActive();\n    if (currentActive === editor) {\n      return;\n    }\n\n    this.#uiManager.setActiveEditor(editor);\n  }\n\n  enableClick() {\n    this.div.addEventListener(\"pointerdown\", this.#boundPointerdown);\n    this.div.addEventListener(\"pointerup\", this.#boundPointerup);\n  }\n\n  disableClick() {\n    this.div.removeEventListener(\"pointerdown\", this.#boundPointerdown);\n    this.div.removeEventListener(\"pointerup\", this.#boundPointerup);\n  }\n\n  attach(editor) {\n    this.#editors.set(editor.id, editor);\n    const { annotationElementId } = editor;\n    if (\n      annotationElementId &&\n      this.#uiManager.isDeletedAnnotationElement(annotationElementId)\n    ) {\n      this.#uiManager.removeDeletedAnnotationElement(editor);\n    }\n  }\n\n  detach(editor) {\n    this.#editors.delete(editor.id);\n    this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n\n    if (!this.#isDisabling && editor.annotationElementId) {\n      this.#uiManager.addDeletedAnnotationElement(editor);\n    }\n  }\n\n  /**\n   * Remove an editor.\n   * @param {AnnotationEditor} editor\n   */\n  remove(editor) {\n    // Since we can undo a removal we need to keep the\n    // parent property as it is, so don't null it!\n\n    this.detach(editor);\n    this.#uiManager.removeEditor(editor);\n    if (editor.div.contains(document.activeElement)) {\n      setTimeout(() => {\n        // When the div is removed from DOM the focus can move on the\n        // document.body, so we need to move it back to the main container.\n        this.#uiManager.focusMainContainer();\n      }, 0);\n    }\n    editor.div.remove();\n    editor.isAttachedToDOM = false;\n\n    if (!this.#isCleaningUp) {\n      this.addInkEditorIfNeeded(/* isCommitting = */ false);\n    }\n  }\n\n  /**\n   * An editor can have a different parent, for example after having\n   * being dragged and droped from a page to another.\n   * @param {AnnotationEditor} editor\n   */\n  changeParent(editor) {\n    if (editor.parent === this) {\n      return;\n    }\n\n    if (editor.annotationElementId) {\n      this.#uiManager.addDeletedAnnotationElement(editor.annotationElementId);\n      AnnotationEditor.deleteAnnotationElement(editor);\n      editor.annotationElementId = null;\n    }\n\n    this.attach(editor);\n    editor.parent?.detach(editor);\n    editor.setParent(this);\n    if (editor.div && editor.isAttachedToDOM) {\n      editor.div.remove();\n      this.div.append(editor.div);\n    }\n  }\n\n  /**\n   * Add a new editor in the current view.\n   * @param {AnnotationEditor} editor\n   */\n  add(editor) {\n    this.changeParent(editor);\n    this.#uiManager.addEditor(editor);\n    this.attach(editor);\n\n    if (!editor.isAttachedToDOM) {\n      const div = editor.render();\n      this.div.append(div);\n      editor.isAttachedToDOM = true;\n    }\n\n    // The editor will be correctly moved into the DOM (see fixAndSetPosition).\n    editor.fixAndSetPosition();\n    editor.onceAdded();\n    this.#uiManager.addToAnnotationStorage(editor);\n  }\n\n  moveEditorInDOM(editor) {\n    if (!editor.isAttachedToDOM) {\n      return;\n    }\n\n    const { activeElement } = document;\n    if (editor.div.contains(activeElement)) {\n      // When the div is moved in the DOM the focus can move somewhere else,\n      // so we want to be sure that the focus will stay on the editor but we\n      // don't want to call any focus callbacks, hence we disable them and only\n      // re-enable them when the editor has the focus.\n      editor._focusEventsAllowed = false;\n      setTimeout(() => {\n        if (!editor.div.contains(document.activeElement)) {\n          editor.div.addEventListener(\n            \"focusin\",\n            () => {\n              editor._focusEventsAllowed = true;\n            },\n            { once: true }\n          );\n          activeElement.focus();\n        } else {\n          editor._focusEventsAllowed = true;\n        }\n      }, 0);\n    }\n\n    editor._structTreeParentId = this.#accessibilityManager?.moveElementInDOM(\n      this.div,\n      editor.div,\n      editor.contentDiv,\n      /* isRemovable = */ true\n    );\n  }\n\n  /**\n   * Add or rebuild depending if it has been removed or not.\n   * @param {AnnotationEditor} editor\n   */\n  addOrRebuild(editor) {\n    if (editor.needsToBeRebuilt()) {\n      editor.rebuild();\n    } else {\n      this.add(editor);\n    }\n  }\n\n  /**\n   * Add a new editor and make this addition undoable.\n   * @param {AnnotationEditor} editor\n   */\n  addUndoableEditor(editor) {\n    const cmd = () => editor._uiManager.rebuild(editor);\n    const undo = () => {\n      editor.remove();\n    };\n\n    this.addCommands({ cmd, undo, mustExec: false });\n  }\n\n  /**\n   * Get an id for an editor.\n   * @returns {string}\n   */\n  getNextId() {\n    return this.#uiManager.getId();\n  }\n\n  /**\n   * Create a new editor\n   * @param {Object} params\n   * @returns {AnnotationEditor}\n   */\n  #createNewEditor(params) {\n    switch (this.#uiManager.getMode()) {\n      case AnnotationEditorType.FREETEXT:\n        return new FreeTextEditor(params);\n      case AnnotationEditorType.INK:\n        return new InkEditor(params);\n      case AnnotationEditorType.STAMP:\n        return new StampEditor(params);\n    }\n    return null;\n  }\n\n  /**\n   * Paste some content into a new editor.\n   * @param {number} mode\n   * @param {Object} params\n   */\n  pasteEditor(mode, params) {\n    this.#uiManager.updateToolbar(mode);\n    this.#uiManager.updateMode(mode);\n\n    const { offsetX, offsetY } = this.#getCenterPoint();\n    const id = this.getNextId();\n    const editor = this.#createNewEditor({\n      parent: this,\n      id,\n      x: offsetX,\n      y: offsetY,\n      uiManager: this.#uiManager,\n      isCentered: true,\n      ...params,\n    });\n    if (editor) {\n      this.add(editor);\n    }\n  }\n\n  /**\n   * Create a new editor\n   * @param {Object} data\n   * @returns {AnnotationEditor}\n   */\n  deserialize(data) {\n    switch (data.annotationType ?? data.annotationEditorType) {\n      case AnnotationEditorType.FREETEXT:\n        return FreeTextEditor.deserialize(data, this, this.#uiManager);\n      case AnnotationEditorType.INK:\n        return InkEditor.deserialize(data, this, this.#uiManager);\n      case AnnotationEditorType.STAMP:\n        return StampEditor.deserialize(data, this, this.#uiManager);\n    }\n    return null;\n  }\n\n  /**\n   * Create and add a new editor.\n   * @param {PointerEvent} event\n   * @param {boolean} isCentered\n   * @returns {AnnotationEditor}\n   */\n  #createAndAddNewEditor(event, isCentered) {\n    const id = this.getNextId();\n    const editor = this.#createNewEditor({\n      parent: this,\n      id,\n      x: event.offsetX,\n      y: event.offsetY,\n      uiManager: this.#uiManager,\n      isCentered,\n    });\n    if (editor) {\n      this.add(editor);\n    }\n\n    return editor;\n  }\n\n  #getCenterPoint() {\n    const { x, y, width, height } = this.div.getBoundingClientRect();\n    const tlX = Math.max(0, x);\n    const tlY = Math.max(0, y);\n    const brX = Math.min(window.innerWidth, x + width);\n    const brY = Math.min(window.innerHeight, y + height);\n    const centerX = (tlX + brX) / 2 - x;\n    const centerY = (tlY + brY) / 2 - y;\n    const [offsetX, offsetY] =\n      this.viewport.rotation % 180 === 0\n        ? [centerX, centerY]\n        : [centerY, centerX];\n\n    return { offsetX, offsetY };\n  }\n\n  /**\n   * Create and add a new editor.\n   */\n  addNewEditor() {\n    this.#createAndAddNewEditor(\n      this.#getCenterPoint(),\n      /* isCentered = */ true\n    );\n  }\n\n  /**\n   * Set the last selected editor.\n   * @param {AnnotationEditor} editor\n   */\n  setSelected(editor) {\n    this.#uiManager.setSelected(editor);\n  }\n\n  /**\n   * Add or remove an editor the current selection.\n   * @param {AnnotationEditor} editor\n   */\n  toggleSelected(editor) {\n    this.#uiManager.toggleSelected(editor);\n  }\n\n  /**\n   * Check if the editor is selected.\n   * @param {AnnotationEditor} editor\n   */\n  isSelected(editor) {\n    return this.#uiManager.isSelected(editor);\n  }\n\n  /**\n   * Unselect an editor.\n   * @param {AnnotationEditor} editor\n   */\n  unselect(editor) {\n    this.#uiManager.unselect(editor);\n  }\n\n  /**\n   * Pointerup callback.\n   * @param {PointerEvent} event\n   */\n  pointerup(event) {\n    const { isMac } = FeatureTest.platform;\n    if (event.button !== 0 || (event.ctrlKey && isMac)) {\n      // Don't create an editor on right click.\n      return;\n    }\n\n    if (event.target !== this.div) {\n      return;\n    }\n\n    if (!this.#hadPointerDown) {\n      // It can happen when the user starts a drag inside a text editor\n      // and then releases the mouse button outside of it. In such a case\n      // we don't want to create a new editor, hence we check that a pointerdown\n      // occurred on this div previously.\n      return;\n    }\n    this.#hadPointerDown = false;\n\n    if (!this.#allowClick) {\n      this.#allowClick = true;\n      return;\n    }\n\n    if (this.#uiManager.getMode() === AnnotationEditorType.STAMP) {\n      this.#uiManager.unselectAll();\n      return;\n    }\n\n    this.#createAndAddNewEditor(event, /* isCentered = */ false);\n  }\n\n  /**\n   * Pointerdown callback.\n   * @param {PointerEvent} event\n   */\n  pointerdown(event) {\n    if (this.#hadPointerDown) {\n      // It's possible to have a second pointerdown event before a pointerup one\n      // when the user puts a finger on a touchscreen and then add a second one\n      // to start a pinch-to-zoom gesture.\n      // That said, in case it's possible to have two pointerdown events with\n      // a mouse, we don't want to create a new editor in such a case either.\n      this.#hadPointerDown = false;\n      return;\n    }\n    const { isMac } = FeatureTest.platform;\n    if (event.button !== 0 || (event.ctrlKey && isMac)) {\n      // Do nothing on right click.\n      return;\n    }\n\n    if (event.target !== this.div) {\n      return;\n    }\n\n    this.#hadPointerDown = true;\n\n    const editor = this.#uiManager.getActive();\n    this.#allowClick = !editor || editor.isEmpty();\n  }\n\n  /**\n   *\n   * @param {AnnotationEditor} editor\n   * @param {number} x\n   * @param {number} y\n   * @returns\n   */\n  findNewParent(editor, x, y) {\n    const layer = this.#uiManager.findParent(x, y);\n    if (layer === null || layer === this) {\n      return false;\n    }\n    layer.changeParent(editor);\n    return true;\n  }\n\n  /**\n   * Destroy the main editor.\n   */\n  destroy() {\n    if (this.#uiManager.getActive()?.parent === this) {\n      // We need to commit the current editor before destroying the layer.\n      this.#uiManager.commitOrRemove();\n      this.#uiManager.setActiveEditor(null);\n    }\n\n    for (const editor of this.#editors.values()) {\n      this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n      editor.setParent(null);\n      editor.isAttachedToDOM = false;\n      editor.div.remove();\n    }\n    this.div = null;\n    this.#editors.clear();\n    this.#uiManager.removeLayer(this);\n  }\n\n  #cleanup() {\n    // When we're cleaning up, some editors are removed but we don't want\n    // to add a new one which will induce an addition in this.#editors, hence\n    // an infinite loop.\n    this.#isCleaningUp = true;\n    for (const editor of this.#editors.values()) {\n      if (editor.isEmpty()) {\n        editor.remove();\n      }\n    }\n    this.#isCleaningUp = false;\n  }\n\n  /**\n   * Render the main editor.\n   * @param {RenderEditorLayerOptions} parameters\n   */\n  render({ viewport }) {\n    this.viewport = viewport;\n    setLayerDimensions(this.div, viewport);\n    for (const editor of this.#uiManager.getEditors(this.pageIndex)) {\n      this.add(editor);\n    }\n    this.updateMode();\n  }\n\n  /**\n   * Update the main editor.\n   * @param {RenderEditorLayerOptions} parameters\n   */\n  update({ viewport }) {\n    // Editors have their dimensions/positions in percent so to avoid any\n    // issues (see #15582), we must commit the current one before changing\n    // the viewport.\n    this.#uiManager.commitOrRemove();\n\n    this.viewport = viewport;\n    setLayerDimensions(this.div, { rotation: viewport.rotation });\n    this.updateMode();\n  }\n\n  /**\n   * Get page dimensions.\n   * @returns {Object} dimensions.\n   */\n  get pageDimensions() {\n    const { pageWidth, pageHeight } = this.viewport.rawDims;\n    return [pageWidth, pageHeight];\n  }\n}\n\nexport { AnnotationEditorLayer };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./annotation_editor_layer.js\").AnnotationEditorLayer} AnnotationEditorLayer */\n\nimport {\n  AnnotationEditorParamsType,\n  AnnotationEditorType,\n  assert,\n  LINE_FACTOR,\n  shadow,\n  Util,\n} from \"../../shared/util.js\";\nimport {\n  AnnotationEditorUIManager,\n  bindEvents,\n  KeyboardManager,\n} from \"./tools.js\";\nimport { AnnotationEditor } from \"./editor.js\";\nimport { FreeTextAnnotationElement } from \"../annotation_layer.js\";\n\n/**\n * Basic text editor in order to create a FreeTex annotation.\n */\nclass FreeTextEditor extends AnnotationEditor {\n  #boundEditorDivBlur = this.editorDivBlur.bind(this);\n\n  #boundEditorDivFocus = this.editorDivFocus.bind(this);\n\n  #boundEditorDivInput = this.editorDivInput.bind(this);\n\n  #boundEditorDivKeydown = this.editorDivKeydown.bind(this);\n\n  #color;\n\n  #content = \"\";\n\n  #editorDivId = `${this.id}-editor`;\n\n  #fontSize;\n\n  #initialData = null;\n\n  static _freeTextDefaultContent = \"\";\n\n  static _internalPadding = 0;\n\n  static _defaultColor = null;\n\n  static _defaultFontSize = 10;\n\n  static get _keyboardManager() {\n    const proto = FreeTextEditor.prototype;\n\n    const arrowChecker = self => self.isEmpty();\n\n    const small = AnnotationEditorUIManager.TRANSLATE_SMALL;\n    const big = AnnotationEditorUIManager.TRANSLATE_BIG;\n\n    return shadow(\n      this,\n      \"_keyboardManager\",\n      new KeyboardManager([\n        [\n          // Commit the text in case the user use ctrl+s to save the document.\n          // The event must bubble in order to be caught by the viewer.\n          // See bug 1831574.\n          [\"ctrl+s\", \"mac+meta+s\", \"ctrl+p\", \"mac+meta+p\"],\n          proto.commitOrRemove,\n          { bubbles: true },\n        ],\n        [\n          [\"ctrl+Enter\", \"mac+meta+Enter\", \"Escape\", \"mac+Escape\"],\n          proto.commitOrRemove,\n        ],\n        [\n          [\"ArrowLeft\", \"mac+ArrowLeft\"],\n          proto._translateEmpty,\n          { args: [-small, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"],\n          proto._translateEmpty,\n          { args: [-big, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowRight\", \"mac+ArrowRight\"],\n          proto._translateEmpty,\n          { args: [small, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"],\n          proto._translateEmpty,\n          { args: [big, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowUp\", \"mac+ArrowUp\"],\n          proto._translateEmpty,\n          { args: [0, -small], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"],\n          proto._translateEmpty,\n          { args: [0, -big], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowDown\", \"mac+ArrowDown\"],\n          proto._translateEmpty,\n          { args: [0, small], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"],\n          proto._translateEmpty,\n          { args: [0, big], checker: arrowChecker },\n        ],\n      ])\n    );\n  }\n\n  static _type = \"freetext\";\n\n  constructor(params) {\n    super({ ...params, name: \"freeTextEditor\" });\n    this.#color =\n      params.color ||\n      FreeTextEditor._defaultColor ||\n      AnnotationEditor._defaultLineColor;\n    this.#fontSize = params.fontSize || FreeTextEditor._defaultFontSize;\n  }\n\n  /** @inheritdoc */\n  static initialize(l10n) {\n    AnnotationEditor.initialize(l10n, {\n      strings: [\"free_text2_default_content\", \"editor_free_text2_aria_label\"],\n    });\n    const style = getComputedStyle(document.documentElement);\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      const lineHeight = parseFloat(\n        style.getPropertyValue(\"--freetext-line-height\")\n      );\n      assert(\n        lineHeight === LINE_FACTOR,\n        \"Update the CSS variable to agree with the constant.\"\n      );\n    }\n\n    this._internalPadding = parseFloat(\n      style.getPropertyValue(\"--freetext-padding\")\n    );\n  }\n\n  /** @inheritdoc */\n  static updateDefaultParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.FREETEXT_SIZE:\n        FreeTextEditor._defaultFontSize = value;\n        break;\n      case AnnotationEditorParamsType.FREETEXT_COLOR:\n        FreeTextEditor._defaultColor = value;\n        break;\n    }\n  }\n\n  /** @inheritdoc */\n  updateParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.FREETEXT_SIZE:\n        this.#updateFontSize(value);\n        break;\n      case AnnotationEditorParamsType.FREETEXT_COLOR:\n        this.#updateColor(value);\n        break;\n    }\n  }\n\n  /** @inheritdoc */\n  static get defaultPropertiesToUpdate() {\n    return [\n      [\n        AnnotationEditorParamsType.FREETEXT_SIZE,\n        FreeTextEditor._defaultFontSize,\n      ],\n      [\n        AnnotationEditorParamsType.FREETEXT_COLOR,\n        FreeTextEditor._defaultColor || AnnotationEditor._defaultLineColor,\n      ],\n    ];\n  }\n\n  /** @inheritdoc */\n  get propertiesToUpdate() {\n    return [\n      [AnnotationEditorParamsType.FREETEXT_SIZE, this.#fontSize],\n      [AnnotationEditorParamsType.FREETEXT_COLOR, this.#color],\n    ];\n  }\n\n  /**\n   * Update the font size and make this action as undoable.\n   * @param {number} fontSize\n   */\n  #updateFontSize(fontSize) {\n    const setFontsize = size => {\n      this.editorDiv.style.fontSize = `calc(${size}px * var(--scale-factor))`;\n      this.translate(0, -(size - this.#fontSize) * this.parentScale);\n      this.#fontSize = size;\n      this.#setEditorDimensions();\n    };\n    const savedFontsize = this.#fontSize;\n    this.addCommands({\n      cmd: () => {\n        setFontsize(fontSize);\n      },\n      undo: () => {\n        setFontsize(savedFontsize);\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.FREETEXT_SIZE,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /**\n   * Update the color and make this action undoable.\n   * @param {string} color\n   */\n  #updateColor(color) {\n    const savedColor = this.#color;\n    this.addCommands({\n      cmd: () => {\n        this.#color = this.editorDiv.style.color = color;\n      },\n      undo: () => {\n        this.#color = this.editorDiv.style.color = savedColor;\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.FREETEXT_COLOR,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /**\n   * Helper to translate the editor with the keyboard when it's empty.\n   * @param {number} x in page units.\n   * @param {number} y in page units.\n   */\n  _translateEmpty(x, y) {\n    this._uiManager.translateSelectedEditors(x, y, /* noCommit = */ true);\n  }\n\n  /** @inheritdoc */\n  getInitialTranslation() {\n    // The start of the base line is where the user clicked.\n    const scale = this.parentScale;\n    return [\n      -FreeTextEditor._internalPadding * scale,\n      -(FreeTextEditor._internalPadding + this.#fontSize) * scale,\n    ];\n  }\n\n  /** @inheritdoc */\n  rebuild() {\n    if (!this.parent) {\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n\n    if (!this.isAttachedToDOM) {\n      // At some point this editor was removed and we're rebuilting it,\n      // hence we must add it to its parent.\n      this.parent.add(this);\n    }\n  }\n\n  /** @inheritdoc */\n  enableEditMode() {\n    if (this.isInEditMode()) {\n      return;\n    }\n\n    this.parent.setEditingState(false);\n    this.parent.updateToolbar(AnnotationEditorType.FREETEXT);\n    super.enableEditMode();\n    this.overlayDiv.classList.remove(\"enabled\");\n    this.editorDiv.contentEditable = true;\n    this._isDraggable = false;\n    this.div.removeAttribute(\"aria-activedescendant\");\n    this.editorDiv.addEventListener(\"keydown\", this.#boundEditorDivKeydown);\n    this.editorDiv.addEventListener(\"focus\", this.#boundEditorDivFocus);\n    this.editorDiv.addEventListener(\"blur\", this.#boundEditorDivBlur);\n    this.editorDiv.addEventListener(\"input\", this.#boundEditorDivInput);\n  }\n\n  /** @inheritdoc */\n  disableEditMode() {\n    if (!this.isInEditMode()) {\n      return;\n    }\n\n    this.parent.setEditingState(true);\n    super.disableEditMode();\n    this.overlayDiv.classList.add(\"enabled\");\n    this.editorDiv.contentEditable = false;\n    this.div.setAttribute(\"aria-activedescendant\", this.#editorDivId);\n    this._isDraggable = true;\n    this.editorDiv.removeEventListener(\"keydown\", this.#boundEditorDivKeydown);\n    this.editorDiv.removeEventListener(\"focus\", this.#boundEditorDivFocus);\n    this.editorDiv.removeEventListener(\"blur\", this.#boundEditorDivBlur);\n    this.editorDiv.removeEventListener(\"input\", this.#boundEditorDivInput);\n\n    // On Chrome, the focus is given to <body> when contentEditable is set to\n    // false, hence we focus the div.\n    this.div.focus({\n      preventScroll: true /* See issue #15744 */,\n    });\n\n    // In case the blur callback hasn't been called.\n    this.isEditing = false;\n    this.parent.div.classList.add(\"freeTextEditing\");\n  }\n\n  /** @inheritdoc */\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    super.focusin(event);\n    if (event.target !== this.editorDiv) {\n      this.editorDiv.focus();\n    }\n  }\n\n  /** @inheritdoc */\n  onceAdded() {\n    if (this.width) {\n      this.#cheatInitialRect();\n      // The editor was created in using ctrl+c.\n      return;\n    }\n    this.enableEditMode();\n    this.editorDiv.focus();\n    if (this._initialOptions?.isCentered) {\n      this.center();\n    }\n    this._initialOptions = null;\n  }\n\n  /** @inheritdoc */\n  isEmpty() {\n    return !this.editorDiv || this.editorDiv.innerText.trim() === \"\";\n  }\n\n  /** @inheritdoc */\n  remove() {\n    this.isEditing = false;\n    if (this.parent) {\n      this.parent.setEditingState(true);\n      this.parent.div.classList.add(\"freeTextEditing\");\n    }\n    super.remove();\n  }\n\n  /**\n   * Extract the text from this editor.\n   * @returns {string}\n   */\n  #extractText() {\n    const divs = this.editorDiv.getElementsByTagName(\"div\");\n    if (divs.length === 0) {\n      return this.editorDiv.innerText;\n    }\n    const buffer = [];\n    for (const div of divs) {\n      buffer.push(div.innerText.replace(/\\r\\n?|\\n/, \"\"));\n    }\n    return buffer.join(\"\\n\");\n  }\n\n  #setEditorDimensions() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n\n    let rect;\n    if (this.isAttachedToDOM) {\n      rect = this.div.getBoundingClientRect();\n    } else {\n      // This editor isn't on screen but we need to get its dimensions, so\n      // we just insert it in the DOM, get its bounding box and then remove it.\n      const { currentLayer, div } = this;\n      const savedDisplay = div.style.display;\n      div.style.display = \"hidden\";\n      currentLayer.div.append(this.div);\n      rect = div.getBoundingClientRect();\n      div.remove();\n      div.style.display = savedDisplay;\n    }\n\n    // The dimensions are relative to the rotation of the page, hence we need to\n    // take that into account (see issue #16636).\n    if (this.rotation % 180 === this.parentRotation % 180) {\n      this.width = rect.width / parentWidth;\n      this.height = rect.height / parentHeight;\n    } else {\n      this.width = rect.height / parentWidth;\n      this.height = rect.width / parentHeight;\n    }\n    this.fixAndSetPosition();\n  }\n\n  /**\n   * Commit the content we have in this editor.\n   * @returns {undefined}\n   */\n  commit() {\n    if (!this.isInEditMode()) {\n      return;\n    }\n\n    super.commit();\n    this.disableEditMode();\n    const savedText = this.#content;\n    const newText = (this.#content = this.#extractText().trimEnd());\n    if (savedText === newText) {\n      return;\n    }\n\n    const setText = text => {\n      this.#content = text;\n      if (!text) {\n        this.remove();\n        return;\n      }\n      this.#setContent();\n      this._uiManager.rebuild(this);\n      this.#setEditorDimensions();\n    };\n    this.addCommands({\n      cmd: () => {\n        setText(newText);\n      },\n      undo: () => {\n        setText(savedText);\n      },\n      mustExec: false,\n    });\n    this.#setEditorDimensions();\n  }\n\n  /** @inheritdoc */\n  shouldGetKeyboardEvents() {\n    return this.isInEditMode();\n  }\n\n  /** @inheritdoc */\n  enterInEditMode() {\n    this.enableEditMode();\n    this.editorDiv.focus();\n  }\n\n  /**\n   * ondblclick callback.\n   * @param {MouseEvent} event\n   */\n  dblclick(event) {\n    this.enterInEditMode();\n  }\n\n  /**\n   * onkeydown callback.\n   * @param {KeyboardEvent} event\n   */\n  keydown(event) {\n    if (event.target === this.div && event.key === \"Enter\") {\n      this.enterInEditMode();\n      // Avoid to add an unwanted new line.\n      event.preventDefault();\n    }\n  }\n\n  editorDivKeydown(event) {\n    FreeTextEditor._keyboardManager.exec(this, event);\n  }\n\n  editorDivFocus(event) {\n    this.isEditing = true;\n  }\n\n  editorDivBlur(event) {\n    this.isEditing = false;\n  }\n\n  editorDivInput(event) {\n    this.parent.div.classList.toggle(\"freeTextEditing\", this.isEmpty());\n  }\n\n  /** @inheritdoc */\n  disableEditing() {\n    this.editorDiv.setAttribute(\"role\", \"comment\");\n    this.editorDiv.removeAttribute(\"aria-multiline\");\n  }\n\n  /** @inheritdoc */\n  enableEditing() {\n    this.editorDiv.setAttribute(\"role\", \"textbox\");\n    this.editorDiv.setAttribute(\"aria-multiline\", true);\n  }\n\n  /** @inheritdoc */\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n\n    let baseX, baseY;\n    if (this.width) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n\n    super.render();\n    this.editorDiv = document.createElement(\"div\");\n    this.editorDiv.className = \"internal\";\n\n    this.editorDiv.setAttribute(\"id\", this.#editorDivId);\n    this.enableEditing();\n\n    AnnotationEditor._l10nPromise\n      .get(\"editor_free_text2_aria_label\")\n      .then(msg => this.editorDiv?.setAttribute(\"aria-label\", msg));\n\n    AnnotationEditor._l10nPromise\n      .get(\"free_text2_default_content\")\n      .then(msg => this.editorDiv?.setAttribute(\"default-content\", msg));\n    this.editorDiv.contentEditable = true;\n\n    const { style } = this.editorDiv;\n    style.fontSize = `calc(${this.#fontSize}px * var(--scale-factor))`;\n    style.color = this.#color;\n\n    this.div.append(this.editorDiv);\n\n    this.overlayDiv = document.createElement(\"div\");\n    this.overlayDiv.classList.add(\"overlay\", \"enabled\");\n    this.div.append(this.overlayDiv);\n\n    // TODO: implement paste callback.\n    // The goal is to sanitize and have something suitable for this\n    // editor.\n    bindEvents(this, this.div, [\"dblclick\", \"keydown\"]);\n\n    if (this.width) {\n      // This editor was created in using copy (ctrl+c).\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      if (this.annotationElementId) {\n        // This stuff is hard to test: if something is changed here, please\n        // test with the following PDF file:\n        //  - freetexts.pdf\n        //  - rotated_freetexts.pdf\n        // Only small variations between the original annotation and its editor\n        // are allowed.\n\n        // position is the position of the first glyph in the annotation\n        // and it's relative to its container.\n        const { position } = this.#initialData;\n        let [tx, ty] = this.getInitialTranslation();\n        [tx, ty] = this.pageTranslationToScreen(tx, ty);\n        const [pageWidth, pageHeight] = this.pageDimensions;\n        const [pageX, pageY] = this.pageTranslation;\n        let posX, posY;\n        switch (this.rotation) {\n          case 0:\n            posX = baseX + (position[0] - pageX) / pageWidth;\n            posY = baseY + this.height - (position[1] - pageY) / pageHeight;\n            break;\n          case 90:\n            posX = baseX + (position[0] - pageX) / pageWidth;\n            posY = baseY - (position[1] - pageY) / pageHeight;\n            [tx, ty] = [ty, -tx];\n            break;\n          case 180:\n            posX = baseX - this.width + (position[0] - pageX) / pageWidth;\n            posY = baseY - (position[1] - pageY) / pageHeight;\n            [tx, ty] = [-tx, -ty];\n            break;\n          case 270:\n            posX =\n              baseX +\n              (position[0] - pageX - this.height * pageHeight) / pageWidth;\n            posY =\n              baseY +\n              (position[1] - pageY - this.width * pageWidth) / pageHeight;\n            [tx, ty] = [-ty, tx];\n            break;\n        }\n        this.setAt(posX * parentWidth, posY * parentHeight, tx, ty);\n      } else {\n        this.setAt(\n          baseX * parentWidth,\n          baseY * parentHeight,\n          this.width * parentWidth,\n          this.height * parentHeight\n        );\n      }\n\n      this.#setContent();\n      this._isDraggable = true;\n      this.editorDiv.contentEditable = false;\n    } else {\n      this._isDraggable = false;\n      this.editorDiv.contentEditable = true;\n    }\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      this.div.setAttribute(\"annotation-id\", this.annotationElementId);\n    }\n\n    return this.div;\n  }\n\n  #setContent() {\n    this.editorDiv.replaceChildren();\n    if (!this.#content) {\n      return;\n    }\n    for (const line of this.#content.split(\"\\n\")) {\n      const div = document.createElement(\"div\");\n      div.append(\n        line ? document.createTextNode(line) : document.createElement(\"br\")\n      );\n      this.editorDiv.append(div);\n    }\n  }\n\n  get contentDiv() {\n    return this.editorDiv;\n  }\n\n  /** @inheritdoc */\n  static deserialize(data, parent, uiManager) {\n    let initialData = null;\n    if (data instanceof FreeTextAnnotationElement) {\n      const {\n        data: {\n          defaultAppearanceData: { fontSize, fontColor },\n          rect,\n          rotation,\n          id,\n        },\n        textContent,\n        textPosition,\n        parent: {\n          page: { pageNumber },\n        },\n      } = data;\n      // textContent is supposed to be an array of strings containing each line\n      // of text. However, it can be null or empty.\n      if (!textContent || textContent.length === 0) {\n        // Empty annotation.\n        return null;\n      }\n      initialData = data = {\n        annotationType: AnnotationEditorType.FREETEXT,\n        color: Array.from(fontColor),\n        fontSize,\n        value: textContent.join(\"\\n\"),\n        position: textPosition,\n        pageIndex: pageNumber - 1,\n        rect,\n        rotation,\n        id,\n        deleted: false,\n      };\n    }\n    const editor = super.deserialize(data, parent, uiManager);\n\n    editor.#fontSize = data.fontSize;\n    editor.#color = Util.makeHexColor(...data.color);\n    editor.#content = data.value;\n    editor.annotationElementId = data.id || null;\n    editor.#initialData = initialData;\n\n    return editor;\n  }\n\n  /** @inheritdoc */\n  serialize(isForCopying = false) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    if (this.deleted) {\n      return {\n        pageIndex: this.pageIndex,\n        id: this.annotationElementId,\n        deleted: true,\n      };\n    }\n\n    const padding = FreeTextEditor._internalPadding * this.parentScale;\n    const rect = this.getRect(padding, padding);\n    const color = AnnotationEditor._colorManager.convert(\n      this.isAttachedToDOM\n        ? getComputedStyle(this.editorDiv).color\n        : this.#color\n    );\n\n    const serialized = {\n      annotationType: AnnotationEditorType.FREETEXT,\n      color,\n      fontSize: this.#fontSize,\n      value: this.#content,\n      pageIndex: this.pageIndex,\n      rect,\n      rotation: this.rotation,\n      structTreeParentId: this._structTreeParentId,\n    };\n\n    if (isForCopying) {\n      // Don't add the id when copying because the pasted editor mustn't be\n      // linked to an existing annotation.\n      return serialized;\n    }\n\n    if (this.annotationElementId && !this.#hasElementChanged(serialized)) {\n      return null;\n    }\n\n    serialized.id = this.annotationElementId;\n\n    return serialized;\n  }\n\n  #hasElementChanged(serialized) {\n    const { value, fontSize, color, rect, pageIndex } = this.#initialData;\n\n    return (\n      serialized.value !== value ||\n      serialized.fontSize !== fontSize ||\n      serialized.rect.some((x, i) => Math.abs(x - rect[i]) >= 1) ||\n      serialized.color.some((c, i) => c !== color[i]) ||\n      serialized.pageIndex !== pageIndex\n    );\n  }\n\n  #cheatInitialRect(delayed = false) {\n    // The annotation has a rect but the editor has an other one.\n    // When we want to know if the annotation has changed (e.g. has been moved)\n    // we must compare the editor initial rect with the current one.\n    // So this method is a hack to have a way to compare the real rects.\n    if (!this.annotationElementId) {\n      return;\n    }\n\n    this.#setEditorDimensions();\n    if (!delayed && (this.width === 0 || this.height === 0)) {\n      setTimeout(() => this.#cheatInitialRect(/* delayed = */ true), 0);\n      return;\n    }\n\n    const padding = FreeTextEditor._internalPadding * this.parentScale;\n    this.#initialData.rect = this.getRect(padding, padding);\n  }\n}\n\nexport { FreeTextEditor };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../../web/text_accessibility.js\").TextAccessibilityManager} TextAccessibilityManager */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../../web/interfaces\").IDownloadManager} IDownloadManager */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport {\n  AnnotationBorderStyleType,\n  AnnotationEditorType,\n  AnnotationPrefix,\n  AnnotationType,\n  FeatureTest,\n  LINE_FACTOR,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  PDFDateString,\n  setLayerDimensions,\n} from \"./display_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\nimport { NullL10n } from \"display-l10n_utils\";\nimport { XfaLayer } from \"./xfa_layer.js\";\n\nconst DEFAULT_TAB_INDEX = 1000;\nconst DEFAULT_FONT_SIZE = 9;\nconst GetElementsByNameSet = new WeakSet();\n\nfunction getRectDims(rect) {\n  return {\n    width: rect[2] - rect[0],\n    height: rect[3] - rect[1],\n  };\n}\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [fieldObjects]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n          case \"Sig\":\n            return new SignatureWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  #hasBorder = false;\n\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._fieldObjects = parameters.fieldObjects;\n    this.parent = parameters.parent;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this._createQuadrilaterals();\n    }\n  }\n\n  static _hasPopupData({ titleObj, contentsObj, richText }) {\n    return !!(titleObj?.str || contentsObj?.str || richText?.str);\n  }\n\n  get hasPopupData() {\n    return AnnotationElement._hasPopupData(this.data);\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLElement} A section element.\n   */\n  _createContainer(ignoreBorder) {\n    const {\n      data,\n      parent: { page, viewport },\n    } = this;\n\n    const container = document.createElement(\"section\");\n    container.setAttribute(\"data-annotation-id\", data.id);\n    if (!(this instanceof WidgetAnnotationElement)) {\n      container.tabIndex = DEFAULT_TAB_INDEX;\n    }\n\n    // The accessibility manager will move the annotation in the DOM in\n    // order to match the visual ordering.\n    // But if an annotation is above an other one, then we must draw it\n    // after the other one whatever the order is in the DOM, hence the\n    // use of the z-index.\n    container.style.zIndex = this.parent.zIndex++;\n\n    if (this.data.popupRef) {\n      container.setAttribute(\"aria-haspopup\", \"dialog\");\n    }\n\n    if (data.noRotate) {\n      container.classList.add(\"norotate\");\n    }\n\n    const { pageWidth, pageHeight, pageX, pageY } = viewport.rawDims;\n\n    if (!data.rect || this instanceof PopupAnnotationElement) {\n      const { rotation } = data;\n      if (!data.hasOwnCanvas && rotation !== 0) {\n        this.setRotation(rotation, container);\n      }\n      return container;\n    }\n\n    const { width, height } = getRectDims(data.rect);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `calc(${horizontalRadius}px * var(--scale-factor)) / calc(${verticalRadius}px * var(--scale-factor))`;\n        container.style.borderRadius = radius;\n      } else if (this instanceof RadioButtonWidgetAnnotationElement) {\n        const radius = `calc(${width}px * var(--scale-factor)) / calc(${height}px * var(--scale-factor))`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      const borderColor = data.borderColor || null;\n      if (borderColor) {\n        this.#hasBorder = true;\n        container.style.borderColor = Util.makeHexColor(\n          borderColor[0] | 0,\n          borderColor[1] | 0,\n          borderColor[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${(100 * (rect[0] - pageX)) / pageWidth}%`;\n    container.style.top = `${(100 * (rect[1] - pageY)) / pageHeight}%`;\n\n    const { rotation } = data;\n    if (data.hasOwnCanvas || rotation === 0) {\n      container.style.width = `${(100 * width) / pageWidth}%`;\n      container.style.height = `${(100 * height) / pageHeight}%`;\n    } else {\n      this.setRotation(rotation, container);\n    }\n\n    return container;\n  }\n\n  setRotation(angle, container = this.container) {\n    if (!this.data.rect) {\n      return;\n    }\n    const { pageWidth, pageHeight } = this.parent.viewport.rawDims;\n    const { width, height } = getRectDims(this.data.rect);\n\n    let elementWidth, elementHeight;\n    if (angle % 180 === 0) {\n      elementWidth = (100 * width) / pageWidth;\n      elementHeight = (100 * height) / pageHeight;\n    } else {\n      elementWidth = (100 * height) / pageWidth;\n      elementHeight = (100 * width) / pageHeight;\n    }\n\n    container.style.width = `${elementWidth}%`;\n    container.style.height = `${elementHeight}%`;\n\n    container.setAttribute(\"data-main-rotation\", (360 - angle) % 360);\n  }\n\n  get _commonActions() {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      const colorType = color[0];\n      const colorArray = color.slice(1);\n      event.target.style[styleName] =\n        ColorConverters[`${colorType}_HTML`](colorArray);\n      this.annotationStorage.setValue(this.data.id, {\n        [styleName]: ColorConverters[`${colorType}_rgb`](colorArray),\n      });\n    };\n\n    return shadow(this, \"_commonActions\", {\n      display: event => {\n        const { display } = event.detail;\n        // See scripting/constants.js for the values of `Display`.\n        // 0 = visible, 1 = hidden, 2 = noPrint and 3 = noView.\n        const hidden = display % 2 === 1;\n        this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          noView: hidden,\n          noPrint: display === 1 || display === 2,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, {\n          noPrint: !event.detail.print,\n        });\n      },\n      hidden: event => {\n        const { hidden } = event.detail;\n        this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          noPrint: hidden,\n          noView: hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        event.target.disabled = event.detail.readonly;\n      },\n      required: event => {\n        this._setRequired(event.target, event.detail.required);\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n      rotation: event => {\n        const angle = event.detail.rotation;\n        this.setRotation(angle);\n        this.annotationStorage.setValue(this.data.id, {\n          rotation: angle,\n        });\n      },\n    });\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const commonActions = this._commonActions;\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      action?.(jsEvent);\n    }\n  }\n\n  _setDefaultPropertiesFromJS(element) {\n    if (!this.enableScripting) {\n      return;\n    }\n\n    // Some properties may have been updated thanks to JS.\n    const storedData = this.annotationStorage.getRawValue(this.data.id);\n    if (!storedData) {\n      return;\n    }\n\n    const commonActions = this._commonActions;\n    for (const [actionName, detail] of Object.entries(storedData)) {\n      const action = commonActions[actionName];\n      if (action) {\n        const eventProxy = {\n          detail: {\n            [actionName]: detail,\n          },\n          target: element,\n        };\n        action(eventProxy);\n        // The action has been consumed: no need to keep it.\n        delete storedData[actionName];\n      }\n    }\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @memberof AnnotationElement\n   */\n  _createQuadrilaterals() {\n    if (!this.container) {\n      return;\n    }\n    const { quadPoints } = this.data;\n    if (!quadPoints) {\n      return;\n    }\n\n    const [rectBlX, rectBlY, rectTrX, rectTrY] = this.data.rect;\n\n    if (quadPoints.length === 1) {\n      const [, { x: trX, y: trY }, { x: blX, y: blY }] = quadPoints[0];\n      if (\n        rectTrX === trX &&\n        rectTrY === trY &&\n        rectBlX === blX &&\n        rectBlY === blY\n      ) {\n        // The quadpoints cover the whole annotation rectangle, so no need to\n        // create a quadrilateral.\n        return;\n      }\n    }\n\n    const { style } = this.container;\n    let svgBuffer;\n    if (this.#hasBorder) {\n      const { borderColor, borderWidth } = style;\n      style.borderWidth = 0;\n      svgBuffer = [\n        \"url('data:image/svg+xml;utf8,\",\n        `<svg xmlns=\"http://www.w3.org/2000/svg\"`,\n        ` preserveAspectRatio=\"none\" viewBox=\"0 0 1 1\">`,\n        `<g fill=\"transparent\" stroke=\"${borderColor}\" stroke-width=\"${borderWidth}\">`,\n      ];\n      this.container.classList.add(\"hasBorder\");\n    }\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      this.container.classList.add(\"hasClipPath\");\n    }\n\n    const width = rectTrX - rectBlX;\n    const height = rectTrY - rectBlY;\n\n    const { svgFactory } = this;\n    const svg = svgFactory.createElement(\"svg\");\n    svg.classList.add(\"quadrilateralsContainer\");\n    svg.setAttribute(\"width\", 0);\n    svg.setAttribute(\"height\", 0);\n    const defs = svgFactory.createElement(\"defs\");\n    svg.append(defs);\n    const clipPath = svgFactory.createElement(\"clipPath\");\n    const id = `clippath_${this.data.id}`;\n    clipPath.setAttribute(\"id\", id);\n    clipPath.setAttribute(\"clipPathUnits\", \"objectBoundingBox\");\n    defs.append(clipPath);\n\n    for (const [, { x: trX, y: trY }, { x: blX, y: blY }] of quadPoints) {\n      const rect = svgFactory.createElement(\"rect\");\n      const x = (blX - rectBlX) / width;\n      const y = (rectTrY - trY) / height;\n      const rectWidth = (trX - blX) / width;\n      const rectHeight = (trY - blY) / height;\n      rect.setAttribute(\"x\", x);\n      rect.setAttribute(\"y\", y);\n      rect.setAttribute(\"width\", rectWidth);\n      rect.setAttribute(\"height\", rectHeight);\n      clipPath.append(rect);\n      svgBuffer?.push(\n        `<rect vector-effect=\"non-scaling-stroke\" x=\"${x}\" y=\"${y}\" width=\"${rectWidth}\" height=\"${rectHeight}\"/>`\n      );\n    }\n\n    if (this.#hasBorder) {\n      svgBuffer.push(`</g></svg>')`);\n      style.backgroundImage = svgBuffer.join(\"\");\n    }\n\n    this.container.append(svg);\n    this.container.style.clipPath = `url(#${id})`;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @memberof AnnotationElement\n   */\n  _createPopup() {\n    const { container, data } = this;\n    container.setAttribute(\"aria-haspopup\", \"dialog\");\n\n    const popup = new PopupAnnotationElement({\n      data: {\n        color: data.color,\n        titleObj: data.titleObj,\n        modificationDate: data.modificationDate,\n        contentsObj: data.contentsObj,\n        richText: data.richText,\n        parentRect: data.rect,\n        borderStyle: 0,\n        id: `popup_${data.id}`,\n        rotation: data.rotation,\n      },\n      parent: this.parent,\n      elements: [this],\n    });\n    this.parent.div.append(popup.render());\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n  /**\n   * @private\n   * @returns {Array}\n   */\n  _getElementsByName(name, skipId = null) {\n    const fields = [];\n\n    if (this._fieldObjects) {\n      const fieldObj = this._fieldObjects[name];\n      if (fieldObj) {\n        for (const { page, id, exportValues } of fieldObj) {\n          if (page === -1) {\n            continue;\n          }\n          if (id === skipId) {\n            continue;\n          }\n          const exportValue =\n            typeof exportValues === \"string\" ? exportValues : null;\n\n          const domElement = document.querySelector(\n            `[data-element-id=\"${id}\"]`\n          );\n          if (domElement && !GetElementsByNameSet.has(domElement)) {\n            warn(`_getElementsByName - element not allowed: ${id}`);\n            continue;\n          }\n          fields.push({ id, exportValue, domElement });\n        }\n      }\n      return fields;\n    }\n    // Fallback to a regular DOM lookup, to ensure that the standalone\n    // viewer components won't break.\n    for (const domElement of document.getElementsByName(name)) {\n      const { exportValue } = domElement;\n      const id = domElement.getAttribute(\"data-element-id\");\n      if (id === skipId) {\n        continue;\n      }\n      if (!GetElementsByNameSet.has(domElement)) {\n        continue;\n      }\n      fields.push({ id, exportValue, domElement });\n    }\n    return fields;\n  }\n\n  show() {\n    if (this.container) {\n      this.container.hidden = false;\n    }\n    this.popup?.maybeShow();\n  }\n\n  hide() {\n    if (this.container) {\n      this.container.hidden = true;\n    }\n    this.popup?.forceHide();\n  }\n\n  /**\n   * Get the HTML element(s) which can trigger a popup when clicked or hovered.\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLElement>|HTMLElement} An array of elements or an\n   *          element.\n   */\n  getElementsToTriggerPopup() {\n    return this.container;\n  }\n\n  addHighlightArea() {\n    const triggers = this.getElementsToTriggerPopup();\n    if (Array.isArray(triggers)) {\n      for (const element of triggers) {\n        element.classList.add(\"highlightArea\");\n      }\n    } else {\n      triggers.classList.add(\"highlightArea\");\n    }\n  }\n\n  _editOnDoubleClick() {\n    const {\n      annotationEditorType: mode,\n      data: { id: editId },\n    } = this;\n    this.container.addEventListener(\"dblclick\", () => {\n      this.linkService.eventBus?.dispatch(\"switchannotationeditormode\", {\n        source: this,\n        mode,\n        editId,\n      });\n    });\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters, options = null) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: !!options?.ignoreBorder,\n      createQuadrilaterals: true,\n    });\n    this.isTooltipOnly = parameters.data.isTooltipOnly;\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"data-element-id\", data.id);\n    let isBound = false;\n\n    if (data.url) {\n      linkService.addLinkAttributes(link, data.url, data.newWindow);\n      isBound = true;\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n      isBound = true;\n    } else if (data.attachment) {\n      this._bindAttachment(link, data.attachment);\n      isBound = true;\n    } else if (data.setOCGState) {\n      this.#bindSetOCGState(link, data.setOCGState);\n      isBound = true;\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n      isBound = true;\n    } else {\n      if (\n        data.actions &&\n        (data.actions.Action ||\n          data.actions[\"Mouse Up\"] ||\n          data.actions[\"Mouse Down\"]) &&\n        this.enableScripting &&\n        this.hasJSActions\n      ) {\n        this._bindJSAction(link, data);\n        isBound = true;\n      }\n\n      if (data.resetForm) {\n        this._bindResetFormAction(link, data.resetForm);\n        isBound = true;\n      } else if (this.isTooltipOnly && !isBound) {\n        this._bindLink(link, \"\");\n        isBound = true;\n      }\n    }\n\n    this.container.classList.add(\"linkAnnotation\");\n    if (isBound) {\n      this.container.append(link);\n    }\n\n    return this.container;\n  }\n\n  #setInternalLink() {\n    this.container.setAttribute(\"data-internal-link\", \"\");\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      this.#setInternalLink();\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    this.#setInternalLink();\n  }\n\n  /**\n   * Bind attachments to the link element.\n   * @param {Object} link\n   * @param {Object} attachment\n   */\n  _bindAttachment(link, attachment) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.downloadManager?.openOrDownloadData(\n        this.container,\n        attachment.content,\n        attachment.filename\n      );\n      return false;\n    };\n    this.#setInternalLink();\n  }\n\n  /**\n   * Bind SetOCGState actions to the link element.\n   * @param {Object} link\n   * @param {Object} action\n   */\n  #bindSetOCGState(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeSetOCGState(action);\n      return false;\n    };\n    this.#setInternalLink();\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n\n    if (!link.onclick) {\n      link.onclick = () => false;\n    }\n    this.#setInternalLink();\n  }\n\n  _bindResetFormAction(link, resetForm) {\n    const otherClickAction = link.onclick;\n    if (!otherClickAction) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n    }\n    this.#setInternalLink();\n\n    if (!this._fieldObjects) {\n      warn(\n        `_bindResetFormAction - \"resetForm\" action not supported, ` +\n          \"ensure that the `fieldObjects` parameter is provided.\"\n      );\n      if (!otherClickAction) {\n        link.onclick = () => false;\n      }\n      return;\n    }\n\n    link.onclick = () => {\n      otherClickAction?.();\n\n      const {\n        fields: resetFormFields,\n        refs: resetFormRefs,\n        include,\n      } = resetForm;\n\n      const allFields = [];\n      if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n        const fieldIds = new Set(resetFormRefs);\n        for (const fieldName of resetFormFields) {\n          const fields = this._fieldObjects[fieldName] || [];\n          for (const { id } of fields) {\n            fieldIds.add(id);\n          }\n        }\n        for (const fields of Object.values(this._fieldObjects)) {\n          for (const field of fields) {\n            if (fieldIds.has(field.id) === include) {\n              allFields.push(field);\n            }\n          }\n        }\n      } else {\n        for (const fields of Object.values(this._fieldObjects)) {\n          allFields.push(...fields);\n        }\n      }\n\n      const storage = this.annotationStorage;\n      const allIds = [];\n      for (const field of allFields) {\n        const { id } = field;\n        allIds.push(id);\n        switch (field.type) {\n          case \"text\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value });\n            break;\n          }\n          case \"checkbox\":\n          case \"radiobutton\": {\n            const value = field.defaultValue === field.exportValues;\n            storage.setValue(id, { value });\n            break;\n          }\n          case \"combobox\":\n          case \"listbox\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value });\n            break;\n          }\n          default:\n            continue;\n        }\n\n        const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n        if (!domElement) {\n          continue;\n        } else if (!GetElementsByNameSet.has(domElement)) {\n          warn(`_bindResetFormAction - element not allowed: ${id}`);\n          continue;\n        }\n        domElement.dispatchEvent(new Event(\"resetform\"));\n      }\n\n      if (this.enableScripting) {\n        // Update the values in the sandbox.\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: \"app\",\n            ids: allIds,\n            name: \"ResetForm\",\n          },\n        });\n      }\n\n      return false;\n    };\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n  }\n\n  render() {\n    this.container.classList.add(\"textAnnotation\");\n\n    const image = document.createElement(\"img\");\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.append(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  showElementAndHideCanvas(element) {\n    if (this.data.hasOwnCanvas) {\n      if (element.previousSibling?.nodeName === \"CANVAS\") {\n        element.previousSibling.hidden = true;\n      }\n      element.hidden = false;\n    }\n  }\n\n  _getKeyModifier(event) {\n    const { isWin, isMac } = FeatureTest.platform;\n    return (isWin && event.ctrlKey) || (isMac && event.metaKey);\n  }\n\n  _setEventListener(element, elementData, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non-mouse events\n      element.addEventListener(baseName, event => {\n        if (baseName === \"blur\") {\n          if (!elementData.focused || !event.relatedTarget) {\n            return;\n          }\n          elementData.focused = false;\n        } else if (baseName === \"focus\") {\n          if (elementData.focused) {\n            return;\n          }\n          elementData.focused = true;\n        }\n\n        if (!valueGetter) {\n          return;\n        }\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, elementData, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        if (eventName === \"Focus\" || eventName === \"Blur\") {\n          elementData ||= { focused: false };\n        }\n        this._setEventListener(\n          element,\n          elementData,\n          baseName,\n          eventName,\n          getter\n        );\n        if (eventName === \"Focus\" && !this.data.actions?.Blur) {\n          // Ensure that elementData will have the correct value.\n          this._setEventListener(element, elementData, \"blur\", \"Blur\", null);\n        } else if (eventName === \"Blur\" && !this.data.actions?.Focus) {\n          this._setEventListener(element, elementData, \"focus\", \"Focus\", null);\n        }\n      }\n    }\n  }\n\n  _setBackgroundColor(element) {\n    const color = this.data.backgroundColor || null;\n    element.style.backgroundColor =\n      color === null\n        ? \"transparent\"\n        : Util.makeHexColor(color[0], color[1], color[2]);\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontColor } = this.data.defaultAppearanceData;\n    const fontSize =\n      this.data.defaultAppearanceData.fontSize || DEFAULT_FONT_SIZE;\n\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n\n    // We don't use the font, as specified in the PDF document, for the <input>\n    // element. Hence using the original `fontSize` could look bad, which is why\n    // it's instead based on the field height.\n    // If the height is \"big\" then it could lead to a too big font size\n    // so in this case use the one we've in the pdf (hence the min).\n    let computedFontSize;\n    const BORDER_SIZE = 2;\n    const roundToOneDecimal = x => Math.round(10 * x) / 10;\n    if (this.data.multiLine) {\n      const height = Math.abs(\n        this.data.rect[3] - this.data.rect[1] - BORDER_SIZE\n      );\n      const numberOfLines = Math.round(height / (LINE_FACTOR * fontSize)) || 1;\n      const lineHeight = height / numberOfLines;\n      computedFontSize = Math.min(\n        fontSize,\n        roundToOneDecimal(lineHeight / LINE_FACTOR)\n      );\n    } else {\n      const height = Math.abs(\n        this.data.rect[3] - this.data.rect[1] - BORDER_SIZE\n      );\n      computedFontSize = Math.min(\n        fontSize,\n        roundToOneDecimal(height / LINE_FACTOR)\n      );\n    }\n    style.fontSize = `calc(${computedFontSize}px * var(--scale-factor))`;\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n\n  _setRequired(element, isRequired) {\n    if (isRequired) {\n      element.setAttribute(\"required\", true);\n    } else {\n      element.removeAttribute(\"required\");\n    }\n    element.setAttribute(\"aria-required\", isRequired);\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of this._getElementsByName(\n      base.name,\n      /* skipId = */ base.id\n    )) {\n      if (element.domElement) {\n        element.domElement[key] = value;\n      }\n      storage.setValue(element.id, { [keyInStorage]: value });\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.classList.add(\"textWidgetAnnotation\");\n\n    let element = null;\n    if (this.renderForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, {\n        value: this.data.fieldValue,\n      });\n      let textContent = storedData.value || \"\";\n      const maxLen = storage.getValue(id, {\n        charLimit: this.data.maxLen,\n      }).charLimit;\n      if (maxLen && textContent.length > maxLen) {\n        textContent = textContent.slice(0, maxLen);\n      }\n\n      let fieldFormattedValues =\n        storedData.formattedValue || this.data.textContent?.join(\"\\n\") || null;\n      if (fieldFormattedValues && this.data.comb) {\n        fieldFormattedValues = fieldFormattedValues.replaceAll(/\\s+/g, \"\");\n      }\n\n      const elementData = {\n        userValue: textContent,\n        formattedValue: fieldFormattedValues,\n        lastCommittedValue: null,\n        commitKey: 1,\n        focused: false,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = fieldFormattedValues ?? textContent;\n        if (this.data.doNotScroll) {\n          element.style.overflowY = \"hidden\";\n        }\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", fieldFormattedValues ?? textContent);\n        if (this.data.doNotScroll) {\n          element.style.overflowX = \"hidden\";\n        }\n      }\n      if (this.data.hasOwnCanvas) {\n        element.hidden = true;\n      }\n      GetElementsByNameSet.add(element);\n      element.setAttribute(\"data-element-id\", id);\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n      element.tabIndex = DEFAULT_TAB_INDEX;\n\n      this._setRequired(element, this.data.required);\n\n      if (maxLen) {\n        element.maxLength = maxLen;\n      }\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, { value: event.target.value });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n        elementData.formattedValue = null;\n      });\n\n      element.addEventListener(\"resetform\", event => {\n        const defaultValue = this.data.defaultFieldValue ?? \"\";\n        element.value = elementData.userValue = defaultValue;\n        elementData.formattedValue = null;\n      });\n\n      let blurListener = event => {\n        const { formattedValue } = elementData;\n        if (formattedValue !== null && formattedValue !== undefined) {\n          event.target.value = formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.focused) {\n            return;\n          }\n          const { target } = event;\n          if (elementData.userValue) {\n            target.value = elementData.userValue;\n          }\n          elementData.lastCommittedValue = target.value;\n          elementData.commitKey = 1;\n          elementData.focused = true;\n        });\n\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          this.showElementAndHideCanvas(jsEvent.target);\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value ?? \"\";\n              storage.setValue(id, { value: elementData.userValue.toString() });\n              event.target.value = elementData.userValue;\n            },\n            formattedValue(event) {\n              const { formattedValue } = event.detail;\n              elementData.formattedValue = formattedValue;\n              if (\n                formattedValue !== null &&\n                formattedValue !== undefined &&\n                event.target !== document.activeElement\n              ) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = formattedValue;\n              }\n              storage.setValue(id, {\n                formattedValue,\n              });\n            },\n            selRange(event) {\n              event.target.setSelectionRange(...event.detail.selRange);\n            },\n            charLimit: event => {\n              const { charLimit } = event.detail;\n              const { target } = event;\n              if (charLimit === 0) {\n                target.removeAttribute(\"maxLength\");\n                return;\n              }\n\n              target.setAttribute(\"maxLength\", charLimit);\n              let value = elementData.userValue;\n              if (!value || value.length <= charLimit) {\n                return;\n              }\n              value = value.slice(0, charLimit);\n              target.value = elementData.userValue = value;\n              storage.setValue(id, { value });\n\n              this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                source: this,\n                detail: {\n                  id,\n                  name: \"Keystroke\",\n                  value,\n                  willCommit: true,\n                  commitKey: 1,\n                  selStart: target.selectionStart,\n                  selEnd: target.selectionEnd,\n                },\n              });\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          elementData.commitKey = 1;\n          // If the key is one of Escape, Enter then the data are committed.\n          // If we've a Tab then data will be committed on blur.\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\" && !this.data.multiLine) {\n            // When we've a multiline field, \"Enter\" key is a key as the other\n            // hence we don't commit the data (Acrobat behaves the same way)\n            // (see issue #15627).\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            elementData.commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          const { value } = event.target;\n          if (elementData.lastCommittedValue === value) {\n            return;\n          }\n          elementData.lastCommittedValue = value;\n          // Save the entered value\n          elementData.userValue = value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (!elementData.focused || !event.relatedTarget) {\n            return;\n          }\n          elementData.focused = false;\n          const { value } = event.target;\n          elementData.userValue = value;\n          if (elementData.lastCommittedValue !== value) {\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                willCommit: true,\n                commitKey: elementData.commitKey,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n\n        if (this.data.actions?.Keystroke) {\n          element.addEventListener(\"beforeinput\", event => {\n            elementData.lastCommittedValue = null;\n            const { data, target } = event;\n            const { value, selectionStart, selectionEnd } = target;\n\n            let selStart = selectionStart,\n              selEnd = selectionEnd;\n\n            switch (event.inputType) {\n              // https://rawgit.com/w3c/input-events/v1/index.html#interface-InputEvent-Attributes\n              case \"deleteWordBackward\": {\n                const match = value\n                  .substring(0, selectionStart)\n                  .match(/\\w*[^\\w]*$/);\n                if (match) {\n                  selStart -= match[0].length;\n                }\n                break;\n              }\n              case \"deleteWordForward\": {\n                const match = value\n                  .substring(selectionStart)\n                  .match(/^[^\\w]*\\w*/);\n                if (match) {\n                  selEnd += match[0].length;\n                }\n                break;\n              }\n              case \"deleteContentBackward\":\n                if (selectionStart === selectionEnd) {\n                  selStart -= 1;\n                }\n                break;\n              case \"deleteContentForward\":\n                if (selectionStart === selectionEnd) {\n                  selEnd += 1;\n                }\n                break;\n            }\n\n            // We handle the event ourselves.\n            event.preventDefault();\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                change: data || \"\",\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          elementData,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px * var(--scale-factor) - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.append(element);\n    return this.container;\n  }\n}\n\nclass SignatureWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: !!parameters.data.hasOwnCanvas });\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.exportValue === data.fieldValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, { value });\n    }\n\n    this.container.classList.add(\"buttonWidgetAnnotation\", \"checkBox\");\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.setAttribute(\"data-element-id\", id);\n\n    element.disabled = data.readOnly;\n    this._setRequired(element, this.data.required);\n    element.type = \"checkbox\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"exportValue\", data.exportValue);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const checkbox of this._getElementsByName(name, /* skipId = */ id)) {\n        const curChecked = checked && checkbox.exportValue === data.exportValue;\n        if (checkbox.domElement) {\n          checkbox.domElement.checked = curChecked;\n        }\n        storage.setValue(checkbox.id, { value: curChecked });\n      }\n      storage.setValue(id, { value: checked });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue || \"Off\";\n      event.target.checked = defaultValue === data.exportValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, { value: event.target.checked });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        null,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.append(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.classList.add(\"buttonWidgetAnnotation\", \"radioButton\");\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.fieldValue === data.buttonValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, { value });\n    }\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.setAttribute(\"data-element-id\", id);\n\n    element.disabled = data.readOnly;\n    this._setRequired(element, this.data.required);\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const radio of this._getElementsByName(name, /* skipId = */ id)) {\n        storage.setValue(radio.id, { value: false });\n      }\n      storage.setValue(id, { value: checked });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue;\n      event.target.checked =\n        defaultValue !== null &&\n        defaultValue !== undefined &&\n        defaultValue === data.buttonValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value: event => {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of this._getElementsByName(event.target.name)) {\n              const curChecked = checked && radio.id === id;\n              if (radio.domElement) {\n                radio.domElement.checked = curChecked;\n              }\n              storage.setValue(radio.id, { value: curChecked });\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        null,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.append(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { ignoreBorder: parameters.data.hasAppearance });\n  }\n\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.classList.add(\"buttonWidgetAnnotation\", \"pushButton\");\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    const linkElement = container.lastChild;\n    if (this.enableScripting && this.hasJSActions && linkElement) {\n      this._setDefaultPropertiesFromJS(linkElement);\n\n      linkElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        this._dispatchEventFromSandbox({}, jsEvent);\n      });\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.classList.add(\"choiceWidgetAnnotation\");\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    const storedData = storage.getValue(id, {\n      value: this.data.fieldValue,\n    });\n\n    const selectElement = document.createElement(\"select\");\n    GetElementsByNameSet.add(selectElement);\n    selectElement.setAttribute(\"data-element-id\", id);\n\n    selectElement.disabled = this.data.readOnly;\n    this._setRequired(selectElement, this.data.required);\n    selectElement.name = this.data.fieldName;\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n\n    let addAnEmptyEntry = this.data.combo && this.data.options.length > 0;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    selectElement.addEventListener(\"resetform\", event => {\n      const defaultValue = this.data.defaultFieldValue;\n      for (const option of selectElement.options) {\n        option.selected = option.value === defaultValue;\n      }\n    });\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (storedData.value.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n        addAnEmptyEntry = false;\n      }\n      selectElement.append(optionElement);\n    }\n\n    let removeEmptyEntry = null;\n    if (addAnEmptyEntry) {\n      const noneOptionElement = document.createElement(\"option\");\n      noneOptionElement.value = \" \";\n      noneOptionElement.setAttribute(\"hidden\", true);\n      noneOptionElement.setAttribute(\"selected\", true);\n      selectElement.prepend(noneOptionElement);\n\n      removeEmptyEntry = () => {\n        noneOptionElement.remove();\n        selectElement.removeEventListener(\"input\", removeEmptyEntry);\n        removeEmptyEntry = null;\n      };\n      selectElement.addEventListener(\"input\", removeEmptyEntry);\n    }\n\n    const getValue = isExport => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const { options, multiple } = selectElement;\n      if (!multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    let selectedValues = getValue(/* isExport */ false);\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            removeEmptyEntry?.();\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            for (const option of selectElement.options) {\n              option.selected = values.has(option.value);\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n              items: getItems(event),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, { value: null, items: [] });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const selectChild = selectElement.children[index];\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n\n            if (selectChild) {\n              selectChild.before(optionElement);\n            } else {\n              selectElement.append(optionElement);\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n              items: getItems(event),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.append(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n              items: getItems(event),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            for (const option of event.target.options) {\n              option.selected = indices.has(option.index);\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(/* isExport */ true);\n        storage.setValue(id, { value: exportValue });\n\n        event.preventDefault();\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value: selectedValues,\n            changeEx: exportValue,\n            willCommit: false,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        null,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n          [\"input\", \"Validate\"],\n        ],\n        event => event.target.value\n      );\n    } else {\n      selectElement.addEventListener(\"input\", function (event) {\n        storage.setValue(id, { value: getValue(/* isExport */ true) });\n      });\n    }\n\n    if (this.data.combo) {\n      this._setTextStyle(selectElement);\n    } else {\n      // Just use the default font size...\n      // it's a bit hard to guess what is a good size.\n    }\n    this._setBackgroundColor(selectElement);\n    this._setDefaultPropertiesFromJS(selectElement);\n\n    this.container.append(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const { data, elements } = parameters;\n    super(parameters, { isRenderable: AnnotationElement._hasPopupData(data) });\n    this.elements = elements;\n  }\n\n  render() {\n    this.container.classList.add(\"popupAnnotation\");\n\n    const popup = new PopupElement({\n      container: this.container,\n      color: this.data.color,\n      titleObj: this.data.titleObj,\n      modificationDate: this.data.modificationDate,\n      contentsObj: this.data.contentsObj,\n      richText: this.data.richText,\n      rect: this.data.rect,\n      parentRect: this.data.parentRect || null,\n      parent: this.parent,\n      elements: this.elements,\n      open: this.data.open,\n    });\n\n    const elementIds = [];\n    for (const element of this.elements) {\n      element.popup = popup;\n      elementIds.push(element.data.id);\n      element.addHighlightArea();\n    }\n\n    this.container.setAttribute(\n      \"aria-controls\",\n      elementIds.map(id => `${AnnotationPrefix}${id}`).join(\",\")\n    );\n\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  #dateTimePromise = null;\n\n  #boundKeyDown = this.#keyDown.bind(this);\n\n  #boundHide = this.#hide.bind(this);\n\n  #boundShow = this.#show.bind(this);\n\n  #boundToggle = this.#toggle.bind(this);\n\n  #color = null;\n\n  #container = null;\n\n  #contentsObj = null;\n\n  #elements = null;\n\n  #parent = null;\n\n  #parentRect = null;\n\n  #pinned = false;\n\n  #popup = null;\n\n  #rect = null;\n\n  #richText = null;\n\n  #titleObj = null;\n\n  #wasVisible = false;\n\n  constructor({\n    container,\n    color,\n    elements,\n    titleObj,\n    modificationDate,\n    contentsObj,\n    richText,\n    parent,\n    rect,\n    parentRect,\n    open,\n  }) {\n    this.#container = container;\n    this.#titleObj = titleObj;\n    this.#contentsObj = contentsObj;\n    this.#richText = richText;\n    this.#parent = parent;\n    this.#color = color;\n    this.#rect = rect;\n    this.#parentRect = parentRect;\n    this.#elements = elements;\n\n    const dateObject = PDFDateString.toDateObject(modificationDate);\n    if (dateObject) {\n      // The modification date is shown in the popup instead of the creation\n      // date if it is available and can be parsed correctly, which is\n      // consistent with other viewers such as Adobe Acrobat.\n      this.#dateTimePromise = parent.l10n.get(\"annotation_date_string\", {\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n    }\n\n    this.trigger = elements.flatMap(e => e.getElementsToTriggerPopup());\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this.#boundToggle);\n      element.addEventListener(\"mouseenter\", this.#boundShow);\n      element.addEventListener(\"mouseleave\", this.#boundHide);\n      element.classList.add(\"popupTriggerArea\");\n    }\n\n    // Attach the event listener to toggle the popup with the keyboard.\n    for (const element of elements) {\n      element.container?.addEventListener(\"keydown\", this.#boundKeyDown);\n    }\n\n    this.#container.hidden = true;\n    if (open) {\n      this.#toggle();\n    }\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      // Since the popup is lazily created, we need to ensure that it'll be\n      // created and displayed during reference tests.\n      this.#parent.popupShow.push(async () => {\n        if (this.#container.hidden) {\n          this.#show();\n        }\n        if (this.#dateTimePromise) {\n          await this.#dateTimePromise;\n        }\n      });\n    }\n  }\n\n  render() {\n    if (this.#popup) {\n      return;\n    }\n\n    const {\n      page: { view },\n      viewport: {\n        rawDims: { pageWidth, pageHeight, pageX, pageY },\n      },\n    } = this.#parent;\n    const popup = (this.#popup = document.createElement(\"div\"));\n    popup.className = \"popup\";\n\n    if (this.#color) {\n      const baseColor = (popup.style.outlineColor = Util.makeHexColor(\n        ...this.#color\n      ));\n      if (\n        (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n        CSS.supports(\"background-color\", \"color-mix(in srgb, red 30%, white)\")\n      ) {\n        popup.style.backgroundColor = `color-mix(in srgb, ${baseColor} 30%, white)`;\n      } else {\n        // color-mix isn't supported in some browsers hence this version.\n        // See https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color-mix#browser_compatibility\n        // TODO: Use color-mix when it's supported everywhere.\n        // Enlighten the color.\n        const BACKGROUND_ENLIGHT = 0.7;\n        popup.style.backgroundColor = Util.makeHexColor(\n          ...this.#color.map(c =>\n            Math.floor(BACKGROUND_ENLIGHT * (255 - c) + c)\n          )\n        );\n      }\n    }\n\n    const header = document.createElement(\"span\");\n    header.className = \"header\";\n    const title = document.createElement(\"h1\");\n    header.append(title);\n    ({ dir: title.dir, str: title.textContent } = this.#titleObj);\n    popup.append(header);\n\n    if (this.#dateTimePromise) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.classList.add(\"popupDate\");\n      this.#dateTimePromise.then(localized => {\n        modificationDate.textContent = localized;\n      });\n      header.append(modificationDate);\n    }\n\n    const contentsObj = this.#contentsObj;\n    const richText = this.#richText;\n    if (\n      richText?.str &&\n      (!contentsObj?.str || contentsObj.str === richText.str)\n    ) {\n      XfaLayer.render({\n        xfaHtml: richText.html,\n        intent: \"richText\",\n        div: popup,\n      });\n      popup.lastChild.classList.add(\"richText\", \"popupContent\");\n    } else {\n      const contents = this._formatContents(contentsObj);\n      popup.append(contents);\n    }\n\n    let useParentRect = !!this.#parentRect;\n    let rect = useParentRect ? this.#parentRect : this.#rect;\n    for (const element of this.#elements) {\n      if (!rect || Util.intersect(element.data.rect, rect) !== null) {\n        rect = element.data.rect;\n        useParentRect = true;\n        break;\n      }\n    }\n\n    const normalizedRect = Util.normalizeRect([\n      rect[0],\n      view[3] - rect[1] + view[1],\n      rect[2],\n      view[3] - rect[3] + view[1],\n    ]);\n\n    const HORIZONTAL_SPACE_AFTER_ANNOTATION = 5;\n    const parentWidth = useParentRect\n      ? rect[2] - rect[0] + HORIZONTAL_SPACE_AFTER_ANNOTATION\n      : 0;\n    const popupLeft = normalizedRect[0] + parentWidth;\n    const popupTop = normalizedRect[1];\n\n    const { style } = this.#container;\n    style.left = `${(100 * (popupLeft - pageX)) / pageWidth}%`;\n    style.top = `${(100 * (popupTop - pageY)) / pageHeight}%`;\n\n    this.#container.append(popup);\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {Object<string, string>} contentsObj\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents({ str, dir }) {\n    const p = document.createElement(\"p\");\n    p.classList.add(\"popupContent\");\n    p.dir = dir;\n    const lines = str.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.append(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.append(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  #keyDown(event) {\n    if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n\n    if (event.key === \"Enter\" || (event.key === \"Escape\" && this.#pinned)) {\n      this.#toggle();\n    }\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   */\n  #toggle() {\n    this.#pinned = !this.#pinned;\n    if (this.#pinned) {\n      this.#show();\n      this.#container.addEventListener(\"click\", this.#boundToggle);\n      this.#container.addEventListener(\"keydown\", this.#boundKeyDown);\n    } else {\n      this.#hide();\n      this.#container.removeEventListener(\"click\", this.#boundToggle);\n      this.#container.removeEventListener(\"keydown\", this.#boundKeyDown);\n    }\n  }\n\n  /**\n   * Show the popup.\n   */\n  #show() {\n    if (!this.#popup) {\n      this.render();\n    }\n    if (!this.isVisible) {\n      this.#container.hidden = false;\n      this.#container.style.zIndex =\n        parseInt(this.#container.style.zIndex) + 1000;\n    } else if (this.#pinned) {\n      this.#container.classList.add(\"focused\");\n    }\n  }\n\n  /**\n   * Hide the popup.\n   */\n  #hide() {\n    this.#container.classList.remove(\"focused\");\n    if (this.#pinned || !this.isVisible) {\n      return;\n    }\n    this.#container.hidden = true;\n    this.#container.style.zIndex =\n      parseInt(this.#container.style.zIndex) - 1000;\n  }\n\n  forceHide() {\n    this.#wasVisible = this.isVisible;\n    if (!this.#wasVisible) {\n      return;\n    }\n    this.#container.hidden = true;\n  }\n\n  maybeShow() {\n    if (!this.#wasVisible) {\n      return;\n    }\n    this.#wasVisible = false;\n    this.#container.hidden = false;\n  }\n\n  get isVisible() {\n    return this.#container.hidden === false;\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n    this.textContent = parameters.data.textContent;\n    this.textPosition = parameters.data.textPosition;\n    this.annotationEditorType = AnnotationEditorType.FREETEXT;\n  }\n\n  render() {\n    this.container.classList.add(\"freeTextAnnotation\");\n\n    if (this.textContent) {\n      const content = document.createElement(\"div\");\n      content.classList.add(\"annotationTextContent\");\n      content.setAttribute(\"role\", \"comment\");\n      for (const line of this.textContent) {\n        const lineSpan = document.createElement(\"span\");\n        lineSpan.textContent = line;\n        content.append(lineSpan);\n      }\n      this.container.append(content);\n    }\n\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this._editOnDoubleClick();\n\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  #line = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"lineAnnotation\");\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = (this.#line = this.svgFactory.createElement(\"svg:line\"));\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n    line.setAttribute(\"fill\", \"transparent\");\n\n    svg.append(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#line;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  #square = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"squareAnnotation\");\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = (this.#square = this.svgFactory.createElement(\"svg:rect\"));\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"transparent\");\n\n    svg.append(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#square;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  #circle = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"circleAnnotation\");\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = (this.#circle =\n      this.svgFactory.createElement(\"svg:ellipse\"));\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"transparent\");\n\n    svg.append(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#circle;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  #polyline = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.classList.add(this.containerClassName);\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = (this.#polyline = this.svgFactory.createElement(\n      this.svgElementName\n    ));\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"transparent\");\n\n    svg.append(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#polyline;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"caretAnnotation\");\n\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  #polylines = [];\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n    this.annotationEditorType = AnnotationEditorType.INK;\n  }\n\n  render() {\n    this.container.classList.add(this.containerClassName);\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      this.#polylines.push(polyline);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"transparent\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      if (!data.popupRef && this.hasPopupData) {\n        this._createPopup();\n      }\n\n      svg.append(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#polylines;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.classList.add(\"highlightAnnotation\");\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.classList.add(\"underlineAnnotation\");\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.classList.add(\"squigglyAnnotation\");\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.classList.add(\"strikeoutAnnotation\");\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"stampAnnotation\");\n\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  #trigger = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename, /* onlyStripPath = */ true);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.classList.add(\"fileAttachmentAnnotation\");\n\n    const { container, data } = this;\n    let trigger;\n    if (data.hasAppearance || data.fillAlpha === 0) {\n      trigger = document.createElement(\"div\");\n    } else {\n      // Unfortunately it seems that it's not clearly specified exactly what\n      // names are actually valid, since Table 184 contains:\n      //   Conforming readers shall provide predefined icon appearances for at\n      //   least the following standard names: GraphPushPin, PaperclipTag.\n      //   Additional names may be supported as well. Default value: PushPin.\n      trigger = document.createElement(\"img\");\n      trigger.src = `${this.imageResourcesPath}annotation-${\n        /paperclip/i.test(data.name) ? \"paperclip\" : \"pushpin\"\n      }.svg`;\n\n      if (data.fillAlpha && data.fillAlpha < 1) {\n        trigger.style = `filter: opacity(${Math.round(\n          data.fillAlpha * 100\n        )}%);`;\n\n        if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n          this.container.classList.add(\"hasFillAlpha\");\n        }\n      }\n    }\n    trigger.addEventListener(\"dblclick\", this.#download.bind(this));\n    this.#trigger = trigger;\n\n    const { isMac } = FeatureTest.platform;\n    container.addEventListener(\"keydown\", evt => {\n      if (evt.key === \"Enter\" && (isMac ? evt.metaKey : evt.ctrlKey)) {\n        this.#download();\n      }\n    });\n\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    } else {\n      trigger.classList.add(\"popupTriggerArea\");\n    }\n\n    container.append(trigger);\n    return container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#trigger;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   */\n  #download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPageProxy} page\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n * @property {Object<string, Array<Object>> | null} [fieldObjects]\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap]\n * @property {TextAccessibilityManager} [accessibilityManager]\n */\n\n/**\n * Manage the layer containing all the annotations.\n */\nclass AnnotationLayer {\n  #accessibilityManager = null;\n\n  #annotationCanvasMap = null;\n\n  #editableAnnotations = new Map();\n\n  constructor({\n    div,\n    accessibilityManager,\n    annotationCanvasMap,\n    l10n,\n    page,\n    viewport,\n  }) {\n    this.div = div;\n    this.#accessibilityManager = accessibilityManager;\n    this.#annotationCanvasMap = annotationCanvasMap;\n    this.l10n = l10n;\n    this.page = page;\n    this.viewport = viewport;\n    this.zIndex = 0;\n\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"GENERIC && !TESTING\")\n    ) {\n      this.l10n ||= NullL10n;\n    }\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      // For testing purposes.\n      Object.defineProperty(this, \"showPopups\", {\n        value: async () => {\n          for (const show of this.popupShow) {\n            await show();\n          }\n        },\n      });\n      this.popupShow = [];\n    }\n  }\n\n  #appendElement(element, id) {\n    const contentElement = element.firstChild || element;\n    contentElement.id = `${AnnotationPrefix}${id}`;\n\n    this.div.append(element);\n    this.#accessibilityManager?.moveElementInDOM(\n      this.div,\n      element,\n      contentElement,\n      /* isRemovable = */ false\n    );\n  }\n\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @param {AnnotationLayerParameters} params\n   * @memberof AnnotationLayer\n   */\n  async render(params) {\n    const { annotations } = params;\n    const layer = this.div;\n    setLayerDimensions(layer, this.viewport);\n\n    const popupToElements = new Map();\n    const elementParams = {\n      data: null,\n      layer,\n      linkService: params.linkService,\n      downloadManager: params.downloadManager,\n      imageResourcesPath: params.imageResourcesPath || \"\",\n      renderForms: params.renderForms !== false,\n      svgFactory: new DOMSVGFactory(),\n      annotationStorage: params.annotationStorage || new AnnotationStorage(),\n      enableScripting: params.enableScripting === true,\n      hasJSActions: params.hasJSActions,\n      fieldObjects: params.fieldObjects,\n      parent: this,\n      elements: null,\n    };\n\n    for (const data of annotations) {\n      if (data.noHTML) {\n        continue;\n      }\n      const isPopupAnnotation = data.annotationType === AnnotationType.POPUP;\n      if (!isPopupAnnotation) {\n        const { width, height } = getRectDims(data.rect);\n        if (width <= 0 || height <= 0) {\n          continue; // Ignore empty annotations.\n        }\n      } else {\n        const elements = popupToElements.get(data.id);\n        if (!elements) {\n          // Ignore popup annotations without a corresponding annotation.\n          continue;\n        }\n        elementParams.elements = elements;\n      }\n      elementParams.data = data;\n      const element = AnnotationElementFactory.create(elementParams);\n\n      if (!element.isRenderable) {\n        continue;\n      }\n\n      if (!isPopupAnnotation && data.popupRef) {\n        const elements = popupToElements.get(data.popupRef);\n        if (!elements) {\n          popupToElements.set(data.popupRef, [element]);\n        } else {\n          elements.push(element);\n        }\n      }\n\n      if (element.annotationEditorType > 0) {\n        this.#editableAnnotations.set(element.data.id, element);\n      }\n\n      const rendered = element.render();\n      if (data.hidden) {\n        rendered.style.visibility = \"hidden\";\n      }\n      this.#appendElement(rendered, data.id);\n    }\n\n    this.#setAnnotationCanvasMap();\n\n    await this.l10n.translate(layer);\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @param {AnnotationLayerParameters} viewport\n   * @memberof AnnotationLayer\n   */\n  update({ viewport }) {\n    const layer = this.div;\n    this.viewport = viewport;\n    setLayerDimensions(layer, { rotation: viewport.rotation });\n\n    this.#setAnnotationCanvasMap();\n    layer.hidden = false;\n  }\n\n  #setAnnotationCanvasMap() {\n    if (!this.#annotationCanvasMap) {\n      return;\n    }\n    const layer = this.div;\n    for (const [id, canvas] of this.#annotationCanvasMap) {\n      const element = layer.querySelector(`[data-annotation-id=\"${id}\"]`);\n      if (!element) {\n        continue;\n      }\n\n      const { firstChild } = element;\n      if (!firstChild) {\n        element.append(canvas);\n      } else if (firstChild.nodeName === \"CANVAS\") {\n        firstChild.replaceWith(canvas);\n      } else {\n        firstChild.before(canvas);\n      }\n    }\n    this.#annotationCanvasMap.clear();\n  }\n\n  getEditableAnnotations() {\n    return Array.from(this.#editableAnnotations.values());\n  }\n\n  getEditableAnnotation(id) {\n    return this.#editableAnnotations.get(id);\n  }\n}\n\nexport {\n  AnnotationLayer,\n  FreeTextAnnotationElement,\n  InkAnnotationElement,\n  StampAnnotationElement,\n};\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\nfunction scaleAndClamp(x) {\n  return Math.max(0, Math.min(255, 255 * x));\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_rgb([g]) {\n    g = scaleAndClamp(g);\n    return [g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_rgb(color) {\n    return color.map(scaleAndClamp);\n  }\n\n  static RGB_HTML(color) {\n    return `#${color.map(makeColorComp).join(\"\")}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static T_rgb() {\n    return [null];\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_rgb([c, y, m, k]) {\n    return [\n      scaleAndClamp(1 - Math.min(1, c + k)),\n      scaleAndClamp(1 - Math.min(1, m + k)),\n      scaleAndClamp(1 - Math.min(1, y + k)),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    const rgb = this.CMYK_RGB(components).slice(1);\n    return this.RGB_HTML(rgb);\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `web/` and\n *              `src/display/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\n/**\n * A subset of the l10n strings in the `l10n/en-US/viewer.properties` file.\n */\nconst DEFAULT_L10N_STRINGS = {\n  of_pages: \"of {{pagesCount}}\",\n  page_of_pages: \"({{pageNumber}} of {{pagesCount}})\",\n\n  document_properties_kb: \"{{size_kb}} KB ({{size_b}} bytes)\",\n  document_properties_mb: \"{{size_mb}} MB ({{size_b}} bytes)\",\n  document_properties_date_string: \"{{date}}, {{time}}\",\n  document_properties_page_size_unit_inches: \"in\",\n  document_properties_page_size_unit_millimeters: \"mm\",\n  document_properties_page_size_orientation_portrait: \"portrait\",\n  document_properties_page_size_orientation_landscape: \"landscape\",\n  document_properties_page_size_name_a3: \"A3\",\n  document_properties_page_size_name_a4: \"A4\",\n  document_properties_page_size_name_letter: \"Letter\",\n  document_properties_page_size_name_legal: \"Legal\",\n  document_properties_page_size_dimension_string:\n    \"{{width}} × {{height}} {{unit}} ({{orientation}})\",\n  document_properties_page_size_dimension_name_string:\n    \"{{width}} × {{height}} {{unit}} ({{name}}, {{orientation}})\",\n  document_properties_linearized_yes: \"Yes\",\n  document_properties_linearized_no: \"No\",\n\n  additional_layers: \"Additional Layers\",\n  page_landmark: \"Page {{page}}\",\n  thumb_page_title: \"Page {{page}}\",\n  thumb_page_canvas: \"Thumbnail of Page {{page}}\",\n\n  find_reached_top: \"Reached top of document, continued from bottom\",\n  find_reached_bottom: \"Reached end of document, continued from top\",\n  \"find_match_count[one]\": \"{{current}} of {{total}} match\",\n  \"find_match_count[other]\": \"{{current}} of {{total}} matches\",\n  \"find_match_count_limit[one]\": \"More than {{limit}} match\",\n  \"find_match_count_limit[other]\": \"More than {{limit}} matches\",\n  find_not_found: \"Phrase not found\",\n\n  page_scale_width: \"Page Width\",\n  page_scale_fit: \"Page Fit\",\n  page_scale_auto: \"Automatic Zoom\",\n  page_scale_actual: \"Actual Size\",\n  page_scale_percent: \"{{scale}}%\",\n\n  loading_error: \"An error occurred while loading the PDF.\",\n  invalid_file_error: \"Invalid or corrupted PDF file.\",\n  missing_file_error: \"Missing PDF file.\",\n  unexpected_response_error: \"Unexpected server response.\",\n  rendering_error: \"An error occurred while rendering the page.\",\n\n  annotation_date_string: \"{{date}}, {{time}}\",\n\n  printing_not_supported:\n    \"Warning: Printing is not fully supported by this browser.\",\n  printing_not_ready: \"Warning: The PDF is not fully loaded for printing.\",\n  web_fonts_disabled:\n    \"Web fonts are disabled: unable to use embedded PDF fonts.\",\n\n  free_text2_default_content: \"Start typing…\",\n  editor_free_text2_aria_label: \"Text Editor\",\n  editor_ink2_aria_label: \"Draw Editor\",\n  editor_ink_canvas_aria_label: \"User-created image\",\n  editor_alt_text_button_label: \"Alt text\",\n  editor_alt_text_edit_button_label: \"Edit alt text\",\n  editor_alt_text_decorative_tooltip: \"Marked as decorative\",\n};\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n  DEFAULT_L10N_STRINGS.print_progress_percent = \"{{progress}}%\";\n}\n\nfunction getL10nFallback(key, args) {\n  switch (key) {\n    case \"find_match_count\":\n      key = `find_match_count[${args.total === 1 ? \"one\" : \"other\"}]`;\n      break;\n    case \"find_match_count_limit\":\n      key = `find_match_count_limit[${args.limit === 1 ? \"one\" : \"other\"}]`;\n      break;\n  }\n  return DEFAULT_L10N_STRINGS[key] || \"\";\n}\n\n// Replaces {{arguments}} with their values.\nfunction formatL10nValue(text, args) {\n  if (!args) {\n    return text;\n  }\n  return text.replaceAll(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n    return name in args ? args[name] : \"{{\" + name + \"}}\";\n  });\n}\n\n/**\n * No-op implementation of the localization service.\n * @implements {IL10n}\n */\nconst NullL10n = {\n  async getLanguage() {\n    return \"en-us\";\n  },\n\n  async getDirection() {\n    return \"ltr\";\n  },\n\n  async get(key, args = null, fallback = getL10nFallback(key, args)) {\n    return formatL10nValue(fallback, args);\n  },\n\n  async translate(element) {},\n};\n\nexport { getL10nFallback, NullL10n };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./annotation_storage\").AnnotationStorage} AnnotationStorage */\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport { XfaText } from \"./xfa_text.js\";\n\n/**\n * @typedef {Object} XfaLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Object} xfaHtml\n * @property {AnnotationStorage} [annotationStorage]\n * @property {IPDFLinkService} linkService\n * @property {string} [intent] - (default value is 'display').\n */\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (\n          element.attributes.type === \"radio\" ||\n          element.attributes.type === \"checkbox\"\n        ) {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          } else if (storedData.value === element.attributes.xfaOff) {\n            // The checked attribute may have been set when opening the file,\n            // unset through the UI and we're here because of printing.\n            html.removeAttribute(\"checked\");\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked\n                ? event.target.getAttribute(\"xfaOn\")\n                : event.target.getAttribute(\"xfaOff\"),\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          html.setAttribute(\"value\", storedData.value);\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            } else if (option.attributes.hasOwnProperty(\"selected\")) {\n              delete option.attributes.selected;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? \"\"\n              : options[options.selectedIndex].value;\n          storage.setValue(id, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes({ html, element, storage = null, intent, linkService }) {\n    const { attributes } = element;\n    const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n\n    if (attributes.type === \"radio\") {\n      // Avoid to have a radio group when printing with the same as one\n      // already displayed.\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      if (value === null || value === undefined) {\n        continue;\n      }\n\n      switch (key) {\n        case \"class\":\n          if (value.length) {\n            html.setAttribute(key, value.join(\" \"));\n          }\n          break;\n        case \"dataId\":\n          // We don't need to add dataId in the html object but it can\n          // be useful to know its value when writing printing tests:\n          // in this case, don't skip dataId to have its value.\n          break;\n        case \"id\":\n          html.setAttribute(\"data-element-id\", value);\n          break;\n        case \"style\":\n          Object.assign(html.style, value);\n          break;\n        case \"textContent\":\n          html.textContent = value;\n          break;\n        default:\n          if (!isHTMLAnchorElement || (key !== \"href\" && key !== \"newWindow\")) {\n            html.setAttribute(key, value);\n          }\n      }\n    }\n\n    if (isHTMLAnchorElement) {\n      linkService.addLinkAttributes(\n        html,\n        attributes.href,\n        attributes.newWindow\n      );\n    }\n\n    // Set the value after the others to be sure to overwrite any other values.\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n\n  /**\n   * Render the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const linkService = parameters.linkService;\n    const root = parameters.xfaHtml;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes({\n        html: rootHtml,\n        element: root,\n        intent,\n        linkService,\n      });\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.append(rootHtml);\n\n    if (parameters.viewport) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n      rootDiv.style.transform = transform;\n    }\n\n    // Set defaults.\n    if (intent !== \"richText\") {\n      rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n    }\n\n    // Text nodes used for the text highlighter.\n    const textDivs = [];\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack.at(-1);\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack.at(-1)[1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.append(node);\n        continue;\n      }\n\n      const childHtml = child?.attributes?.xmlns\n        ? document.createElementNS(child.attributes.xmlns, name)\n        : document.createElement(name);\n\n      html.append(childHtml);\n      if (child.attributes) {\n        this.setAttributes({\n          html: childHtml,\n          element: child,\n          storage,\n          intent,\n          linkService,\n        });\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n        if (XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n        childHtml.append(node);\n      }\n    }\n\n    /**\n     * TODO: re-enable that stuff once we've JS implementation.\n     * See https://bugzilla.mozilla.org/show_bug.cgi?id=1719465.\n     *\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaDisabled input, .xfaDisabled textarea\"\n     * )) {\n     * el.setAttribute(\"disabled\", true);\n     * }\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaReadOnly input, .xfaReadOnly textarea\"\n     * )) {\n     * el.setAttribute(\"readOnly\", true);\n     * }\n     */\n\n    for (const el of rootDiv.querySelectorAll(\n      \".xfaNonInteractive input, .xfaNonInteractive textarea\"\n    )) {\n      el.setAttribute(\"readOnly\", true);\n    }\n\n    return {\n      textDivs,\n    };\n  }\n\n  /**\n   * Update the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnnotationEditorParamsType,\n  AnnotationEditorType,\n  Util,\n} from \"../../shared/util.js\";\nimport { AnnotationEditor } from \"./editor.js\";\nimport { InkAnnotationElement } from \"../annotation_layer.js\";\nimport { noContextMenu } from \"../display_utils.js\";\nimport { opacityToHex } from \"./tools.js\";\n\n/**\n * Basic draw editor in order to generate an Ink annotation.\n */\nclass InkEditor extends AnnotationEditor {\n  #baseHeight = 0;\n\n  #baseWidth = 0;\n\n  #boundCanvasPointermove = this.canvasPointermove.bind(this);\n\n  #boundCanvasPointerleave = this.canvasPointerleave.bind(this);\n\n  #boundCanvasPointerup = this.canvasPointerup.bind(this);\n\n  #boundCanvasPointerdown = this.canvasPointerdown.bind(this);\n\n  #currentPath2D = new Path2D();\n\n  #disableEditing = false;\n\n  #hasSomethingToDraw = false;\n\n  #isCanvasInitialized = false;\n\n  #observer = null;\n\n  #realWidth = 0;\n\n  #realHeight = 0;\n\n  #requestFrameCallback = null;\n\n  static _defaultColor = null;\n\n  static _defaultOpacity = 1;\n\n  static _defaultThickness = 1;\n\n  static _type = \"ink\";\n\n  constructor(params) {\n    super({ ...params, name: \"inkEditor\" });\n    this.color = params.color || null;\n    this.thickness = params.thickness || null;\n    this.opacity = params.opacity || null;\n    this.paths = [];\n    this.bezierPath2D = [];\n    this.allRawPaths = [];\n    this.currentPath = [];\n    this.scaleFactor = 1;\n    this.translationX = this.translationY = 0;\n    this.x = 0;\n    this.y = 0;\n    this._willKeepAspectRatio = true;\n  }\n\n  /** @inheritdoc */\n  static initialize(l10n) {\n    AnnotationEditor.initialize(l10n, {\n      strings: [\"editor_ink_canvas_aria_label\", \"editor_ink2_aria_label\"],\n    });\n  }\n\n  /** @inheritdoc */\n  static updateDefaultParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.INK_THICKNESS:\n        InkEditor._defaultThickness = value;\n        break;\n      case AnnotationEditorParamsType.INK_COLOR:\n        InkEditor._defaultColor = value;\n        break;\n      case AnnotationEditorParamsType.INK_OPACITY:\n        InkEditor._defaultOpacity = value / 100;\n        break;\n    }\n  }\n\n  /** @inheritdoc */\n  updateParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.INK_THICKNESS:\n        this.#updateThickness(value);\n        break;\n      case AnnotationEditorParamsType.INK_COLOR:\n        this.#updateColor(value);\n        break;\n      case AnnotationEditorParamsType.INK_OPACITY:\n        this.#updateOpacity(value);\n        break;\n    }\n  }\n\n  /** @inheritdoc */\n  static get defaultPropertiesToUpdate() {\n    return [\n      [AnnotationEditorParamsType.INK_THICKNESS, InkEditor._defaultThickness],\n      [\n        AnnotationEditorParamsType.INK_COLOR,\n        InkEditor._defaultColor || AnnotationEditor._defaultLineColor,\n      ],\n      [\n        AnnotationEditorParamsType.INK_OPACITY,\n        Math.round(InkEditor._defaultOpacity * 100),\n      ],\n    ];\n  }\n\n  /** @inheritdoc */\n  get propertiesToUpdate() {\n    return [\n      [\n        AnnotationEditorParamsType.INK_THICKNESS,\n        this.thickness || InkEditor._defaultThickness,\n      ],\n      [\n        AnnotationEditorParamsType.INK_COLOR,\n        this.color ||\n          InkEditor._defaultColor ||\n          AnnotationEditor._defaultLineColor,\n      ],\n      [\n        AnnotationEditorParamsType.INK_OPACITY,\n        Math.round(100 * (this.opacity ?? InkEditor._defaultOpacity)),\n      ],\n    ];\n  }\n\n  /**\n   * Update the thickness and make this action undoable.\n   * @param {number} thickness\n   */\n  #updateThickness(thickness) {\n    const savedThickness = this.thickness;\n    this.addCommands({\n      cmd: () => {\n        this.thickness = thickness;\n        this.#fitToContent();\n      },\n      undo: () => {\n        this.thickness = savedThickness;\n        this.#fitToContent();\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.INK_THICKNESS,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /**\n   * Update the color and make this action undoable.\n   * @param {string} color\n   */\n  #updateColor(color) {\n    const savedColor = this.color;\n    this.addCommands({\n      cmd: () => {\n        this.color = color;\n        this.#redraw();\n      },\n      undo: () => {\n        this.color = savedColor;\n        this.#redraw();\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.INK_COLOR,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /**\n   * Update the opacity and make this action undoable.\n   * @param {number} opacity\n   */\n  #updateOpacity(opacity) {\n    opacity /= 100;\n    const savedOpacity = this.opacity;\n    this.addCommands({\n      cmd: () => {\n        this.opacity = opacity;\n        this.#redraw();\n      },\n      undo: () => {\n        this.opacity = savedOpacity;\n        this.#redraw();\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.INK_OPACITY,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /** @inheritdoc */\n  rebuild() {\n    if (!this.parent) {\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n\n    if (!this.canvas) {\n      this.#createCanvas();\n      this.#createObserver();\n    }\n\n    if (!this.isAttachedToDOM) {\n      // At some point this editor was removed and we're rebuilding it,\n      // hence we must add it to its parent.\n      this.parent.add(this);\n      this.#setCanvasDims();\n    }\n    this.#fitToContent();\n  }\n\n  /** @inheritdoc */\n  remove() {\n    if (this.canvas === null) {\n      return;\n    }\n\n    if (!this.isEmpty()) {\n      this.commit();\n    }\n\n    // Destroy the canvas.\n    this.canvas.width = this.canvas.height = 0;\n    this.canvas.remove();\n    this.canvas = null;\n\n    this.#observer.disconnect();\n    this.#observer = null;\n\n    super.remove();\n  }\n\n  setParent(parent) {\n    if (!this.parent && parent) {\n      // We've a parent hence the rescale will be handled thanks to the\n      // ResizeObserver.\n      this._uiManager.removeShouldRescale(this);\n    } else if (this.parent && parent === null) {\n      // The editor is removed from the DOM, hence we handle the rescale thanks\n      // to the onScaleChanging callback.\n      // This way, it'll be saved/printed correctly.\n      this._uiManager.addShouldRescale(this);\n    }\n    super.setParent(parent);\n  }\n\n  onScaleChanging() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const width = this.width * parentWidth;\n    const height = this.height * parentHeight;\n    this.setDimensions(width, height);\n  }\n\n  /** @inheritdoc */\n  enableEditMode() {\n    if (this.#disableEditing || this.canvas === null) {\n      return;\n    }\n\n    super.enableEditMode();\n    this._isDraggable = false;\n    this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n  }\n\n  /** @inheritdoc */\n  disableEditMode() {\n    if (!this.isInEditMode() || this.canvas === null) {\n      return;\n    }\n\n    super.disableEditMode();\n    this._isDraggable = !this.isEmpty();\n    this.div.classList.remove(\"editing\");\n\n    this.canvas.removeEventListener(\n      \"pointerdown\",\n      this.#boundCanvasPointerdown\n    );\n  }\n\n  /** @inheritdoc */\n  onceAdded() {\n    this._isDraggable = !this.isEmpty();\n  }\n\n  /** @inheritdoc */\n  isEmpty() {\n    return (\n      this.paths.length === 0 ||\n      (this.paths.length === 1 && this.paths[0].length === 0)\n    );\n  }\n\n  #getInitialBBox() {\n    const {\n      parentRotation,\n      parentDimensions: [width, height],\n    } = this;\n    switch (parentRotation) {\n      case 90:\n        return [0, height, height, width];\n      case 180:\n        return [width, height, width, height];\n      case 270:\n        return [width, 0, height, width];\n      default:\n        return [0, 0, width, height];\n    }\n  }\n\n  /**\n   * Set line styles.\n   */\n  #setStroke() {\n    const { ctx, color, opacity, thickness, parentScale, scaleFactor } = this;\n    ctx.lineWidth = (thickness * parentScale) / scaleFactor;\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.miterLimit = 10;\n    ctx.strokeStyle = `${color}${opacityToHex(opacity)}`;\n  }\n\n  /**\n   * Start to draw on the canvas.\n   * @param {number} x\n   * @param {number} y\n   */\n  #startDrawing(x, y) {\n    this.canvas.addEventListener(\"contextmenu\", noContextMenu);\n    this.canvas.addEventListener(\"pointerleave\", this.#boundCanvasPointerleave);\n    this.canvas.addEventListener(\"pointermove\", this.#boundCanvasPointermove);\n    this.canvas.addEventListener(\"pointerup\", this.#boundCanvasPointerup);\n    this.canvas.removeEventListener(\n      \"pointerdown\",\n      this.#boundCanvasPointerdown\n    );\n\n    this.isEditing = true;\n    if (!this.#isCanvasInitialized) {\n      this.#isCanvasInitialized = true;\n      this.#setCanvasDims();\n      this.thickness ||= InkEditor._defaultThickness;\n      this.color ||=\n        InkEditor._defaultColor || AnnotationEditor._defaultLineColor;\n      this.opacity ??= InkEditor._defaultOpacity;\n    }\n    this.currentPath.push([x, y]);\n    this.#hasSomethingToDraw = false;\n    this.#setStroke();\n\n    this.#requestFrameCallback = () => {\n      this.#drawPoints();\n      if (this.#requestFrameCallback) {\n        window.requestAnimationFrame(this.#requestFrameCallback);\n      }\n    };\n    window.requestAnimationFrame(this.#requestFrameCallback);\n  }\n\n  /**\n   * Draw on the canvas.\n   * @param {number} x\n   * @param {number} y\n   */\n  #draw(x, y) {\n    const [lastX, lastY] = this.currentPath.at(-1);\n    if (this.currentPath.length > 1 && x === lastX && y === lastY) {\n      return;\n    }\n    const currentPath = this.currentPath;\n    let path2D = this.#currentPath2D;\n    currentPath.push([x, y]);\n    this.#hasSomethingToDraw = true;\n\n    if (currentPath.length <= 2) {\n      path2D.moveTo(...currentPath[0]);\n      path2D.lineTo(x, y);\n      return;\n    }\n\n    if (currentPath.length === 3) {\n      this.#currentPath2D = path2D = new Path2D();\n      path2D.moveTo(...currentPath[0]);\n    }\n\n    this.#makeBezierCurve(\n      path2D,\n      ...currentPath.at(-3),\n      ...currentPath.at(-2),\n      x,\n      y\n    );\n  }\n\n  #endPath() {\n    if (this.currentPath.length === 0) {\n      return;\n    }\n    const lastPoint = this.currentPath.at(-1);\n    this.#currentPath2D.lineTo(...lastPoint);\n  }\n\n  /**\n   * Stop to draw on the canvas.\n   * @param {number} x\n   * @param {number} y\n   */\n  #stopDrawing(x, y) {\n    this.#requestFrameCallback = null;\n\n    x = Math.min(Math.max(x, 0), this.canvas.width);\n    y = Math.min(Math.max(y, 0), this.canvas.height);\n\n    this.#draw(x, y);\n    this.#endPath();\n\n    // Interpolate the path entered by the user with some\n    // Bezier's curves in order to have a smoother path and\n    // to reduce the data size used to draw it in the PDF.\n    let bezier;\n    if (this.currentPath.length !== 1) {\n      bezier = this.#generateBezierPoints();\n    } else {\n      // We have only one point finally.\n      const xy = [x, y];\n      bezier = [[xy, xy.slice(), xy.slice(), xy]];\n    }\n    const path2D = this.#currentPath2D;\n    const currentPath = this.currentPath;\n    this.currentPath = [];\n    this.#currentPath2D = new Path2D();\n\n    const cmd = () => {\n      this.allRawPaths.push(currentPath);\n      this.paths.push(bezier);\n      this.bezierPath2D.push(path2D);\n      this.rebuild();\n    };\n\n    const undo = () => {\n      this.allRawPaths.pop();\n      this.paths.pop();\n      this.bezierPath2D.pop();\n      if (this.paths.length === 0) {\n        this.remove();\n      } else {\n        if (!this.canvas) {\n          this.#createCanvas();\n          this.#createObserver();\n        }\n        this.#fitToContent();\n      }\n    };\n\n    this.addCommands({ cmd, undo, mustExec: true });\n  }\n\n  #drawPoints() {\n    if (!this.#hasSomethingToDraw) {\n      return;\n    }\n    this.#hasSomethingToDraw = false;\n\n    const thickness = Math.ceil(this.thickness * this.parentScale);\n    const lastPoints = this.currentPath.slice(-3);\n    const x = lastPoints.map(xy => xy[0]);\n    const y = lastPoints.map(xy => xy[1]);\n    const xMin = Math.min(...x) - thickness;\n    const xMax = Math.max(...x) + thickness;\n    const yMin = Math.min(...y) - thickness;\n    const yMax = Math.max(...y) + thickness;\n\n    const { ctx } = this;\n    ctx.save();\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      // In Chrome, the clip() method doesn't work as expected.\n      ctx.clearRect(xMin, yMin, xMax - xMin, yMax - yMin);\n      ctx.beginPath();\n      ctx.rect(xMin, yMin, xMax - xMin, yMax - yMin);\n      ctx.clip();\n    } else {\n      ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    for (const path of this.bezierPath2D) {\n      ctx.stroke(path);\n    }\n    ctx.stroke(this.#currentPath2D);\n\n    ctx.restore();\n  }\n\n  #makeBezierCurve(path2D, x0, y0, x1, y1, x2, y2) {\n    const prevX = (x0 + x1) / 2;\n    const prevY = (y0 + y1) / 2;\n    const x3 = (x1 + x2) / 2;\n    const y3 = (y1 + y2) / 2;\n\n    path2D.bezierCurveTo(\n      prevX + (2 * (x1 - prevX)) / 3,\n      prevY + (2 * (y1 - prevY)) / 3,\n      x3 + (2 * (x1 - x3)) / 3,\n      y3 + (2 * (y1 - y3)) / 3,\n      x3,\n      y3\n    );\n  }\n\n  #generateBezierPoints() {\n    const path = this.currentPath;\n    if (path.length <= 2) {\n      return [[path[0], path[0], path.at(-1), path.at(-1)]];\n    }\n\n    const bezierPoints = [];\n    let i;\n    let [x0, y0] = path[0];\n    for (i = 1; i < path.length - 2; i++) {\n      const [x1, y1] = path[i];\n      const [x2, y2] = path[i + 1];\n      const x3 = (x1 + x2) / 2;\n      const y3 = (y1 + y2) / 2;\n\n      // The quadratic is: [[x0, y0], [x1, y1], [x3, y3]].\n      // Convert the quadratic to a cubic\n      // (see https://fontforge.org/docs/techref/bezier.html#converting-truetype-to-postscript)\n      const control1 = [x0 + (2 * (x1 - x0)) / 3, y0 + (2 * (y1 - y0)) / 3];\n      const control2 = [x3 + (2 * (x1 - x3)) / 3, y3 + (2 * (y1 - y3)) / 3];\n\n      bezierPoints.push([[x0, y0], control1, control2, [x3, y3]]);\n\n      [x0, y0] = [x3, y3];\n    }\n\n    const [x1, y1] = path[i];\n    const [x2, y2] = path[i + 1];\n\n    // The quadratic is: [[x0, y0], [x1, y1], [x2, y2]].\n    const control1 = [x0 + (2 * (x1 - x0)) / 3, y0 + (2 * (y1 - y0)) / 3];\n    const control2 = [x2 + (2 * (x1 - x2)) / 3, y2 + (2 * (y1 - y2)) / 3];\n\n    bezierPoints.push([[x0, y0], control1, control2, [x2, y2]]);\n    return bezierPoints;\n  }\n\n  /**\n   * Redraw all the paths.\n   */\n  #redraw() {\n    if (this.isEmpty()) {\n      this.#updateTransform();\n      return;\n    }\n    this.#setStroke();\n\n    const { canvas, ctx } = this;\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.#updateTransform();\n\n    for (const path of this.bezierPath2D) {\n      ctx.stroke(path);\n    }\n  }\n\n  /**\n   * Commit the curves we have in this editor.\n   */\n  commit() {\n    if (this.#disableEditing) {\n      return;\n    }\n\n    super.commit();\n\n    this.isEditing = false;\n    this.disableEditMode();\n\n    // This editor must be on top of the main ink editor.\n    this.setInForeground();\n\n    this.#disableEditing = true;\n    this.div.classList.add(\"disabled\");\n\n    this.#fitToContent(/* firstTime = */ true);\n    this.makeResizable();\n\n    this.parent.addInkEditorIfNeeded(/* isCommitting = */ true);\n\n    // When commiting, the position of this editor is changed, hence we must\n    // move it to the right position in the DOM.\n    this.moveInDOM();\n    this.div.focus({\n      preventScroll: true /* See issue #15744 */,\n    });\n  }\n\n  /** @inheritdoc */\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    super.focusin(event);\n    this.enableEditMode();\n  }\n\n  /**\n   * onpointerdown callback for the canvas we're drawing on.\n   * @param {PointerEvent} event\n   */\n  canvasPointerdown(event) {\n    if (event.button !== 0 || !this.isInEditMode() || this.#disableEditing) {\n      return;\n    }\n\n    // We want to draw on top of any other editors.\n    // Since it's the last child, there's no need to give it a higher z-index.\n    this.setInForeground();\n\n    event.preventDefault();\n\n    if (event.type !== \"mouse\") {\n      this.div.focus();\n    }\n\n    this.#startDrawing(event.offsetX, event.offsetY);\n  }\n\n  /**\n   * onpointermove callback for the canvas we're drawing on.\n   * @param {PointerEvent} event\n   */\n  canvasPointermove(event) {\n    event.preventDefault();\n    this.#draw(event.offsetX, event.offsetY);\n  }\n\n  /**\n   * onpointerup callback for the canvas we're drawing on.\n   * @param {PointerEvent} event\n   */\n  canvasPointerup(event) {\n    event.preventDefault();\n    this.#endDrawing(event);\n  }\n\n  /**\n   * onpointerleave callback for the canvas we're drawing on.\n   * @param {PointerEvent} event\n   */\n  canvasPointerleave(event) {\n    this.#endDrawing(event);\n  }\n\n  /**\n   * End the drawing.\n   * @param {PointerEvent} event\n   */\n  #endDrawing(event) {\n    this.canvas.removeEventListener(\n      \"pointerleave\",\n      this.#boundCanvasPointerleave\n    );\n    this.canvas.removeEventListener(\n      \"pointermove\",\n      this.#boundCanvasPointermove\n    );\n    this.canvas.removeEventListener(\"pointerup\", this.#boundCanvasPointerup);\n    this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n\n    // Slight delay to avoid the context menu to appear (it can happen on a long\n    // tap with a pen).\n    setTimeout(() => {\n      this.canvas.removeEventListener(\"contextmenu\", noContextMenu);\n    }, 10);\n\n    this.#stopDrawing(event.offsetX, event.offsetY);\n\n    this.addToAnnotationStorage();\n\n    // Since the ink editor covers all of the page and we want to be able\n    // to select another editor, we just put this one in the background.\n    this.setInBackground();\n  }\n\n  /**\n   * Create the canvas element.\n   */\n  #createCanvas() {\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.width = this.canvas.height = 0;\n    this.canvas.className = \"inkEditorCanvas\";\n\n    AnnotationEditor._l10nPromise\n      .get(\"editor_ink_canvas_aria_label\")\n      .then(msg => this.canvas?.setAttribute(\"aria-label\", msg));\n    this.div.append(this.canvas);\n    this.ctx = this.canvas.getContext(\"2d\");\n  }\n\n  /**\n   * Create the resize observer.\n   */\n  #createObserver() {\n    this.#observer = new ResizeObserver(entries => {\n      const rect = entries[0].contentRect;\n      if (rect.width && rect.height) {\n        this.setDimensions(rect.width, rect.height);\n      }\n    });\n    this.#observer.observe(this.div);\n  }\n\n  /** @inheritdoc */\n  get isResizable() {\n    return !this.isEmpty() && this.#disableEditing;\n  }\n\n  /** @inheritdoc */\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n\n    let baseX, baseY;\n    if (this.width) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n\n    super.render();\n\n    AnnotationEditor._l10nPromise\n      .get(\"editor_ink2_aria_label\")\n      .then(msg => this.div?.setAttribute(\"aria-label\", msg));\n\n    const [x, y, w, h] = this.#getInitialBBox();\n    this.setAt(x, y, 0, 0);\n    this.setDims(w, h);\n\n    this.#createCanvas();\n\n    if (this.width) {\n      // This editor was created in using copy (ctrl+c).\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      this.setAspectRatio(this.width * parentWidth, this.height * parentHeight);\n      this.setAt(\n        baseX * parentWidth,\n        baseY * parentHeight,\n        this.width * parentWidth,\n        this.height * parentHeight\n      );\n      this.#isCanvasInitialized = true;\n      this.#setCanvasDims();\n      this.setDims(this.width * parentWidth, this.height * parentHeight);\n      this.#redraw();\n      this.div.classList.add(\"disabled\");\n    } else {\n      this.div.classList.add(\"editing\");\n      this.enableEditMode();\n    }\n\n    this.#createObserver();\n\n    return this.div;\n  }\n\n  #setCanvasDims() {\n    if (!this.#isCanvasInitialized) {\n      return;\n    }\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.canvas.width = Math.ceil(this.width * parentWidth);\n    this.canvas.height = Math.ceil(this.height * parentHeight);\n    this.#updateTransform();\n  }\n\n  /**\n   * When the dimensions of the div change the inner canvas must\n   * renew its dimensions, hence it must redraw its own contents.\n   * @param {number} width - the new width of the div\n   * @param {number} height - the new height of the div\n   * @returns\n   */\n  setDimensions(width, height) {\n    const roundedWidth = Math.round(width);\n    const roundedHeight = Math.round(height);\n    if (\n      this.#realWidth === roundedWidth &&\n      this.#realHeight === roundedHeight\n    ) {\n      return;\n    }\n\n    this.#realWidth = roundedWidth;\n    this.#realHeight = roundedHeight;\n\n    this.canvas.style.visibility = \"hidden\";\n\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.width = width / parentWidth;\n    this.height = height / parentHeight;\n    this.fixAndSetPosition();\n\n    if (this.#disableEditing) {\n      this.#setScaleFactor(width, height);\n    }\n\n    this.#setCanvasDims();\n    this.#redraw();\n\n    this.canvas.style.visibility = \"visible\";\n\n    // For any reason the dimensions couldn't be in percent but in pixels, hence\n    // we must fix them.\n    this.fixDims();\n  }\n\n  #setScaleFactor(width, height) {\n    const padding = this.#getPadding();\n    const scaleFactorW = (width - padding) / this.#baseWidth;\n    const scaleFactorH = (height - padding) / this.#baseHeight;\n    this.scaleFactor = Math.min(scaleFactorW, scaleFactorH);\n  }\n\n  /**\n   * Update the canvas transform.\n   */\n  #updateTransform() {\n    const padding = this.#getPadding() / 2;\n    this.ctx.setTransform(\n      this.scaleFactor,\n      0,\n      0,\n      this.scaleFactor,\n      this.translationX * this.scaleFactor + padding,\n      this.translationY * this.scaleFactor + padding\n    );\n  }\n\n  /**\n   * Convert into a Path2D.\n   * @param {Array<Array<number>>} bezier\n   * @returns {Path2D}\n   */\n  static #buildPath2D(bezier) {\n    const path2D = new Path2D();\n    for (let i = 0, ii = bezier.length; i < ii; i++) {\n      const [first, control1, control2, second] = bezier[i];\n      if (i === 0) {\n        path2D.moveTo(...first);\n      }\n      path2D.bezierCurveTo(\n        control1[0],\n        control1[1],\n        control2[0],\n        control2[1],\n        second[0],\n        second[1]\n      );\n    }\n    return path2D;\n  }\n\n  static #toPDFCoordinates(points, rect, rotation) {\n    const [blX, blY, trX, trY] = rect;\n\n    switch (rotation) {\n      case 0:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] += blX;\n          points[i + 1] = trY - points[i + 1];\n        }\n        break;\n      case 90:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = points[i + 1] + blX;\n          points[i + 1] = x + blY;\n        }\n        break;\n      case 180:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] = trX - points[i];\n          points[i + 1] += blY;\n        }\n        break;\n      case 270:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = trX - points[i + 1];\n          points[i + 1] = trY - x;\n        }\n        break;\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n    return points;\n  }\n\n  static #fromPDFCoordinates(points, rect, rotation) {\n    const [blX, blY, trX, trY] = rect;\n\n    switch (rotation) {\n      case 0:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] -= blX;\n          points[i + 1] = trY - points[i + 1];\n        }\n        break;\n      case 90:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = points[i + 1] - blY;\n          points[i + 1] = x - blX;\n        }\n        break;\n      case 180:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] = trX - points[i];\n          points[i + 1] -= blY;\n        }\n        break;\n      case 270:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = trY - points[i + 1];\n          points[i + 1] = trX - x;\n        }\n        break;\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n    return points;\n  }\n\n  /**\n   * Transform and serialize the paths.\n   * @param {number} s - scale factor\n   * @param {number} tx - abscissa of the translation\n   * @param {number} ty - ordinate of the translation\n   * @param {Array<number>} rect - the bounding box of the annotation\n   */\n  #serializePaths(s, tx, ty, rect) {\n    const paths = [];\n    const padding = this.thickness / 2;\n    const shiftX = s * tx + padding;\n    const shiftY = s * ty + padding;\n    for (const bezier of this.paths) {\n      const buffer = [];\n      const points = [];\n      for (let j = 0, jj = bezier.length; j < jj; j++) {\n        const [first, control1, control2, second] = bezier[j];\n        const p10 = s * first[0] + shiftX;\n        const p11 = s * first[1] + shiftY;\n        const p20 = s * control1[0] + shiftX;\n        const p21 = s * control1[1] + shiftY;\n        const p30 = s * control2[0] + shiftX;\n        const p31 = s * control2[1] + shiftY;\n        const p40 = s * second[0] + shiftX;\n        const p41 = s * second[1] + shiftY;\n\n        if (j === 0) {\n          buffer.push(p10, p11);\n          points.push(p10, p11);\n        }\n        buffer.push(p20, p21, p30, p31, p40, p41);\n        points.push(p20, p21);\n        if (j === jj - 1) {\n          points.push(p40, p41);\n        }\n      }\n      paths.push({\n        bezier: InkEditor.#toPDFCoordinates(buffer, rect, this.rotation),\n        points: InkEditor.#toPDFCoordinates(points, rect, this.rotation),\n      });\n    }\n\n    return paths;\n  }\n\n  /**\n   * Get the bounding box containing all the paths.\n   * @returns {Array<number>}\n   */\n  #getBbox() {\n    let xMin = Infinity;\n    let xMax = -Infinity;\n    let yMin = Infinity;\n    let yMax = -Infinity;\n\n    for (const path of this.paths) {\n      for (const [first, control1, control2, second] of path) {\n        const bbox = Util.bezierBoundingBox(\n          ...first,\n          ...control1,\n          ...control2,\n          ...second\n        );\n        xMin = Math.min(xMin, bbox[0]);\n        yMin = Math.min(yMin, bbox[1]);\n        xMax = Math.max(xMax, bbox[2]);\n        yMax = Math.max(yMax, bbox[3]);\n      }\n    }\n\n    return [xMin, yMin, xMax, yMax];\n  }\n\n  /**\n   * The bounding box is computed with null thickness, so we must take\n   * it into account for the display.\n   * It corresponds to the total padding, hence it should be divided by 2\n   * in order to have left/right paddings.\n   * @returns {number}\n   */\n  #getPadding() {\n    return this.#disableEditing\n      ? Math.ceil(this.thickness * this.parentScale)\n      : 0;\n  }\n\n  /**\n   * Set the div position and dimensions in order to fit to\n   * the bounding box of the contents.\n   * @returns {undefined}\n   */\n  #fitToContent(firstTime = false) {\n    if (this.isEmpty()) {\n      return;\n    }\n\n    if (!this.#disableEditing) {\n      this.#redraw();\n      return;\n    }\n\n    const bbox = this.#getBbox();\n    const padding = this.#getPadding();\n    this.#baseWidth = Math.max(AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n    this.#baseHeight = Math.max(AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n\n    const width = Math.ceil(padding + this.#baseWidth * this.scaleFactor);\n    const height = Math.ceil(padding + this.#baseHeight * this.scaleFactor);\n\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.width = width / parentWidth;\n    this.height = height / parentHeight;\n\n    this.setAspectRatio(width, height);\n\n    const prevTranslationX = this.translationX;\n    const prevTranslationY = this.translationY;\n\n    this.translationX = -bbox[0];\n    this.translationY = -bbox[1];\n    this.#setCanvasDims();\n    this.#redraw();\n\n    this.#realWidth = width;\n    this.#realHeight = height;\n\n    this.setDims(width, height);\n    const unscaledPadding = firstTime ? padding / this.scaleFactor / 2 : 0;\n    this.translate(\n      prevTranslationX - this.translationX - unscaledPadding,\n      prevTranslationY - this.translationY - unscaledPadding\n    );\n  }\n\n  /** @inheritdoc */\n  static deserialize(data, parent, uiManager) {\n    if (data instanceof InkAnnotationElement) {\n      return null;\n    }\n    const editor = super.deserialize(data, parent, uiManager);\n\n    editor.thickness = data.thickness;\n    editor.color = Util.makeHexColor(...data.color);\n    editor.opacity = data.opacity;\n\n    const [pageWidth, pageHeight] = editor.pageDimensions;\n    const width = editor.width * pageWidth;\n    const height = editor.height * pageHeight;\n    const scaleFactor = editor.parentScale;\n    const padding = data.thickness / 2;\n\n    editor.#disableEditing = true;\n    editor.#realWidth = Math.round(width);\n    editor.#realHeight = Math.round(height);\n\n    const { paths, rect, rotation } = data;\n\n    for (let { bezier } of paths) {\n      bezier = InkEditor.#fromPDFCoordinates(bezier, rect, rotation);\n      const path = [];\n      editor.paths.push(path);\n      let p0 = scaleFactor * (bezier[0] - padding);\n      let p1 = scaleFactor * (bezier[1] - padding);\n      for (let i = 2, ii = bezier.length; i < ii; i += 6) {\n        const p10 = scaleFactor * (bezier[i] - padding);\n        const p11 = scaleFactor * (bezier[i + 1] - padding);\n        const p20 = scaleFactor * (bezier[i + 2] - padding);\n        const p21 = scaleFactor * (bezier[i + 3] - padding);\n        const p30 = scaleFactor * (bezier[i + 4] - padding);\n        const p31 = scaleFactor * (bezier[i + 5] - padding);\n        path.push([\n          [p0, p1],\n          [p10, p11],\n          [p20, p21],\n          [p30, p31],\n        ]);\n        p0 = p30;\n        p1 = p31;\n      }\n      const path2D = this.#buildPath2D(path);\n      editor.bezierPath2D.push(path2D);\n    }\n\n    const bbox = editor.#getBbox();\n    editor.#baseWidth = Math.max(AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n    editor.#baseHeight = Math.max(AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n    editor.#setScaleFactor(width, height);\n\n    return editor;\n  }\n\n  /** @inheritdoc */\n  serialize() {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const rect = this.getRect(0, 0);\n    const color = AnnotationEditor._colorManager.convert(this.ctx.strokeStyle);\n\n    return {\n      annotationType: AnnotationEditorType.INK,\n      color,\n      thickness: this.thickness,\n      opacity: this.opacity,\n      paths: this.#serializePaths(\n        this.scaleFactor / this.parentScale,\n        this.translationX,\n        this.translationY,\n        rect\n      ),\n      pageIndex: this.pageIndex,\n      rect,\n      rotation: this.rotation,\n      structTreeParentId: this._structTreeParentId,\n    };\n  }\n}\n\nexport { InkEditor };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnnotationEditorType, shadow } from \"../../shared/util.js\";\nimport { AnnotationEditor } from \"./editor.js\";\nimport { PixelsPerInch } from \"../display_utils.js\";\nimport { StampAnnotationElement } from \"../annotation_layer.js\";\n\n/**\n * Basic text editor in order to create a FreeTex annotation.\n */\nclass StampEditor extends AnnotationEditor {\n  #bitmap = null;\n\n  #bitmapId = null;\n\n  #bitmapPromise = null;\n\n  #bitmapUrl = null;\n\n  #bitmapFile = null;\n\n  #canvas = null;\n\n  #observer = null;\n\n  #resizeTimeoutId = null;\n\n  #isSvg = false;\n\n  #hasBeenAddedInUndoStack = false;\n\n  static _type = \"stamp\";\n\n  constructor(params) {\n    super({ ...params, name: \"stampEditor\" });\n    this.#bitmapUrl = params.bitmapUrl;\n    this.#bitmapFile = params.bitmapFile;\n  }\n\n  /** @inheritdoc */\n  static initialize(l10n) {\n    AnnotationEditor.initialize(l10n);\n  }\n\n  static get supportedTypes() {\n    // See https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types\n    // to know which types are supported by the browser.\n    const types = [\n      \"apng\",\n      \"avif\",\n      \"bmp\",\n      \"gif\",\n      \"jpeg\",\n      \"png\",\n      \"svg+xml\",\n      \"webp\",\n      \"x-icon\",\n    ];\n    return shadow(\n      this,\n      \"supportedTypes\",\n      types.map(type => `image/${type}`)\n    );\n  }\n\n  static get supportedTypesStr() {\n    return shadow(this, \"supportedTypesStr\", this.supportedTypes.join(\",\"));\n  }\n\n  /** @inheritdoc */\n  static isHandlingMimeForPasting(mime) {\n    return this.supportedTypes.includes(mime);\n  }\n\n  /** @inheritdoc */\n  static paste(item, parent) {\n    parent.pasteEditor(AnnotationEditorType.STAMP, {\n      bitmapFile: item.getAsFile(),\n    });\n  }\n\n  #getBitmapFetched(data, fromId = false) {\n    if (!data) {\n      this.remove();\n      return;\n    }\n    this.#bitmap = data.bitmap;\n    if (!fromId) {\n      this.#bitmapId = data.id;\n      this.#isSvg = data.isSvg;\n    }\n    this.#createCanvas();\n  }\n\n  #getBitmapDone() {\n    this.#bitmapPromise = null;\n    this._uiManager.enableWaiting(false);\n    if (this.#canvas) {\n      this.div.focus();\n    }\n  }\n\n  #getBitmap() {\n    if (this.#bitmapId) {\n      this._uiManager.enableWaiting(true);\n      this._uiManager.imageManager\n        .getFromId(this.#bitmapId)\n        .then(data => this.#getBitmapFetched(data, /* fromId = */ true))\n        .finally(() => this.#getBitmapDone());\n      return;\n    }\n\n    if (this.#bitmapUrl) {\n      const url = this.#bitmapUrl;\n      this.#bitmapUrl = null;\n      this._uiManager.enableWaiting(true);\n      this.#bitmapPromise = this._uiManager.imageManager\n        .getFromUrl(url)\n        .then(data => this.#getBitmapFetched(data))\n        .finally(() => this.#getBitmapDone());\n      return;\n    }\n\n    if (this.#bitmapFile) {\n      const file = this.#bitmapFile;\n      this.#bitmapFile = null;\n      this._uiManager.enableWaiting(true);\n      this.#bitmapPromise = this._uiManager.imageManager\n        .getFromFile(file)\n        .then(data => this.#getBitmapFetched(data))\n        .finally(() => this.#getBitmapDone());\n      return;\n    }\n\n    const input = document.createElement(\"input\");\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      input.hidden = true;\n      input.id = \"stampEditorFileInput\";\n      document.body.append(input);\n    }\n    input.type = \"file\";\n    input.accept = StampEditor.supportedTypesStr;\n    this.#bitmapPromise = new Promise(resolve => {\n      input.addEventListener(\"change\", async () => {\n        if (!input.files || input.files.length === 0) {\n          this.remove();\n        } else {\n          this._uiManager.enableWaiting(true);\n          const data = await this._uiManager.imageManager.getFromFile(\n            input.files[0]\n          );\n          this.#getBitmapFetched(data);\n        }\n        if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n          input.remove();\n        }\n        resolve();\n      });\n      input.addEventListener(\"cancel\", () => {\n        this.remove();\n        resolve();\n      });\n    }).finally(() => this.#getBitmapDone());\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"TESTING\")) {\n      input.click();\n    }\n  }\n\n  /** @inheritdoc */\n  remove() {\n    if (this.#bitmapId) {\n      this.#bitmap = null;\n      this._uiManager.imageManager.deleteId(this.#bitmapId);\n      this.#canvas?.remove();\n      this.#canvas = null;\n      this.#observer?.disconnect();\n      this.#observer = null;\n    }\n    super.remove();\n  }\n\n  /** @inheritdoc */\n  rebuild() {\n    if (!this.parent) {\n      // It's possible to have to rebuild an editor which is not on a visible\n      // page.\n      if (this.#bitmapId) {\n        this.#getBitmap();\n      }\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n\n    if (this.#bitmapId) {\n      this.#getBitmap();\n    }\n\n    if (!this.isAttachedToDOM) {\n      // At some point this editor was removed and we're rebuilting it,\n      // hence we must add it to its parent.\n      this.parent.add(this);\n    }\n  }\n\n  /** @inheritdoc */\n  onceAdded() {\n    this._isDraggable = true;\n    this.div.focus();\n  }\n\n  /** @inheritdoc */\n  isEmpty() {\n    return !(\n      this.#bitmapPromise ||\n      this.#bitmap ||\n      this.#bitmapUrl ||\n      this.#bitmapFile\n    );\n  }\n\n  /** @inheritdoc */\n  get isResizable() {\n    return true;\n  }\n\n  /** @inheritdoc */\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n\n    let baseX, baseY;\n    if (this.width) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n\n    super.render();\n    this.div.hidden = true;\n\n    if (this.#bitmap) {\n      this.#createCanvas();\n    } else {\n      this.#getBitmap();\n    }\n\n    if (this.width) {\n      // This editor was created in using copy (ctrl+c).\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      this.setAt(\n        baseX * parentWidth,\n        baseY * parentHeight,\n        this.width * parentWidth,\n        this.height * parentHeight\n      );\n    }\n\n    return this.div;\n  }\n\n  #createCanvas() {\n    const { div } = this;\n    let { width, height } = this.#bitmap;\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    const MAX_RATIO = 0.75;\n    if (this.width) {\n      width = this.width * pageWidth;\n      height = this.height * pageHeight;\n    } else if (\n      width > MAX_RATIO * pageWidth ||\n      height > MAX_RATIO * pageHeight\n    ) {\n      // If the the image is too big compared to the page dimensions\n      // (more than MAX_RATIO) then we scale it down.\n      const factor = Math.min(\n        (MAX_RATIO * pageWidth) / width,\n        (MAX_RATIO * pageHeight) / height\n      );\n      width *= factor;\n      height *= factor;\n    }\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.setDims(\n      (width * parentWidth) / pageWidth,\n      (height * parentHeight) / pageHeight\n    );\n\n    this._uiManager.enableWaiting(false);\n    const canvas = (this.#canvas = document.createElement(\"canvas\"));\n    div.append(canvas);\n    div.hidden = false;\n    this.#drawBitmap(width, height);\n    this.#createObserver();\n    if (!this.#hasBeenAddedInUndoStack) {\n      this.parent.addUndoableEditor(this);\n      this.#hasBeenAddedInUndoStack = true;\n    }\n\n    // There are multiple ways to add an image to the page, so here we just\n    // count the number of times an image is added to the page whatever the way\n    // is.\n    this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n      source: this,\n      details: {\n        type: \"editing\",\n        subtype: this.editorType,\n        data: {\n          action: \"inserted_image\",\n        },\n      },\n    });\n    this.addAltTextButton();\n  }\n\n  /**\n   * When the dimensions of the div change the inner canvas must\n   * renew its dimensions, hence it must redraw its own contents.\n   * @param {number} width - the new width of the div\n   * @param {number} height - the new height of the div\n   * @returns\n   */\n  #setDimensions(width, height) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.width = width / parentWidth;\n    this.height = height / parentHeight;\n    this.setDims(width, height);\n    if (this._initialOptions?.isCentered) {\n      this.center();\n    } else {\n      this.fixAndSetPosition();\n    }\n    this._initialOptions = null;\n    if (this.#resizeTimeoutId !== null) {\n      clearTimeout(this.#resizeTimeoutId);\n    }\n    // When the user is resizing the editor we just use CSS to scale the image\n    // to avoid redrawing it too often.\n    // And once the user stops resizing the editor we redraw the image in\n    // rescaling it correctly (see this.#scaleBitmap).\n    const TIME_TO_WAIT = 200;\n    this.#resizeTimeoutId = setTimeout(() => {\n      this.#resizeTimeoutId = null;\n      this.#drawBitmap(width, height);\n    }, TIME_TO_WAIT);\n  }\n\n  #scaleBitmap(width, height) {\n    const { width: bitmapWidth, height: bitmapHeight } = this.#bitmap;\n\n    let newWidth = bitmapWidth;\n    let newHeight = bitmapHeight;\n    let bitmap = this.#bitmap;\n    while (newWidth > 2 * width || newHeight > 2 * height) {\n      const prevWidth = newWidth;\n      const prevHeight = newHeight;\n\n      if (newWidth > 2 * width) {\n        // See bug 1820511 (Windows specific bug).\n        // TODO: once the above bug is fixed we could revert to:\n        // newWidth = Math.ceil(newWidth / 2);\n        newWidth =\n          newWidth >= 16384\n            ? Math.floor(newWidth / 2) - 1\n            : Math.ceil(newWidth / 2);\n      }\n      if (newHeight > 2 * height) {\n        newHeight =\n          newHeight >= 16384\n            ? Math.floor(newHeight / 2) - 1\n            : Math.ceil(newHeight / 2);\n      }\n\n      const offscreen = new OffscreenCanvas(newWidth, newHeight);\n      const ctx = offscreen.getContext(\"2d\");\n      ctx.drawImage(\n        bitmap,\n        0,\n        0,\n        prevWidth,\n        prevHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      bitmap = offscreen.transferToImageBitmap();\n    }\n\n    return bitmap;\n  }\n\n  #drawBitmap(width, height) {\n    width = Math.ceil(width);\n    height = Math.ceil(height);\n    const canvas = this.#canvas;\n    if (!canvas || (canvas.width === width && canvas.height === height)) {\n      return;\n    }\n    canvas.width = width;\n    canvas.height = height;\n    const bitmap = this.#isSvg\n      ? this.#bitmap\n      : this.#scaleBitmap(width, height);\n    const ctx = canvas.getContext(\"2d\");\n    ctx.filter = this._uiManager.hcmFilter;\n    ctx.drawImage(\n      bitmap,\n      0,\n      0,\n      bitmap.width,\n      bitmap.height,\n      0,\n      0,\n      width,\n      height\n    );\n  }\n\n  #serializeBitmap(toUrl) {\n    if (toUrl) {\n      if (this.#isSvg) {\n        const url = this._uiManager.imageManager.getSvgUrl(this.#bitmapId);\n        if (url) {\n          return url;\n        }\n      }\n      // We convert to a data url because it's sync and the url can live in the\n      // clipboard.\n      const canvas = document.createElement(\"canvas\");\n      ({ width: canvas.width, height: canvas.height } = this.#bitmap);\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(this.#bitmap, 0, 0);\n\n      return canvas.toDataURL();\n    }\n\n    if (this.#isSvg) {\n      const [pageWidth, pageHeight] = this.pageDimensions;\n      // Multiply by PixelsPerInch.PDF_TO_CSS_UNITS in order to increase the\n      // image resolution when rasterizing it.\n      const width = Math.round(\n        this.width * pageWidth * PixelsPerInch.PDF_TO_CSS_UNITS\n      );\n      const height = Math.round(\n        this.height * pageHeight * PixelsPerInch.PDF_TO_CSS_UNITS\n      );\n      const offscreen = new OffscreenCanvas(width, height);\n      const ctx = offscreen.getContext(\"2d\");\n      ctx.drawImage(\n        this.#bitmap,\n        0,\n        0,\n        this.#bitmap.width,\n        this.#bitmap.height,\n        0,\n        0,\n        width,\n        height\n      );\n      return offscreen.transferToImageBitmap();\n    }\n\n    return structuredClone(this.#bitmap);\n  }\n\n  /**\n   * Create the resize observer.\n   */\n  #createObserver() {\n    this.#observer = new ResizeObserver(entries => {\n      const rect = entries[0].contentRect;\n      if (rect.width && rect.height) {\n        this.#setDimensions(rect.width, rect.height);\n      }\n    });\n    this.#observer.observe(this.div);\n  }\n\n  /** @inheritdoc */\n  static deserialize(data, parent, uiManager) {\n    if (data instanceof StampAnnotationElement) {\n      return null;\n    }\n    const editor = super.deserialize(data, parent, uiManager);\n    const { rect, bitmapUrl, bitmapId, isSvg, accessibilityData } = data;\n    if (bitmapId && uiManager.imageManager.isValidId(bitmapId)) {\n      editor.#bitmapId = bitmapId;\n    } else {\n      editor.#bitmapUrl = bitmapUrl;\n    }\n    editor.#isSvg = isSvg;\n\n    const [parentWidth, parentHeight] = editor.pageDimensions;\n    editor.width = (rect[2] - rect[0]) / parentWidth;\n    editor.height = (rect[3] - rect[1]) / parentHeight;\n\n    if (accessibilityData) {\n      editor.altTextData = accessibilityData;\n    }\n\n    return editor;\n  }\n\n  /** @inheritdoc */\n  serialize(isForCopying = false, context = null) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const serialized = {\n      annotationType: AnnotationEditorType.STAMP,\n      bitmapId: this.#bitmapId,\n      pageIndex: this.pageIndex,\n      rect: this.getRect(0, 0),\n      rotation: this.rotation,\n      isSvg: this.#isSvg,\n      structTreeParentId: this._structTreeParentId,\n    };\n\n    if (isForCopying) {\n      // We don't know what's the final destination (this pdf or another one)\n      // of this annotation and the clipboard doesn't support ImageBitmaps,\n      // hence we serialize the bitmap to a data url.\n      serialized.bitmapUrl = this.#serializeBitmap(/* toUrl = */ true);\n      serialized.accessibilityData = this.altTextData;\n      return serialized;\n    }\n\n    const { decorative, altText } = this.altTextData;\n    if (!decorative && altText) {\n      serialized.accessibilityData = { type: \"Figure\", alt: altText };\n    }\n\n    if (context === null) {\n      return serialized;\n    }\n\n    context.stamps ||= new Map();\n    const area = this.#isSvg\n      ? (serialized.rect[2] - serialized.rect[0]) *\n        (serialized.rect[3] - serialized.rect[1])\n      : null;\n    if (!context.stamps.has(this.#bitmapId)) {\n      // We don't want to have multiple copies of the same bitmap in the\n      // annotationMap, hence we only add the bitmap the first time we meet it.\n      context.stamps.set(this.#bitmapId, { area, serialized });\n      serialized.bitmap = this.#serializeBitmap(/* toUrl = */ false);\n    } else if (this.#isSvg) {\n      // If we have multiple copies of the same svg but with different sizes,\n      // then we want to keep the biggest one.\n      const prevData = context.stamps.get(this.#bitmapId);\n      if (area > prevData.area) {\n        prevData.area = area;\n        prevData.serialized.bitmap.close();\n        prevData.serialized.bitmap = this.#serializeBitmap(/* toUrl = */ false);\n      }\n    }\n    return serialized;\n  }\n}\n\nexport { StampEditor };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/api\").OnProgressParameters} OnProgressParameters */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/api\").PDFDocumentLoadingTask} PDFDocumentLoadingTask */\n/** @typedef {import(\"./display/api\").PDFDocumentProxy} PDFDocumentProxy */\n/** @typedef {import(\"./display/api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display/api\").RenderTask} RenderTask */\n/** @typedef {import(\"./display/display_utils\").PageViewport} PageViewport */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/text_layer\").TextLayerRenderTask} TextLayerRenderTask */\n\nimport {\n  AbortException,\n  AnnotationEditorParamsType,\n  AnnotationEditorType,\n  AnnotationMode,\n  CMapCompressionType,\n  createValidAbsoluteUrl,\n  FeatureTest,\n  ImageKind,\n  InvalidPDFException,\n  MissingPDFException,\n  normalizeUnicode,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  PromiseCapability,\n  shadow,\n  UnexpectedResponseException,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport {\n  build,\n  getDocument,\n  PDFDataRangeTransport,\n  PDFWorker,\n  SVGGraphics,\n  version,\n} from \"./display/api.js\";\nimport {\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  loadScript,\n  noContextMenu,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  setLayerDimensions,\n} from \"./display/display_utils.js\";\nimport { renderTextLayer, updateTextLayer } from \"./display/text_layer.js\";\nimport { AnnotationEditorLayer } from \"./display/editor/annotation_editor_layer.js\";\nimport { AnnotationEditorUIManager } from \"./display/editor/tools.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nexport {\n  AbortException,\n  AnnotationEditorLayer,\n  AnnotationEditorParamsType,\n  AnnotationEditorType,\n  AnnotationEditorUIManager,\n  AnnotationLayer,\n  AnnotationMode,\n  build,\n  CMapCompressionType,\n  createValidAbsoluteUrl,\n  DOMSVGFactory,\n  FeatureTest,\n  getDocument,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  GlobalWorkerOptions,\n  ImageKind,\n  InvalidPDFException,\n  isDataScheme,\n  isPdfFile,\n  loadScript,\n  MissingPDFException,\n  noContextMenu,\n  normalizeUnicode,\n  OPS,\n  PasswordResponses,\n  PDFDataRangeTransport,\n  PDFDateString,\n  PDFWorker,\n  PermissionFlag,\n  PixelsPerInch,\n  PromiseCapability,\n  RenderingCancelledException,\n  renderTextLayer,\n  setLayerDimensions,\n  shadow,\n  SVGGraphics,\n  UnexpectedResponseException,\n  updateTextLayer,\n  Util,\n  VerbosityLevel,\n  version,\n  XfaLayer,\n};\n"]},"metadata":{},"sourceType":"script"}